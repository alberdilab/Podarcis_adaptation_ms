[["index.html", "AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Chapter 1 Introduction 1.1 Prepare the R environment", " AlberdiLab | Martin-Bideguren et al. 2025 Study title to be added Garazi Martin-Bideguren1,Carlos Cabido2, Kevin Kohl3, Antton Alberdi4 and Ostaizka Aizpurua5 Last update: 2025-08-28 Chapter 1 Introduction This webbook contains all the code used for data analysis in study of the individual-level metagenomic data of Podarcis muralis and Podarcis liolepis lizards from different environments during an experimental setup. 1.1 Prepare the R environment 1.1.1 Environment To reproduce all the analyses locally, clone this repository in your computer using: RStudio &gt; New Project &gt; Version Control &gt; Git And indicating the following git repository: https://github.com/alberdilab/Podarcis_adaptation.git Once the R project has been created, follow the instructions and code chunks shown in this webbook. 1.1.2 Libraries The following R packages are required for the data analysis. # Base library(R.utils) library(knitr) library(tidyverse) library(devtools) library(tinytable) library(janitor) library(readxl) # For tree handling library(ape) library(phyloseq) library(phytools) # For plotting library(ggplot2) library(ggrepel) library(ggpubr) library(ggnewscale) library(gridExtra) library(ggtreeExtra) library(ggtree) library(ggh4x) library(rstatix) library(ggpmisc) # For statistics library(spaa) library(vegan) library(Rtsne) library(geiger) library(hilldiv2) library(distillR) library(broom.mixed) library(corrplot) library(nlme) library(pairwiseAdonis) library(lme4) library(emmeans) library(UpSetR) library(ANCOMBC) University of Copenhagen, garazi.bideguren@sund.ku.dk↩︎ Sociedad de Ciencias Aranzadi-Departamento de Herpetología, ccabido@aranzadi.eus↩︎ University of Pittsburgh, kkohl78@gmail.com↩︎ University of Copenhagen, antton.alberdi@sund.ku.dk↩︎ University of Copenhagen, ostaizka.aizpurua@sund.ku.dk↩︎ "],["prepare-data.html", "Chapter 2 Prepare data 2.1 Load data 2.2 Create working objects 2.3 Filtering 2.4 Load data statistics 2.5 Prepare color scheme 2.6 Wrap working objects", " Chapter 2 Prepare data 2.1 Load data Load the original data files outputted by the bioinformatic pipeline. 2.1.1 Sample metadata sample_metadata &lt;- read_tsv(&quot;data/metadata.tsv&quot;) %&gt;% mutate(time_point = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% #filter(!time_point %in% c(&quot;Antibiotics&quot;,&quot;Transplant1&quot;, &quot;Transplant2&quot;)) %&gt;% filter(individual!=&quot;LI1_2nd_6&quot;) %&gt;% mutate(time_point=str_remove_all(time_point, &quot;Post-&quot;)) 2.1.2 Read counts read_counts_raw &lt;- read_tsv(&quot;data/genome.count.tsv&quot;) %&gt;% rename(genome=1) #Transformation of read_counts to combine data from both sequence rounds merge_and_rename &lt;- function(read_counts_raw) { read_counts_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } read_counts &lt;- merge_and_rename(read_counts_raw) 2.1.3 Genome base hits genome_hits_raw &lt;- read_tsv(&quot;data/genome.covered_bases.tsv&quot;) %&gt;% rename(genome=1) #Transformation of genome_hits to combine data from both sequence rounds merge_and_rename &lt;- function(genome_hits_raw) { genome_hits_raw %&gt;% # Gather the columns into long format pivot_longer(cols = -genome, names_to = &quot;col&quot;) %&gt;% # Extract prefix mutate(prefix = gsub(&quot;^(.*?)_.*&quot;, &quot;\\\\1&quot;, col)) %&gt;% # Group by prefix and genome, then summarize group_by(prefix, genome) %&gt;% summarize(value = sum(value)) %&gt;% # Spread the data back to wide format pivot_wider(names_from = prefix, values_from = value) } genome_hits &lt;- merge_and_rename(genome_hits_raw) 2.1.4 Genome taxonomy genome_taxonomy &lt;- read_tsv(&quot;data/gtdbtk.summary.tsv&quot;) %&gt;% select(mag_id = user_genome, classification) %&gt;% separate( classification, into = c(&quot;domain&quot;, &quot;phylum&quot;, &quot;class&quot;, &quot;order&quot;, &quot;family&quot;, &quot;genus&quot;, &quot;species&quot;), sep = &quot;;&quot;) %&gt;% rename(genome=1) 2.1.5 Genome quality genome_quality &lt;- read_tsv(&quot;data/quality_report.tsv&quot;) %&gt;% select( genome = Name, completeness = Completeness, contamination = Contamination, length = Genome_Size, gc = GC_Content ) genome_quality&lt;-genome_quality %&gt;% mutate (genome=str_remove_all(genome,&quot;.fa&quot;)) #Filter MAGs with over 70% completeness and less than 10% contamination genome_quality &lt;- genome_quality %&gt;% filter(completeness &gt; 70 &amp; contamination &lt; 10) 2.1.6 Genome tree genome_tree &lt;- read_tree(&quot;data/gtdbtk.backbone.bac120.classify.tree&quot;) genome_tree$tip.label &lt;- str_replace_all(genome_tree$tip.label,&quot;&#39;&quot;, &quot;&quot;) #remove single quotes in MAG names #Filter genome_taxonomy to keep MAGs with over 70% completeness and less than 10% contamination genome_taxonomy &lt;- genome_taxonomy %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_taxonomy$genome) # keep only MAG tips 2.1.7 Genome annotations genome_annotations &lt;- read_tsv(&quot;data/annotations.tsv.xz&quot;) %&gt;% rename(gene=1, genome=2, contig=3) #Filter only the MAGs with over 70% completeness and less than 10% contamination genome_annotations &lt;- genome_annotations %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) 2.2 Create working objects Transform the original data files into working objects for downstream analyses. 2.2.1 Merge genome taxonomy and quality genome_metadata &lt;- genome_taxonomy %&gt;% inner_join(genome_quality,by=join_by(genome==genome)) #join quality 2.2.2 Calculate genome coverage #Filter genome_hits for the MAGs with over 70% completeness and less than 10% contamination genome_hits &lt;- genome_hits %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) genome_coverage &lt;- genome_hits %&gt;% mutate(across(where(is.numeric), ~ ./genome_metadata$length)) 2.3 Filtering Two samples are removed from the analysis due to their low sequencing depth. #Counts_raw columns_to_exclude &lt;- c(&quot;AD91&quot;, &quot;AC85&quot;) # Columns to exclude (&quot;AD16&quot;,&quot;AD23&quot;, &quot;AD25&quot;, ) read_counts &lt;- read_counts %&gt;% select(-columns_to_exclude) #Coverage_table genome_coverage &lt;- genome_coverage %&gt;% select(-columns_to_exclude) #Metadata sample_metadata &lt;- sample_metadata %&gt;% filter(Tube_code %in% colnames(read_counts)) 2.3.1 Filter reads by coverage #Filter read_counts for the MAGs with over 70% completeness and less than 10% contamination read_counts &lt;- read_counts %&gt;% semi_join(genome_quality, by = &quot;genome&quot;) min_coverage=0.3 read_counts_filt &lt;- genome_coverage %&gt;% mutate(across(where(is.numeric), ~ ifelse(. &gt; min_coverage, 1, 0))) %&gt;% mutate(across(-1, ~ . * read_counts[[cur_column()]])) 2.3.2 Transform reads into genome counts readlength=150 genome_counts &lt;- read_counts %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) readlength=150 genome_counts_filt &lt;- read_counts_filt %&gt;% mutate(across(where(is.numeric), ~ . / (genome_metadata$length / readlength) )) 2.3.3 Distill annotations into GIFTs genome_gifts &lt;- distill(genome_annotations,GIFT_db,genomecol=2,annotcol=c(9,10,19), verbosity=F) 2.4 Load data statistics 2.4.1 Raw reads raw_reads &lt;- &quot;data/multiqc_general_stats_2.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, raw_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(raw_reads = sum(raw_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.2 Quality-filtered reads fastp_reads &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% select( sample = Sample, trimmed_reads = `total_sequences` ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize(trimmed_reads = sum(trimmed_reads, na.rm = TRUE)) %&gt;% rename(sample = sample_prefix) %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) %&gt;% mutate(sample = str_remove(sample, &quot;^fastp \\\\|\\\\s*&quot;)) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.3 Host-mapped reads host_mapped &lt;- &quot;data/multiqc_general_stats.txt&quot; %&gt;% read_tsv() %&gt;% filter(str_detect(Sample, &quot;lizard&quot;)) %&gt;% select( sample = Sample, host_mapped = `reads_mapped`, mapping_total = `raw_total_sequences` ) %&gt;% mutate( host_unmapped = mapping_total - host_mapped ) %&gt;% filter(!is.na(host_mapped)) %&gt;% separate( col = sample, into = c(&quot;host_name&quot;, &quot;sample&quot;), sep = &quot; \\\\| &quot; ) %&gt;% rename(mapped = host_mapped, unmapped = host_unmapped) %&gt;% select(-mapping_total) %&gt;% pivot_longer(-host_name:-sample) %&gt;% mutate( name = str_glue(&quot;{name}_{host_name}&quot;) ) %&gt;% select(-host_name) %&gt;% pivot_wider() %&gt;% mutate(sample = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample) %&gt;% summarize( mapped_lizard = sum(mapped_lizard), unmapped_lizard = sum(unmapped_lizard) ) %&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.4 Prokaryotic fraction singlem &lt;- &quot;data/singleM.tsv&quot; %&gt;% read_tsv() %&gt;% distinct() %&gt;% mutate( sample = sample %&gt;% str_remove_all(&quot;_1$&quot;), read_fraction = read_fraction %&gt;% str_remove(&quot;%&quot;) %&gt;% as.numeric(), read_fraction = read_fraction / 100 ) %&gt;% select( sample, singlem_prokaryotic_bases = bacterial_archaeal_bases, singlem_metagenome_size = metagenome_size, singlem_read_fraction = read_fraction, ) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( singlem_prokaryotic_bases = sum(singlem_prokaryotic_bases), singlem_metagenome_size = sum(singlem_metagenome_size), singlem_read_fraction = mean(singlem_read_fraction) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.5 MAG-mapped reads mag_mapping &lt;- read_tsv(&quot;data/contig.count.tsv.xz&quot;) %&gt;% pivot_longer(-sequence_id) %&gt;% summarise(value = sum(value), .by = &quot;name&quot;) %&gt;% rename(sample = name, mapped_mags = value) %&gt;% mutate(sample_prefix = str_extract(sample, &quot;^[^_]+&quot;)) %&gt;% group_by(sample_prefix) %&gt;% summarize( mapped_mags = sum(mapped_mags) ) %&gt;% rename(sample = sample_prefix)%&gt;% filter(sample %in% sample_metadata$Tube_code) 2.4.6 Wrap data statistics data_stats &lt;- raw_reads %&gt;% left_join(fastp_reads) %&gt;% left_join(host_mapped) %&gt;% left_join(singlem) %&gt;% left_join(mag_mapping) data_stats &lt;- data_stats %&gt;% filter(!str_detect(sample, &quot;nonlizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;lizard \\\\|&quot;)) %&gt;% filter(!str_detect(sample, &quot;refseq500 \\\\|&quot;)) 2.5 Prepare color scheme AlberdiLab projects use unified color schemes developed for the Earth Hologenome Initiative, to facilitate figure interpretation. phylum_colors &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(phylum, colors) %&gt;% unique() %&gt;% arrange(phylum) %&gt;% pull(colors, name=phylum) 2.6 Wrap working objects All working objects are wrapped into a single Rdata object to facilitate downstream usage. save(sample_metadata, genome_metadata, read_counts, genome_counts, genome_counts_filt, genome_tree, phylum_colors, data_stats, file = &quot;data/data_25082025.Rdata&quot;) save(genome_gifts, file = &quot;data/25082025gifts.Rdata&quot;) "],["data-statistics.html", "Chapter 3 Data statistics 3.1 Sequencing reads statistics 3.2 DNA fractions 3.3 Recovered microbial fraction", " Chapter 3 Data statistics load(&quot;data/data_25082025.Rdata&quot;) sample_metadata &lt;- sample_metadata %&gt;% mutate(time_point=case_when( time_point %in% c(&quot;Transplant1&quot;) ~ &quot;Donor1&quot;, TRUE ~ time_point ))%&gt;% mutate(time_point=case_when( time_point %in% c(&quot;Transplant2&quot;) ~ &quot;Donor2&quot;, TRUE ~ time_point )) %&gt;% mutate(Population=case_when( Population %in% c(&quot;Cold_wet&quot;) ~ &quot;Cold&quot;, TRUE ~ Population ))%&gt;% mutate(Population=case_when( Population %in% c(&quot;Hot_dry&quot;) ~ &quot;Warm&quot;, TRUE ~ Population )) 3.1 Sequencing reads statistics data_stats_filter &lt;- data_stats %&gt;% left_join(., sample_metadata[c(1,4,7,10)], by = join_by(sample == Tube_code)) %&gt;% filter(Population!=&quot;NA&quot;) data_stats_filter$raw_reads %&gt;% sum() [1] 4830595394 data_stats_filter$raw_reads %&gt;% mean() [1] 29276336 data_stats_filter$raw_reads %&gt;% sd() [1] 13490938 3.2 DNA fractions data_stats_filter %&gt;% mutate(mapped_perc=mapped_mags/trimmed_reads) %&gt;% summarise(mean=mean(mapped_perc),sd=sd(mapped_perc)) %&gt;% mutate(mean=str_c(round(mean,3),&quot;±&quot;,round(sd,3))) %&gt;% select(mean) %&gt;% pull() %&gt;% cat() 0.447±0.205 data_stats_filter %&gt;% mutate( low_quality = raw_reads - trimmed_reads, unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags ) %&gt;% select(sample, low_quality, mapped_lizard, mapped_mags, unmapped_reads) %&gt;% pivot_longer(-sample) %&gt;% mutate(name=factor(name,levels=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;))) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, fill = name)) + geom_bar(stat = &quot;identity&quot;, position = &quot;fill&quot;) + scale_fill_manual(name=&quot;Sequence type&quot;, breaks=c(&quot;low_quality&quot;,&quot;mapped_lizard&quot;,&quot;unmapped_reads&quot;,&quot;mapped_mags&quot;), labels=c(&quot;Low quality&quot;,&quot;Mapped to host&quot;,&quot;Unmapped&quot;,&quot;Mapped to MAGs&quot;), values=c(&quot;#CCCCCC&quot;, &quot;#bcdee1&quot;, &quot;#d8b8a3&quot;,&quot;#93655c&quot;))+ facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor1&quot;, &quot;Donor2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + theme_minimal() + theme(axis.text.x = element_text(angle = 90, hjust = 1, size=0)) + labs(y=&quot;DNA sequence fraction&quot;,x=&quot;Samples&quot;) 3.3 Recovered microbial fraction data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% select(sample, mag_proportion, singlem_read_fraction) %&gt;% mutate( mag_proportion = if_else(singlem_read_fraction == 0, 0, mag_proportion), singlem_read_fraction = if_else(singlem_read_fraction == 0, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &lt; mag_proportion, NA, singlem_read_fraction), singlem_read_fraction = if_else(singlem_read_fraction &gt; 1, 1, singlem_read_fraction) ) %&gt;% pivot_longer(-sample, names_to = &quot;proportion&quot;, values_to = &quot;value&quot;) %&gt;% mutate( proportion = factor( proportion, levels = c(&quot;mag_proportion&quot;, &quot;singlem_read_fraction&quot;) ) ) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(!is.na(time_point)) %&gt;% ggplot(aes(x = sample, y = value, color = proportion)) + geom_line(aes(group = sample), color = &quot;#f8a538&quot;) + geom_point() + scale_color_manual(name=&quot;Proportion&quot;, breaks=c(&quot;mag_proportion&quot;,&quot;singlem_read_fraction&quot;), labels=c(&quot;Recovered&quot;,&quot;Estimated&quot;), values=c(&quot;#52e1e8&quot;, &quot;#876b53&quot;))+ theme_minimal() + facet_grid(~factor(time_point, level=c(&quot;Wild&quot;, &quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Donor1&quot;, &quot;Donor2&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)), scales = &quot;free&quot;) + labs(y = &quot;Samples&quot;, x = &quot;Prokaryotic fraction&quot;) + scale_y_continuous(limits = c(0, 1)) + theme( axis.text.y = element_text(size = 4), axis.text.x = element_text( angle = 90, vjust = 0.5, hjust = 1, size = 0), legend.position = &quot;right&quot; ) 3.3.1 Domain-adjusted mapping rate (DAMR) data_stats_filter %&gt;% mutate( unmapped_reads = trimmed_reads - mapped_lizard - mapped_mags, mag_proportion = mapped_mags / (mapped_mags + unmapped_reads), singlem_read_fraction = singlem_read_fraction ) %&gt;% mutate(damr=pmin(1, mag_proportion/singlem_read_fraction)) %&gt;% filter(!is.na(time_point)) %&gt;% select(sample,damr, time_point, Population, type) %&gt;% tt() .table td.tinytable_css_kvufme8g88mksgdi5e91, .table th.tinytable_css_kvufme8g88mksgdi5e91 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e3yjcmnup6bdv8ib1rwo, .table th.tinytable_css_e3yjcmnup6bdv8ib1rwo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } sample damr time_point Population type AC79 1.0000000 Acclimation Cold Control AC80 1.0000000 Acclimation Cold Treatment AC81 0.9813013 Acclimation Cold Treatment AC82 0.7490771 Acclimation Cold Treatment AC83 1.0000000 Acclimation Cold Control AC84 1.0000000 Acclimation Cold Control AC86 0.8800275 Acclimation Cold Control AC87 0.9672854 Acclimation Cold Treatment AC88 0.3142108 Acclimation Cold Control AC89 0.9338962 Acclimation Cold Treatment AC90 1.0000000 Acclimation Cold Control AC91 1.0000000 Acclimation Cold Control AC92 1.0000000 Acclimation Cold Control AC93 1.0000000 Acclimation Cold Treatment AC94 0.9159348 Acclimation Cold Treatment AC95 0.9239904 Acclimation Cold Treatment AC96 0.9425962 Acclimation Cold Treatment AC97 0.9394886 Acclimation Warm Hot_control AC98 1.0000000 Acclimation Warm Hot_control AC99 1.0000000 Acclimation Warm Hot_control AD01 1.0000000 Acclimation Warm Hot_control AD02 1.0000000 Acclimation Warm Hot_control AD03 1.0000000 Acclimation Warm Hot_control AD04 0.8896057 Acclimation Warm Hot_control AD05 1.0000000 Acclimation Warm Hot_control AD07 0.9515379 Acclimation Warm Hot_control AD08 0.7045003 Antibiotics Cold Control AD09 1.0000000 Antibiotics Cold Control AD10 0.9598720 Antibiotics Cold Control AD11 0.6230176 Antibiotics Cold Control AD12 0.7487463 Antibiotics Cold Control AD13 1.0000000 Antibiotics Cold Control AD14 0.4536529 Antibiotics Cold Control AD15 1.0000000 Antibiotics Cold Control AD16 NA Antibiotics Cold Control AD17 0.8774871 Antibiotics Cold Treatment AD18 0.4991585 Antibiotics Cold Treatment AD19 0.4060523 Antibiotics Cold Treatment AD20 0.5227482 Antibiotics Cold Treatment AD21 0.6551882 Antibiotics Cold Treatment AD22 0.9106725 Antibiotics Cold Treatment AD23 0.2426698 Antibiotics Cold Treatment AD24 0.5972915 Antibiotics Cold Treatment AD25 0.4083656 Antibiotics Cold Treatment AD26 0.9204825 Antibiotics Warm Hot_control AD27 0.5215059 Antibiotics Warm Hot_control AD28 0.8180607 Antibiotics Warm Hot_control AD29 0.7175978 Antibiotics Warm Hot_control AD30 0.9937574 Antibiotics Warm Hot_control AD32 0.6710817 Antibiotics Warm Hot_control AD33 0.6778368 Antibiotics Warm Hot_control AD34 0.4642326 Antibiotics Warm Hot_control AD36 0.8288365 Donor1 Cold Control AD37 0.9530848 Donor1 Cold Control AD38 0.9247925 Donor1 Cold Control AD39 1.0000000 Donor1 Cold Control AD40 0.9991552 Donor1 Cold Control AD41 0.9550964 Donor1 Cold Control AD42 1.0000000 Donor1 Cold Control AD43 1.0000000 Donor1 Cold Control AD44 0.9108807 Donor1 Cold Control AD46 0.8708468 Donor1 Cold Treatment AD47 0.8328653 Donor1 Cold Treatment AD49 0.8940294 Donor1 Cold Treatment AD50 0.8757711 Donor1 Cold Treatment AD51 0.8479193 Donor1 Cold Treatment AD52 0.8596870 Donor1 Cold Treatment AD53 0.8528974 Donor1 Cold Treatment AD54 1.0000000 Donor1 Warm Hot_control AD55 1.0000000 Donor2 Cold Control AD56 0.9327538 Donor2 Cold Control AD57 1.0000000 Donor2 Cold Control AD58 1.0000000 Donor2 Cold Control AD59 1.0000000 Donor2 Cold Control AD60 0.7988844 Donor2 Cold Control AD61 1.0000000 Donor2 Cold Control AD62 1.0000000 Donor2 Cold Control AD63 0.8992048 Donor2 Cold Control AD65 1.0000000 Donor2 Cold Treatment AD66 0.8821027 Donor2 Cold Treatment AD68 0.8820274 Donor2 Cold Treatment AD70 0.9590793 Donor2 Cold Treatment AD71 0.8360540 Donor2 Cold Treatment AD72 0.8835253 Donor2 Cold Treatment AD73 1.0000000 Donor2 Warm Hot_control AD74 0.9017271 FMT1 Cold Control AD75 1.0000000 FMT1 Cold Treatment AD76 0.9862581 FMT1 Cold Treatment AD77 0.8963376 FMT1 Cold Treatment AD78 1.0000000 FMT1 Cold Treatment AD79 1.0000000 FMT1 Cold Control AD80 0.8808155 FMT1 Cold Treatment AD81 1.0000000 FMT1 Cold Control AD82 1.0000000 FMT1 Cold Control AD83 1.0000000 FMT1 Cold Treatment AD84 1.0000000 FMT1 Cold Treatment AD85 1.0000000 FMT1 Cold Control AD86 0.9889084 FMT1 Cold Control AD87 1.0000000 FMT1 Cold Control AD88 1.0000000 FMT1 Cold Treatment AD89 0.9562489 FMT1 Cold Control AD90 1.0000000 FMT1 Cold Control AD93 1.0000000 FMT1 Warm Hot_control AD94 0.7947750 FMT1 Warm Hot_control AD95 0.9506977 FMT1 Warm Hot_control AD96 0.9171413 FMT1 Warm Hot_control AD97 0.9257685 FMT1 Warm Hot_control AD98 0.9048349 FMT1 Warm Hot_control AD99 0.9966152 FMT1 Warm Hot_control AE01 1.0000000 FMT1 Warm Hot_control AE02 1.0000000 FMT1 Warm Hot_control AE04 1.0000000 FMT2 Cold Treatment AE05 1.0000000 FMT2 Cold Treatment AE06 1.0000000 FMT2 Cold Control AE07 0.7797794 FMT2 Cold Control AE08 1.0000000 FMT2 Cold Control AE09 1.0000000 FMT2 Cold Control AE91 0.9259146 FMT2 Cold Treatment AE92 1.0000000 FMT2 Cold Control AE93 1.0000000 FMT2 Cold Control AE94 0.9152960 FMT2 Cold Treatment AE95 1.0000000 FMT2 Cold Treatment AE96 0.7786112 FMT2 Cold Treatment AE97 0.9365037 FMT2 Cold Control AE98 1.0000000 FMT2 Cold Control AE99 0.8513354 FMT2 Cold Treatment AF01 0.9046369 FMT2 Cold Treatment AF02 1.0000000 FMT2 Cold Control AF03 0.9030087 FMT2 Cold Treatment AF04 1.0000000 FMT2 Warm Hot_control AF05 1.0000000 FMT2 Warm Hot_control AF06 1.0000000 FMT2 Warm Hot_control AF07 0.9526443 FMT2 Warm Hot_control AF08 1.0000000 FMT2 Warm Hot_control AF09 1.0000000 FMT2 Warm Hot_control AF10 0.9716162 FMT2 Warm Hot_control AF11 0.9654152 FMT2 Warm Hot_control AF13 0.8818742 FMT2 Warm Hot_control AFU87 0.8810513 Wild Cold Control AFU88 0.8317800 Wild Cold Treatment AFU91 0.8923699 Wild Cold Treatment AFU92 0.8094776 Wild Cold Treatment AFU93 0.8517368 Wild Cold Control AFU94 0.8325385 Wild Cold Treatment AFU95 0.8419270 Wild Cold Treatment AFU96 0.8326820 Wild Cold Control AFU97 0.8107271 Wild Cold Treatment AFU98 0.7506522 Wild Cold Control AFU99 0.8582371 Wild Cold Treatment AFV01 0.9331539 Wild Cold Treatment AFV02 0.8316460 Wild Cold Treatment AFV03 0.8752591 Wild Cold Control AFV04 0.9180285 Wild Cold Control AFV05 1.0000000 Wild Cold Control AFV06 1.0000000 Wild Cold Control AFV07 0.8460805 Wild Cold Control AFV08 0.7497043 Wild Warm Hot_control AFV09 0.5412999 Wild Warm Hot_control AFV10 0.8002499 Wild Warm Hot_control AFV11 0.8225298 Wild Warm Hot_control AFV12 0.7925988 Wild Warm Hot_control AFV14 0.8106269 Wild Warm Hot_control AFV15 0.9691106 Wild Warm Hot_control AFV16 0.8218990 Wild Warm Hot_control AFV17 0.8091152 Wild Warm Hot_control "],["mag-catalogue.html", "Chapter 4 MAG catalogue 4.1 Genome phylogeny 4.2 Genome quality 4.3 Functional overview 4.4 Functional ordination", " Chapter 4 MAG catalogue load(&quot;data/data_25082025.Rdata&quot;) 4.1 Genome phylogeny # Generate the phylum color heatmap phylum_heatmap &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% right_join(genome_metadata, by=join_by(phylum == phylum)) %&gt;% arrange(match(genome, genome_tree$tip.label)) %&gt;% select(genome,phylum) %&gt;% mutate(phylum = factor(phylum, levels = unique(phylum))) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate new species table newspecies_table &lt;- genome_metadata %&gt;% mutate(newspecies=ifelse(species==&quot;s__&quot;,&quot;Y&quot;,&quot;N&quot;)) %&gt;% select(genome,newspecies) %&gt;% column_to_rownames(var = &quot;genome&quot;) # Generate basal tree circular_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% # extend to ultrametric for the sake of visualisation ggtree(., layout=&quot;fan&quot;, open.angle=10, size=0.5) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** # Add phylum ring circular_tree &lt;- gheatmap(circular_tree, phylum_heatmap, offset=0.03, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + #geom_tiplab2(size=1, hjust=-0.1) + theme(legend.position = &quot;none&quot;, plot.margin = margin(0, 0, 0, 0), panel.margin = margin(0, 0, 0, 0)) # Flush color scale to enable a new color scheme in the next ring circular_tree &lt;- circular_tree + new_scale_fill() # Add completeness ring circular_tree &lt;- circular_tree + new_scale_fill() + scale_fill_gradient(low = &quot;#d1f4ba&quot;, high = &quot;#f4baba&quot;) + geom_fruit( data=genome_metadata, geom=geom_bar, mapping = aes(x=completeness, y=genome, fill=contamination), offset = 0.3, orientation=&quot;y&quot;, stat=&quot;identity&quot;) circular_tree &lt;- circular_tree + new_scale_fill() circular_tree &lt;- gheatmap(circular_tree, newspecies_table, offset=0.5, width=0.05, colnames=FALSE) + scale_fill_manual(values=c(&quot;#f4f4f4&quot;,&quot;#666666&quot;)) # Add text circular_tree &lt;- circular_tree + annotate(&#39;text&#39;, x=2.9, y=0, label=&#39; Phylum&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.6, y=0, label=&#39; Genome quality&#39;, family=&#39;ArialMT&#39;, size=3.5) + annotate(&#39;text&#39;, x=3.2, y=0, label=&#39; New species&#39;, family=&#39;ArialMT&#39;, size=3.5) #Plot circular tree circular_tree %&gt;% open_tree(30) %&gt;% rotate_tree(90) 4.2 Genome quality genome_metadata %&gt;% summarise(completeness_mean=mean(completeness) %&gt;% round(2) %&gt;% as.character(), completeness_sd=sd(completeness) %&gt;% round(2) %&gt;% as.character(), contamination_mean=mean(contamination) %&gt;% round(2), contamination_sd=sd(contamination) %&gt;% round(2)) %&gt;% unite(&quot;Completeness&quot;,completeness_mean, completeness_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% unite(&quot;Contamination&quot;,contamination_mean, contamination_sd, sep = &quot; ± &quot;, remove = TRUE) %&gt;% tt() .table td.tinytable_css_wzinfaw9hn5xnsr81hir, .table th.tinytable_css_wzinfaw9hn5xnsr81hir { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_38tuuxode2beiorxtirc, .table th.tinytable_css_38tuuxode2beiorxtirc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Completeness Contamination 92.99 ± 7.17 2.15 ± 2.19 #Generate quality biplot genome_biplot &lt;- genome_metadata %&gt;% select(c(genome,domain,phylum,completeness,contamination,length)) %&gt;% arrange(match(genome, rev(genome_tree$tip.label))) %&gt;% #sort MAGs according to phylogenetic tree ggplot(aes(x=completeness,y=contamination,size=length,color=phylum)) + geom_point(alpha=0.7) + ylim(c(10,0)) + scale_color_manual(values=phylum_colors) + labs(y= &quot;Contamination&quot;, x = &quot;Completeness&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) #Generate contamination boxplot genome_contamination &lt;- genome_metadata %&gt;% ggplot(aes(y=contamination)) + ylim(c(10,0)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0.40, 0),&quot;inches&quot;)) #add bottom-margin (top, right, bottom, left) #Generate completeness boxplot genome_completeness &lt;- genome_metadata %&gt;% ggplot(aes(x=completeness)) + xlim(c(50,100)) + geom_boxplot(colour = &quot;#999999&quot;, fill=&quot;#cccccc&quot;) + theme_void() + theme(legend.position = &quot;none&quot;, axis.title.x = element_blank(), axis.title.y = element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_blank(), axis.ticks.x=element_blank(), plot.margin = unit(c(0, 0, 0, 0.50),&quot;inches&quot;)) #add left-margin (top, right, bottom, left) #Render composite figure grid.arrange(grobs = list(genome_completeness,genome_biplot,genome_contamination), layout_matrix = rbind(c(1,1,1,1,1,1,1,1,1,1,1,4), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3), c(2,2,2,2,2,2,2,2,2,2,2,3))) 4.3 Functional overview 4.3.1 Predicted genes # Predicted genes pred_genes &lt;- genome_annotations %&gt;% nrow() cat(pred_genes) 930700 4.3.2 Number of annotated genes and percentages (doesn’t work) # Some annotation genome_annota &lt;- genome_annotations %&gt;% filter(if_any(c(ko_id, pfam_hits, cazy_hits), ~ !is.na(.))) %&gt;% nrow() cat(genome_annota) 700149 # Some annotation percentage genome_annota*100/pred_genes [1] 75.22822 4.3.3 Number of KEGG annotatated genes and percentages # KEGG annotation kegg_annota &lt;- genome_annotations %&gt;% filter(!is.na(ko_id)) %&gt;% nrow() cat(kegg_annota) 412617 # KEGG annotation percentage kegg_annota*100/genome_annota [1] 58.93274 # Aggregate basal GIFT into elements function_table &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) # Generate basal tree function_tree &lt;- force.ultrametric(genome_tree, method=&quot;extend&quot;) %&gt;% ggtree(., size = 0.3) *************************************************************** * Note: * * force.ultrametric does not include a formal method to * * ultrametricize a tree &amp; should only be used to coerce * * a phylogeny that fails is.ultrametric due to rounding -- * * not as a substitute for formal rate-smoothing methods. * *************************************************************** #Add phylum colors next to the tree tips function_tree &lt;- gheatmap(function_tree, phylum_heatmap, offset=0, width=0.1, colnames=FALSE) + scale_fill_manual(values=phylum_colors) + labs(fill=&quot;Phylum&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() #Add functions heatmap function_tree &lt;- gheatmap(function_tree, function_table, offset=0.5, width=3.5, colnames=FALSE) + vexpand(.08) + coord_cartesian(clip = &quot;off&quot;) + scale_fill_gradient(low = &quot;#f4f4f4&quot;, high = &quot;steelblue&quot;, na.value=&quot;white&quot;) + labs(fill=&quot;GIFT&quot;) #Reset fill scale to use a different colour profile in the heatmap function_tree &lt;- function_tree + new_scale_fill() # Add completeness barplots function_tree &lt;- function_tree + geom_fruit(data=genome_metadata, geom=geom_bar, grid.params=list(axis=&quot;x&quot;, text.size=2, nbreak = 1), axis.params=list(vline=TRUE), mapping = aes(x=length, y=genome, fill=completeness), offset = 3.8, orientation=&quot;y&quot;, stat=&quot;identity&quot;) + scale_fill_gradient(low = &quot;#cf8888&quot;, high = &quot;#a2cc87&quot;) + labs(fill=&quot;Genome\\ncompleteness&quot;) function_tree 4.4 Functional ordination gift_pcoa &lt;- genome_gifts %&gt;% to.elements(., GIFT_db) %&gt;% as.data.frame() %&gt;% vegdist(method=&quot;euclidean&quot;) %&gt;% pcoa() gift_pcoa_rel_eigen &lt;- gift_pcoa$values$Relative_eig[1:10] # Get genome positions gift_pcoa_vectors &lt;- gift_pcoa$vectors %&gt;% #extract vectors as.data.frame() %&gt;% select(Axis.1,Axis.2) # keep the first 2 axes gift_pcoa_eigenvalues &lt;- gift_pcoa$values$Eigenvalues[c(1,2)] gift_pcoa_gifts &lt;- cov(genome_gifts, scale(gift_pcoa_vectors)) %*% diag((gift_pcoa_eigenvalues/(nrow(genome_gifts)-1))^(-0.5)) %&gt;% as.data.frame() %&gt;% rename(Axis.1=1,Axis.2=2) %&gt;% rownames_to_column(var=&quot;label&quot;) %&gt;% #get function summary vectors mutate(func=substr(label,1,3)) %&gt;% group_by(func) %&gt;% summarise(Axis.1=mean(Axis.1), Axis.2=mean(Axis.2)) %&gt;% rename(label=func) %&gt;% filter(!label %in% c(&quot;S01&quot;,&quot;S02&quot;,&quot;S03&quot;)) set.seed(101) scale &lt;- 20 # scale for vector loadings gift_pcoa_vectors %&gt;% rownames_to_column(var=&quot;genome&quot;) %&gt;% left_join(genome_metadata, by=&quot;genome&quot;) %&gt;% ggplot() + #genome positions scale_color_manual(values=phylum_colors)+ geom_point(aes(x=Axis.1,y=Axis.2, color=phylum, size=length), alpha=0.9, shape=16) + #scale_color_manual(values=phylum_colors) + scale_size_continuous(range = c(0.1,5)) + #loading positions geom_segment(data=gift_pcoa_gifts, aes(x=0, y=0, xend=Axis.1 * scale, yend=Axis.2 * scale), arrow = arrow(length = unit(0.3, &quot;cm&quot;), type = &quot;open&quot;, angle = 25), linewidth = 0.5, color = &quot;black&quot;) + #Primary and secondary scale adjustments scale_x_continuous(name = paste0(&quot;PCoA1 (&quot;,round(gift_pcoa_rel_eigen[1]*100, digits = 2), &quot; %)&quot;), sec.axis = sec_axis(~ . / scale, name = &quot;Loadings on PCoA1&quot;) ) + scale_y_continuous(name = paste0(&quot;PCoA2 (&quot;,round(gift_pcoa_rel_eigen[2]*100, digits = 2), &quot; %)&quot;), sec.axis = sec_axis(~ . / scale, name = &quot;Loadings on PCoA2&quot;) ) + geom_label_repel(data = gift_pcoa_gifts, aes(label = label, x = Axis.1 * scale, y = Axis.2 * scale), segment.color = &#39;transparent&#39;) + xlim(-4.5,4.5) + ylim(-3,2.5) + theme_minimal() + theme(legend.position = &quot;none&quot;) "],["community-composition.html", "Chapter 5 Community composition 5.1 Taxonomy overview 5.2 Taxonomy boxplot", " Chapter 5 Community composition load(&quot;data/data_25082025.Rdata&quot;) 5.1 Taxonomy overview 5.1.1 Stacked barplot # Merge data frames based on sample # transplants_metadata &lt;- sample_metadata %&gt;% # mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) # transplants_metadata$newID &lt;- paste(transplants_metadata$Tube_code, # &quot;_&quot;, # transplants_metadata$individual) merged_data &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome), ~ . / sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata filter(count &gt; 0) #filter 0 counts ggplot(merged_data, aes( x = sample, y = count, fill = phylum, group = phylum )) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat = &quot;identity&quot;, colour = &quot;white&quot;, linewidth = 0.1) + #plot stacked bars with white borders scale_fill_manual(values = phylum_colors) + facet_nested(. ~ time_point + type , scales = &quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill = &quot;Phylum&quot;, y = &quot;Relative abundance&quot;, x = &quot;Sample&quot;) + theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), strip.background = element_rect(fill =&quot;lightgrey&quot;), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.1.1 Wild samples merged_data %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% ggplot(aes(x=sample,y=count, fill=phylum, group=phylum)) + #grouping enables keeping the same sorting of taxonomic units geom_bar(stat=&quot;identity&quot;, colour=&quot;white&quot;, linewidth=0.1) + #plot stacked bars with white borders scale_fill_manual(values=phylum_colors) + facet_nested(. ~ Population, scales=&quot;free&quot;) + #facet per day and treatment guides(fill = guide_legend(ncol = 1)) + labs(fill=&quot;Phylum&quot;,y = &quot;Relative abundance&quot;,x=&quot;Sample&quot;)+ theme( axis.text.x = element_text( angle = 45, hjust = 1, size = 0 ), strip.text.x = element_text( size = 14, colour = &quot;black&quot;, face = &quot;bold&quot; ), axis.title = element_text(size = 18, face = &quot;bold&quot;), panel.background = element_blank(), strip.background = element_rect(fill =&quot;lightgrey&quot;), legend.title = element_text(size = 20, face = &quot;bold&quot;), legend.text = element_text(size = 16) ) 5.1.2 Phylum relative abundances phylum_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% group_by(sample,phylum) %&gt;% summarise(relabun=sum(count)) 5.1.2.1 Cold and wet population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Cold_wet&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_limf3blybbe4hj3rc26e, .table th.tinytable_css_limf3blybbe4hj3rc26e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eya86gjp33irobkttu7o, .table th.tinytable_css_eya86gjp33irobkttu7o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum total p__Bacteroidota 41.93±15.4 p__Bacillota_A 33.96±16.7 p__Bacillota 5.73±4.73 p__Campylobacterota 5.39±4.64 p__Verrucomicrobiota 4.36±3.06 p__Pseudomonadota 3.75±3.76 p__Desulfobacterota 2.31±1.6 p__Bacillota_C 0.85±0.82 p__Cyanobacteriota 0.64±0.83 p__Bacillota_B 0.5±0.77 p__Fusobacteriota 0.37±1.28 p__Spirochaetota 0.12±0.35 p__Actinomycetota 0.09±0.22 5.1.2.2 Hot and dry population phylum_summary %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% group_by(phylum, Population) %&gt;% filter(Population==&quot;Hot_dry&quot; &amp; time_point==&quot;Wild&quot;) %&gt;% summarise(total_mean=mean(relabun*100, na.rm=T), total_sd=sd(relabun*100, na.rm=T)) %&gt;% filter(total_mean!=0) %&gt;% mutate(total=str_c(round(total_mean,2),&quot;±&quot;,round(total_sd,2))) %&gt;% arrange(-total_mean) %&gt;% dplyr::select(phylum,total) %&gt;% tt() .table td.tinytable_css_w9b581stfg1rr48tvbkh, .table th.tinytable_css_w9b581stfg1rr48tvbkh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_qnwz3yawepon8qij7mme, .table th.tinytable_css_qnwz3yawepon8qij7mme { border-bottom: solid #d3d8dc 0.1em; } phylum total p__Bacillota_A 33.9±16.17 p__Bacteroidota 27.63±17.64 p__Campylobacterota 13.53±20.98 p__Pseudomonadota 10.92±9.94 p__Bacillota 6.09±7.66 p__Spirochaetota 2.66±2.78 p__Desulfobacterota 1.69±1.85 p__Fusobacteriota 1.34±1.73 p__Bacillota_B 0.76±0.73 p__Bacillota_C 0.73±0.5 p__Cyanobacteriota 0.52±0.65 p__Chlamydiota 0.12±0.18 p__Verrucomicrobiota 0.06±0.1 p__Elusimicrobiota 0.05±0.14 5.2 Taxonomy boxplot 5.2.1 Family family_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS normalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(., genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,family) %&gt;% summarise(relabun=sum(count)) family_arrange &lt;- family_summary %&gt;% group_by(family) %&gt;% summarise(mean=sum(relabun)) %&gt;% arrange(-mean) %&gt;% select(family) %&gt;% pull() family_summary %&gt;% left_join(genome_metadata %&gt;% select(family,phylum) %&gt;% unique(),by=join_by(family==family)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% filter(family %in% family_arrange[1:20]) %&gt;% mutate(family=factor(family,levels=rev(family_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=family, group=family, color=phylum)) + scale_color_manual(values=phylum_colors[-8]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Family&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) 5.2.2 Genus genus_summary &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% #apply TSS nornalisation pivot_longer(-genome, names_to = &quot;sample&quot;, values_to = &quot;count&quot;) %&gt;% #reduce to minimum number of columns left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% #append sample metadata left_join(genome_metadata, by = join_by(genome == genome)) %&gt;% #append genome metadata group_by(sample,genus) %&gt;% summarise(relabun=sum(count)) %&gt;% filter(genus != &quot;g__&quot;) genus_arrange &lt;- genus_summary %&gt;% group_by(genus) %&gt;% summarise(mean=sum(relabun)) %&gt;% filter(genus != &quot;g__&quot;)%&gt;% arrange(-mean) %&gt;% select(genus) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% pull() genus_summary %&gt;% left_join(genome_metadata %&gt;% select(genus,phylum) %&gt;% unique(),by=join_by(genus==genus)) %&gt;% left_join(sample_metadata,by=join_by(sample==Tube_code)) %&gt;% mutate(genus= sub(&quot;^g__&quot;, &quot;&quot;, genus)) %&gt;% filter(genus %in% genus_arrange[1:20]) %&gt;% mutate(genus=factor(genus,levels=rev(genus_arrange[1:20]))) %&gt;% filter(relabun &gt; 0) %&gt;% ggplot(aes(x=relabun, y=genus, group=genus, color=phylum)) + scale_color_manual(values=phylum_colors[-c(3,4,6,8)]) + geom_jitter(alpha=0.5) + facet_grid(.~type)+ theme_minimal() + labs(y=&quot;Genus&quot;, x=&quot;Relative abundance&quot;, color=&quot;Phylum&quot;) "],["diversity-analysis.html", "Chapter 6 Diversity analysis 6.1 Phyloseq object 6.2 Functional data 6.3 Calculate diversities", " Chapter 6 Diversity analysis load(&quot;data/data_25082025.Rdata&quot;) load(&quot;data/25082025gifts.Rdata&quot;) genome_counts_filt &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% select(any_of(c(&quot;genome&quot;,intersect(sample_metadata$Tube_code, colnames(read_counts))))) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% select(where(~ sum(.) &gt; 0)) %&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) table &lt;- genome_counts_filt %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;) master_table &lt;- sample_metadata %&gt;% mutate(time_point = case_when(time_point %in% c(&quot;Transplant1&quot;) ~ &quot;Donor1&quot;, TRUE ~ time_point)) %&gt;% mutate(time_point = case_when(time_point %in% c(&quot;Transplant2&quot;) ~ &quot;Donor2&quot;, TRUE ~ time_point)) %&gt;% mutate(Population = case_when(Population %in% c(&quot;Cold_wet&quot;) ~ &quot;Cold&quot;, TRUE ~ Population)) %&gt;% mutate(Population = case_when(Population %in% c(&quot;Hot_dry&quot;) ~ &quot;Warm&quot;, TRUE ~ Population)) %&gt;% mutate(type = case_when(type %in% c(&quot;Hot_control&quot;) ~ &quot;Warm_control&quot;, TRUE ~ type)) %&gt;% mutate(type = case_when(type %in% c(&quot;Control&quot;) ~ &quot;Cold_control&quot;, TRUE ~ type)) %&gt;% mutate(type = case_when(type %in% c(&quot;Treatment&quot;) ~ &quot;Cold_intervention&quot;, TRUE ~ type)) %&gt;% mutate(sample = Tube_code) %&gt;% mutate(Tube_code = str_remove_all(Tube_code, &quot;_a&quot;)) %&gt;% filter(Tube_code %in% table$sample) %&gt;% # mutate(treatment = sub(&quot;^\\\\d+_&quot;, &quot;&quot;, time_point)) %&gt;% left_join(., table, by = join_by(&quot;Tube_code&quot; == &quot;sample&quot;)) sample_metadata &lt;- master_table %&gt;% select(1,2,4:8,10,12) genome_counts_filt &lt;- master_table %&gt;% select(12,13:325) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character,as.numeric) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0)%&gt;% dplyr::select(where(~ !all(. == 0)))%&gt;% rownames_to_column(., &quot;genome&quot;) genome_tree &lt;- keep.tip(genome_tree, tip=genome_counts_filt$genome) genome_metadata &lt;- genome_metadata %&gt;% filter(genome %in% genome_counts_filt$genome) 6.1 Phyloseq object #Phyloseq object count_phy &lt;- genome_counts_filt %&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% otu_table(., taxa_are_rows=T) sample_info_tab_phy &lt;- sample_metadata%&gt;% column_to_rownames(var=&quot;Tube_code&quot;)%&gt;% sample_data() TAX &lt;- genome_metadata%&gt;% column_to_rownames(var=&quot;genome&quot;)%&gt;% select(1:7)%&gt;% as.matrix()%&gt;% tax_table() tree &lt;- phy_tree(genome_tree) physeq_all = phyloseq(count_phy, TAX, sample_info_tab_phy, tree) 6.2 Functional data # Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts, GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filt$genome, ] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) elements &lt;- GIFTs_elements_filtered %&gt;% as.data.frame() # Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered, GIFT_db) functions &lt;- GIFTs_functions %&gt;% as.data.frame() # Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions, GIFT_db) domains &lt;- GIFTs_domains %&gt;% as.data.frame() # Get community-weighed average GIFTs per sample GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains, genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% tss(), GIFT_db) uniqueGIFT_db &lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;Tube_code&quot;) %&gt;% left_join(sample_metadata[c(1, 3, 6,8)], by = &quot;Tube_code&quot;) save(sample_metadata, genome_metadata, genome_counts_filt, genome_tree, phylum_colors, data_stats, genome_gifts, master_table, physeq_all, GIFTs_elements_filtered, GIFTs_elements_community, GIFTs_functions_community, GIFTs_domains_community, element_gift, uniqueGIFT_db, file = &quot;data/objects_25082025.Rdata&quot;) 6.3 Calculate diversities 6.3.1 Alpha diversity # Calculate Hill numbers richness &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 0) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(richness = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) neutral &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(neutral = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) phylogenetic &lt;- genome_counts_filt %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% dplyr::select(where(~ !all(. == 0))) %&gt;% hilldiv(., q = 1, tree = genome_tree) %&gt;% t() %&gt;% as.data.frame() %&gt;% dplyr::rename(phylogenetic = 1) %&gt;% rownames_to_column(var = &quot;sample&quot;) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] genome_counts_filt1 &lt;- genome_counts_filt1 %&gt;% remove_rownames() %&gt;% column_to_rownames(var = &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% rownames_to_column(., &quot;genome&quot;) # Merge all metrics alpha_div &lt;- richness %&gt;% full_join(neutral, by = join_by(sample == sample)) %&gt;% full_join(phylogenetic, by = join_by(sample == sample)) save(alpha_div, file = &quot;data/alpha_25082025.Rdata&quot;) 6.3.2 Beta diversity beta_q0n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 0) beta_q1n &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1) beta_q1p &lt;- genome_counts_filt %&gt;% column_to_rownames(., &quot;genome&quot;) %&gt;% filter(rowSums(. != 0, na.rm = TRUE) &gt; 0) %&gt;% select_if(~!all(. == 0)) %&gt;% hillpair(., q = 1, tree = genome_tree) genome_gifts1 &lt;- genome_gifts[genome_counts_filt$genome,] genome_gifts1 &lt;- genome_gifts1[, colSums(genome_gifts1 != 0) &gt; 0] genome_counts_filt1 &lt;- genome_counts_filt[genome_counts_filt$genome %in% rownames(genome_gifts1),] save(beta_q0n, beta_q1n, beta_q1p, file = &quot;data/beta_25082025.Rdata&quot;) "],["is-the-gm-of-cold--vs-warm-adapted-populations-similar-in-the-wild.html", "Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? 7.1 Shared and unique MAGs 7.2 Shapiro test 7.3 Alpha diversity 7.4 Beta diversity 7.5 Differential abundance 7.6 Functional capacity", " Chapter 7 Is the GM of cold- vs warm-adapted populations similar in the wild? load(&quot;data/data_25082025.Rdata&quot;) load(&quot;data/objects_25082025.Rdata&quot;) load(&quot;data/alpha_25082025.Rdata&quot;) load(&quot;data/beta_25082025.Rdata&quot;) 7.1 Shared and unique MAGs locationcolors=c(&#39;#c4d7d1&#39;,&#39;#e08683&#39;) subset_meta &lt;- sample_metadata %&gt;% filter(time_point==&quot;Wild&quot;) genome_counts_rel_fil&lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;, subset_meta$Tube_code))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) genome_counts_rel_pa=1*(genome_counts_rel_fil&gt;0) table_upset_analysis_cont=t(aggregate(t(genome_counts_rel_pa),by=list(subset_meta$Population),FUN=sum)[,-1]) colnames(table_upset_analysis_cont)=levels(as.factor(subset_meta$Population)) table_upset_analysis=(table_upset_analysis_cont&gt;0)*1 table_upset_analysis=data.frame(table_upset_analysis) table_upset_analysis=apply(table_upset_analysis,2,as.integer) rownames(table_upset_analysis) &lt;- rownames(genome_counts_rel_pa) upset(as.data.frame(table_upset_analysis), keep.order = T, sets = rev(c(&quot;Cold&quot;,&quot;Warm&quot;)), sets.bar.color= rev(locationcolors), mb.ratio = c(0.55, 0.45), order.by = &quot;freq&quot;) 7.2 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.03999359 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2966492 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;| time_point == &quot;Wild&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.5780603 7.3 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;))) %&gt;% filter(metric==&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;wilcox.test&quot;, size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Wild&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(metric!=&quot;richness&quot;)%&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 7.4 Beta diversity Number of samples used samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) length(samples_to_keep) [1] 27 Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000012 0.000012 0.0012 999 0.974 Residuals 25 0.257281 0.010291 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.972 Warm 0.97302 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_x1id8px5c4kprpzaweyu, .table th.tinytable_css_x1id8px5c4kprpzaweyu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ubt92mn0bkyhdcju335z, .table th.tinytable_css_ubt92mn0bkyhdcju335z { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.542719 0.2095041 6.625717 0.001 Residual 25 5.820951 0.7904959 NA NA Total 26 7.363669 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.000048 0.0000476 0.0044 999 0.945 Residuals 25 0.270114 0.0108046 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.945 Warm 0.94763 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_edpjoj3el2chcytyn2r9, .table th.tinytable_css_edpjoj3el2chcytyn2r9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_8qc5nle60ond2htsn5hx, .table th.tinytable_css_8qc5nle60ond2htsn5hx { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.918266 0.2608511 8.822682 0.001 Residual 25 5.435610 0.7391489 NA NA Total 26 7.353876 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03585 0.035847 2.4912 999 0.129 Residuals 25 0.35973 0.014389 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.132 Warm 0.12705 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_iikub25ehkl40rnvgr7k, .table th.tinytable_css_iikub25ehkl40rnvgr7k { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ew1jl6ddi5a3tw87cilo, .table th.tinytable_css_ew1jl6ddi5a3tw87cilo { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3218613 0.2162815 6.899207 0.001 Residual 25 1.1662981 0.7837185 NA NA Total 26 1.4881594 1.0000000 NA NA NMDS richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Control&quot;, &quot;Warm-Control&quot;, &quot;Cold-Intervention&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Control&quot;, &quot;Warm-Control&quot;, &quot;Cold-Intervention&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Control&quot;, &quot;Warm-Control&quot;, &quot;Cold-Intervention&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = element_blank (), x = &quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) 7.5 Differential abundance 7.5.1 Structural zeros wild_struc &lt;- structural_zeros %&gt;% filter(present==&quot;Cold&quot;)%&gt;% count(phylum, name = &quot;Cold&quot;) %&gt;% arrange(desc(Cold)) structural_zeros %&gt;% filter(present==&quot;Warm&quot;)%&gt;% count(phylum, name = &quot;Warm&quot;) %&gt;% arrange(desc(Warm)) %&gt;% full_join(., wild_struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_6ffxpbk53fmyq0rrau4r, .table th.tinytable_css_6ffxpbk53fmyq0rrau4r { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_01a65iwvcvuyqbrib09p, .table th.tinytable_css_01a65iwvcvuyqbrib09p { border-bottom: solid #d3d8dc 0.1em; } phylum Warm Cold p__Bacillota_A 31 30 p__Bacteroidota 26 14 p__Bacillota 14 10 p__Pseudomonadota 12 8 p__Cyanobacteriota 5 4 p__Desulfobacterota 3 1 p__Bacillota_C 1 0 p__Chlamydiota 1 0 p__Elusimicrobiota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 3 p__Actinomycetota 0 1 p__Bacillota_B 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% mutate_all( ~ replace(., . == 0, 0.00001)) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% mutate(genome2 = genome) %&gt;% column_to_rownames(&quot;genome2&quot;) %&gt;% dplyr::select(domain, phylum, class, order, family, genus, species, genome) %&gt;% as.matrix() %&gt;% tax_table() physeq_sample_wild &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) physeq_sample_wild &lt;- prune_taxa(taxa_sums(physeq_sample_wild)&gt;0, physeq_sample_wild) 7.5.2 Phylum ancom_rand_output_wild_phylum = ancombc2( data = physeq_sample_wild, assay_name = &quot;counts&quot;, tax_level = &quot;phylum&quot;, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut = 0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list( tol = 1e-5, max_iter = 20, verbose = FALSE ), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL ) save(ancom_rand_output_wild_phylum, file=&quot;data/ancom_rand_output_wild_phylum.RData&quot;) load(&quot;data/ancom_rand_output_wild_phylum.RData&quot;) ancom_rand_output_wild_phylum$res %&gt;% dplyr::select(taxon, lfc_PopulationWarm, p_PopulationWarm) %&gt;% filter(p_PopulationWarm &lt; 0.05) taxon lfc_PopulationWarm p_PopulationWarm 1 p__Fusobacteriota 6.191601 2.574953e-02 2 p__Pseudomonadota 4.252812 4.749467e-02 3 p__Spirochaetota 10.909398 2.450936e-05 4 p__Verrucomicrobiota -6.924654 3.344063e-03 7.5.3 MAG level physeq_wild_mag &lt;- subset_samples(physeq_all, time_point == &quot;Wild&quot;) physeq_wild_mag &lt;- prune_taxa(taxa_sums(physeq_wild_mag)&gt;0, physeq_wild_mag) ancom_rand_output_mag_wild = ancombc2( data = physeq_wild_mag, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut = 0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list( tol = 1e-5, max_iter = 20, verbose = FALSE ), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL ) save(ancom_rand_output_mag_wild, file=&quot;data/ancom_rand_output_mag_wild.RData&quot;) load(&quot;data/ancom_rand_output_mag_wild.RData&quot;) Differentially abundant MAGs taxon lfc_PopulationHot_dry p_PopulationHot_dry domain phylum class order family 1 AH1_2nd_12:bin_000012 -11.711444 0.0002281880 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 2 AH1_2nd_18:bin_000011 -8.232433 0.0048673134 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 3 AH1_2nd_14:bin_000052 -7.975917 0.0090951404 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 4 AH1_2nd_11:bin_000008 -7.396883 0.0158062531 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales Akkermansiaceae 5 AH1_2nd_10:bin_000007 -7.099011 0.0206658101 d__Bacteria Bacillota_A c__Clostridia Lachnospirales 6 AH1_2nd_10:bin_000009 -6.919497 0.0229676440 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 7 AH1_2nd_15:bin_000004 -6.720938 0.0225394492 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 8 AH1_2nd_7:bin_000027 -6.644411 0.0239859878 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 9 AH1_2nd_17:bin_000020 -5.949921 0.0417531531 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 AH1_2nd_19:bin_000011 -5.742611 0.0409162435 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 11 LI1_2nd_5:bin_000023 6.621299 0.0413973594 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 12 AH1_2nd_7:bin_000055 7.380090 0.0167421041 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 13 AH1_2nd_10:bin_000049 7.534728 0.0085610593 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 14 LI1_2nd_5:bin_000037 8.429122 0.0034417084 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 15 AH1_2nd_11:bin_000004 9.469585 0.0008212177 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 16 AH1_2nd_6:bin_000024 10.437170 0.0013800254 d__Bacteria Spirochaetota c__Brevinematia Brevinematales Brevinemataceae 17 AH1_2nd_7:bin_000028 11.419184 0.0003141080 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae genus species 1 Helicobacter_J 2 Coprobacillus 3 Bacteroides 4 Akkermansia 5 6 Bilophila 7 UMGS1251 8 Copromonas 9 Clostridium_Q 10 Mailhella 11 12 Ureaplasma 13 Parabacteroides 14 Odoribacter 15 Hungatella_A 16 Brevinema 17 NHYM01 Phyla of the significant MAGs in warm ancombc_rand_table_mag %&gt;% filter(lfc_PopulationHot_dry &gt; 0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 2 2 Bacillota 1 3 Bacillota_A 1 4 Campylobacterota 1 5 Pseudomonadota 1 6 Spirochaetota 1 Phyla of the significant MAGs in cold ancombc_rand_table_mag %&gt;% filter(lfc_PopulationHot_dry &lt; 0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Desulfobacterota 2 3 Bacillota 1 4 Bacteroidota 1 5 Campylobacterota 1 6 Verrucomicrobiota 1 7.6 Functional capacity 7.6.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold 0.346 0.0194 2 Warm 0.327 0.0244 MCI_element_wild &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Wild&quot;) shapiro.test(MCI_element_wild$value) #normality test Shapiro-Wilk normality test data: MCI_element_wild$value W = 0.96385, p-value = 0.4503 var.test(value ~ Population, data = MCI_element_wild) F test to compare two variances data: value by Population F = 0.63603, num df = 17, denom df = 8, p-value = 0.4114 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.1568995 1.9468787 sample estimates: ratio of variances 0.6360327 t.test(value ~ Population, data = MCI_element_wild, var.equal = TRUE) Two Sample t-test data: value by Population t = 2.2416, df = 25, p-value = 0.03411 alternative hypothesis: true difference in means between group Cold and group Warm is not equal to 0 95 percent confidence interval: 0.001570676 0.037107308 sample estimates: mean in group Cold mean in group Warm 0.3461279 0.3267889 7.6.2 Differences in functional pathways element_gift_wild &lt;- element_gift %&gt;% filter(time_point == &quot;Wild&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 3)], by = &quot;Tube_code&quot;) significant_elements_wild &lt;- element_gift_wild %&gt;% pivot_longer(-c(Tube_code, Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_wild &lt;- element_gift_wild %&gt;% select(Tube_code, all_of(intersect( significant_elements_wild$trait, colnames(element_gift_wild) ))) %&gt;% left_join(., sample_metadata[c(1, 3)], by = join_by(Tube_code == Tube_code)) difference_table_wild &lt;- element_gift_sig_wild %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(., uniqueGIFT_db[c(1, 3, 4)], by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference = Cold - Warm) %&gt;% mutate(group_color = ifelse(Difference &lt; 0, &quot;Hot&quot;, &quot;Cold&quot;)) difference_table_wild %&gt;% ggplot(aes(x = forcats::fct_reorder(Function, Difference),y = Difference,fill = group_color)) + geom_col() + scale_fill_manual(values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + geom_hline(yintercept = 0) + coord_flip() + theme( axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line( size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot; ) ) + xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) "],["do-populations-mantain-a-different-gm-after-acclimation.html", "Chapter 8 Do populations mantain a different GM after acclimation? 8.1 Shapiro test 8.2 Alpha diversity 8.3 Beta diversity 8.4 Functional capacity", " Chapter 8 Do populations mantain a different GM after acclimation? load(&quot;data/data_25082025.Rdata&quot;) load(&quot;data/objects_25082025.Rdata&quot;) load(&quot;data/alpha_25082025.Rdata&quot;) load(&quot;data/beta_25082025.Rdata&quot;) 8.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.2445285 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.4803302 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;Acclimation&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3330774 8.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = Population, group=Population, color=Population, fill=Population)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.58) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) 8.3 Beta diversity Number of samples used samples_to_keep_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_accli &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot;) length(samples_to_keep_accli) [1] 26 Richness richness_accli &lt;- as.matrix(beta_q0n$S) richness_accli &lt;- as.dist(richness_accli[rownames(richness_accli) %in% samples_to_keep_accli, colnames(richness_accli) %in% samples_to_keep_accli]) betadisper(richness_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.093187 0.093187 11.812 999 0.004 ** Residuals 24 0.189340 0.007889 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.003 Warm 0.0021532 adonis2(richness_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(richness_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ikyziayw6ievextf6r05, .table th.tinytable_css_ikyziayw6ievextf6r05 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_frbg7mkbsm4kv48vggl0, .table th.tinytable_css_frbg7mkbsm4kv48vggl0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.639630 0.1929088 5.736415 0.001 Residual 24 6.859879 0.8070912 NA NA Total 25 8.499509 1.0000000 NA NA Neutral neutral_accli &lt;- as.matrix(beta_q1n$S) neutral_accli &lt;- as.dist(neutral_accli[rownames(neutral_accli) %in% samples_to_keep_accli, colnames(neutral_accli) %in% samples_to_keep_accli]) betadisper(neutral_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.05603 0.056026 4.1918 999 0.05 * Residuals 24 0.32077 0.013365 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.042 Warm 0.051717 adonis2(neutral_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(neutral_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nmvce8fw40ditobn0t5e, .table th.tinytable_css_nmvce8fw40ditobn0t5e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9219ensdmx0dk9hm8ftj, .table th.tinytable_css_9219ensdmx0dk9hm8ftj { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.961192 0.2493171 7.970889 0.001 Residual 24 5.905063 0.7506829 NA NA Total 25 7.866255 1.0000000 NA NA Phylogenetic phylo_accli &lt;- as.matrix(beta_q1p$S) phylo_accli &lt;- as.dist(phylo_accli[rownames(phylo_accli) %in% samples_to_keep_accli, colnames(phylo_accli) %in% samples_to_keep_accli]) betadisper(phylo_accli, subset_meta_accli$Population) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03637 0.036365 2.3087 999 0.147 Residuals 24 0.37804 0.015752 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold Warm Cold 0.137 Warm 0.14172 adonis2(phylo_accli ~ Population, data = subset_meta_accli %&gt;% arrange(match(Tube_code,labels(phylo_accli))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_k810rky4s5ugx6j7ykr1, .table th.tinytable_css_k810rky4s5ugx6j7ykr1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_eij79dsx7oaprbxzfovk, .table th.tinytable_css_eij79dsx7oaprbxzfovk { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2113395 0.1379515 3.84066 0.017 Residual 24 1.3206449 0.8620485 NA NA Total 25 1.5319844 1.0000000 NA NA NMDS richness_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population, shape=type)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_accli %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_accli, by = join_by(sample == Tube_code))%&gt;% group_by(Population) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold_wet&quot;,&quot;Hot_dry&quot;), labels=c(&quot;Cold&quot;,&quot;Hot&quot;), values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + scale_shape_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;circle&quot;,&quot;square&quot;,&quot;triangle&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 8.4 Functional capacity 8.4.1 Metabolic capacity index at functional level GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% group_by(Population) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 Population MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold 0.329 0.0319 2 Warm 0.348 0.0158 MCI_element_acclimation&lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;Acclimation&quot;) shapiro.test(MCI_element_acclimation$value) #normality test Shapiro-Wilk normality test data: MCI_element_acclimation$value W = 0.92832, p-value = 0.0707 var.test(value ~ Population, data = MCI_element_acclimation) F test to compare two variances data: value by Population F = 4.0687, num df = 16, denom df = 8, p-value = 0.05027 alternative hypothesis: true ratio of variances is not equal to 1 95 percent confidence interval: 0.9981901 12.7140223 sample estimates: ratio of variances 4.068719 t.test(value ~ Population, data=MCI_element_acclimation, var.equal = TRUE) Two Sample t-test data: value by Population t = -1.633, df = 24, p-value = 0.1155 alternative hypothesis: true difference in means between group Cold and group Warm is not equal to 0 95 percent confidence interval: -0.042021630 0.004897668 sample estimates: mean in group Cold mean in group Warm 0.3292377 0.3477997 8.4.2 Differences in functional pathways element_gift_acclimation&lt;- element_gift %&gt;% filter(time_point==&quot;Acclimation&quot;) %&gt;% select(-time_point,-type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 3)], by = &quot;Tube_code&quot;) significant_elements_acclimation &lt;- element_gift_acclimation %&gt;% pivot_longer(-c(Tube_code,Population), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ Population)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% select(-Elements) element_gift_sig_acclimation &lt;- element_gift_acclimation %&gt;% select(Tube_code, all_of(intersect( significant_elements_acclimation$trait, colnames(element_gift_acclimation) ))) %&gt;% left_join(., sample_metadata[c(1, 3)], by = join_by(Tube_code == Tube_code)) difference_table_acclimation &lt;- element_gift_sig_acclimation %&gt;% select(-Tube_code) %&gt;% group_by(Population) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold-Warm)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Warm&quot;,&quot;Cold&quot;)) difference_table_acclimation %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) struc &lt;- structural_zeros %&gt;% filter(present==&quot;Cold&quot;)%&gt;% count(phylum, name = &quot;Cold&quot;) %&gt;% arrange(desc(Cold)) structural_zeros %&gt;% filter(present==&quot;Warm&quot;)%&gt;% count(phylum, name = &quot;Warm&quot;) %&gt;% arrange(desc(Warm)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_uo7lw67hs8hr9trblmsn, .table th.tinytable_css_uo7lw67hs8hr9trblmsn { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_roma53r6o0x79g1phifr, .table th.tinytable_css_roma53r6o0x79g1phifr { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum Warm Cold p__Bacillota_A 33 25 p__Bacteroidota 29 14 p__Bacillota 12 9 p__Cyanobacteriota 6 2 p__Pseudomonadota 6 7 p__Desulfobacterota 3 2 p__Bacillota_B 1 0 p__Bacillota_C 1 2 p__Elusimicrobiota 1 0 p__Spirochaetota 1 0 p__Verrucomicrobiota 1 3 p__Actinomycetota 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(time_point == &quot;Acclimation&quot; )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% filter(genome!=&quot;AH1_2nd_20:bin_000042&quot;)%&gt;% filter(genome!=&quot;LI1_2nd_7:bin_000012&quot;)%&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_accli = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;Population&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = &quot;Population&quot;, struc_zero = TRUE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_ci_accli_fmt1, file=&quot;data/ancom_rand_output_ci_accli_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_ci_accli_fmt1.RData&quot;) ancom_rand_output_ci_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_qvb74x6g5kpsgoltl30w, .table th.tinytable_css_qvb74x6g5kpsgoltl30w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_cjppd5bviry141jazk2k, .table th.tinytable_css_cjppd5bviry141jazk2k { border-bottom: solid #d3d8dc 0.1em; } lfc_time_pointFMT1 p_time_pointFMT1 order family genus -1.8462367 0.0286090261 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.0602262 0.0256488405 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -2.1031126 0.0039988943 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides -1.1937360 0.0258952249 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A 1.1869122 0.0246642650 o__Oscillospirales f__Ruminococcaceae g__Negativibacillus -3.0923830 0.0007999100 o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus -1.2524541 0.0482834029 o__Opitutales f__LL51 g__ -1.2157647 0.0209074696 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -2.1668443 0.0092167448 o__Gastranaerophilales f__Gastranaerophilaceae g__Scatousia 1.8856206 0.0022558153 o__Lachnospirales f__Lachnospiraceae g__ -1.2811877 0.0290779856 o__Bacteroidales f__Marinifilaceae g__Odoribacter -0.9960276 0.0294171519 o__Selenomonadales f__ g__ -1.9064058 0.0121488844 o__Lachnospirales f__Lachnospiraceae g__CAG-95 -2.0548675 0.0169404933 o__Christensenellales f__ g__ -1.8189515 0.0001244128 o__Bacteroidales f__Marinifilaceae g__Odoribacter 1.0549620 0.0254528501 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ -1.4937622 0.0113515485 o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B 1.9263692 0.0019001955 o__Bacteroidales f__Tannerellaceae g__Parabacteroides taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_ci_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% #filter(p_time_pointFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT1) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT1) ancombc_rand_table_mag taxon lfc_time_pointFMT1 p_time_pointFMT1 domain phylum class order family 1 AH1_2nd_18:bin_000011 -3.09238298 0.0007999100 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 2 AH1_2nd_2:bin_000003 -2.64816145 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 3 AH1_2nd_1:bin_000003 -2.16684429 0.0092167448 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 4 LI1_2nd_4:bin_000001 -2.05486750 0.0169404933 d__Bacteria Bacillota_A c__Clostridia Christensenellales 5 AH1_2nd_8:bin_000006 -1.90640581 0.0121488844 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 6 LI1_2nd_4:bin_000026 -1.81895155 0.0001244128 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 7 AH1_2nd_19:bin_000011 -1.49472687 0.0611399521 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 8 LI1_2nd_7:bin_000042 -1.49376217 0.0113515485 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 9 AH1_2nd_19:bin_000072 -1.47826887 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 AH1_2nd_14:bin_000015 -1.31675396 0.1424337358 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 11 AH1_2nd_1:bin_000039 -1.28118772 0.0290779856 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 12 AH1_2nd_14:bin_000003 -1.19373604 0.0258952249 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 13 AH1_2nd_18:bin_000024 -1.18873116 0.0611452591 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 14 AH1_2nd_9:bin_000002 -1.16920978 0.0986538496 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 15 AH1_2nd_12:bin_000012 -1.06022615 0.0256488405 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 16 LI1_2nd_9:bin_000022 -0.90624371 0.0903292981 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 17 LI1_2nd_5:bin_000013 -0.82960432 0.1527144304 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 18 AH1_2nd_12:bin_000019 -0.82514533 0.2042360107 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 19 AH1_2nd_14:bin_000052 -0.70378172 0.0836982274 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 20 AH1_2nd_10:bin_000069 -0.63847692 0.1756392299 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 21 LI1_2nd_8:bin_000019 -0.62605832 0.1873913604 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 22 LI1_2nd_8:bin_000048 -0.60441068 0.1802313047 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 23 AH1_2nd_18:bin_000039 -0.56508968 0.1344504970 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 24 AH1_2nd_15:bin_000001 -0.55891783 0.2775215236 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 25 LI1_2nd_1:bin_000014 -0.54176243 0.1908782875 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 26 AH1_2nd_17:bin_000020 -0.52968312 0.1375747225 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 27 AH1_2nd_8:bin_000027 -0.37269906 0.3929034840 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 28 AH1_2nd_20:bin_000016 -0.36796485 0.4149817314 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 29 AH1_2nd_15:bin_000004 -0.36323296 0.4110273927 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 30 AH1_2nd_19:bin_000050 -0.28913263 0.4961320864 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 31 AH1_2nd_14:bin_000063 -0.24107574 0.4791871743 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 32 AH1_2nd_12:bin_000018 -0.23327894 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 33 AH1_2nd_14:bin_000014 -0.19163907 0.5967459585 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 34 AH1_2nd_5:bin_000069 -0.11336248 0.7480149690 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 35 AH1_2nd_5:bin_000004 -0.09955378 0.7766158242 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 36 AH1_2nd_19:bin_000053 -0.06449956 0.8633425245 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 37 AH1_2nd_5:bin_000023 -0.06125506 0.8885990209 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 38 LI1_2nd_4:bin_000052 -0.05917952 0.8521593297 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 39 AH1_2nd_7:bin_000011 -0.02245708 0.9485771277 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 40 AH1_2nd_7:bin_000036 -0.02021173 0.9505096511 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 41 AH1_2nd_8:bin_000007 -0.01577637 0.9642381855 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 42 AH1_2nd_20:bin_000075 0.01126983 0.9740329519 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 43 LI1_2nd_3:bin_000015 0.10095110 0.7675764926 d__Bacteria Bacillota c__Bacilli Staphylococcales Staphylococcaceae 44 AH1_2nd_12:bin_000008 0.12657279 0.7200772057 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 45 AH1_2nd_6:bin_000046 0.14864251 0.7391254614 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 46 AH1_2nd_15:bin_000043 0.16285526 0.6651236201 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 47 AH1_2nd_11:bin_000028 0.21578304 0.6001649151 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 48 AH1_2nd_19:bin_000055 0.24128020 0.5605744834 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 49 AH1_2nd_1:bin_000015 0.24836374 0.5365901183 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 50 LI1_2nd_1:bin_000006 0.25674596 0.4812257132 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 51 LI1_2nd_4:bin_000041 0.27550730 0.4771321706 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 52 AH1_2nd_8:bin_000051 0.40902714 0.2422754936 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 53 LI1_2nd_3:bin_000003 0.42622652 0.3026156952 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 54 AH1_2nd_11:bin_000005 0.43902586 0.3469594997 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 55 LI1_2nd_8:bin_000016 0.44929580 0.2725481226 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 56 AH1_2nd_9:bin_000047 0.46845503 0.1949450949 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 57 AH1_2nd_16:bin_000045 0.47745182 0.3015275739 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 58 AH1_2nd_1:bin_000002 0.67274170 0.0931456403 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 59 LI1_2nd_4:bin_000034 0.68376987 0.1489775197 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 60 LI1_2nd_8:bin_000070 0.71574480 0.0557648829 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 61 LI1_2nd_8:bin_000079 0.75931542 0.1169813633 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 62 LI1_2nd_7:bin_000009 0.77854131 0.0871078423 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 63 LI1_2nd_7:bin_000078 0.81801284 0.2168112843 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 64 AH1_2nd_7:bin_000027 0.89831540 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 65 AH1_2nd_7:bin_000041 0.91707306 0.0786806187 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 66 AH1_2nd_7:bin_000004 0.93022652 0.0840011143 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 67 AH1_2nd_16:bin_000058 1.01998337 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 68 LI1_2nd_7:bin_000016 1.05496196 0.0254528501 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 69 AH1_2nd_16:bin_000025 1.18691221 0.0246642650 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 70 AH1_2nd_12:bin_000007 1.66999357 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 71 AH1_2nd_1:bin_000023 1.88562064 0.0022558153 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 72 LI1_2nd_8:bin_000064 1.92636920 0.0019001955 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae genus species 1 Coprobacillus 2 JAAYNV01 3 Scatousia 4 5 CAG-95 6 Odoribacter 7 Mailhella 8 Parabacteroides_B 9 10 11 Odoribacter 12 Hungatella_A 13 Odoribacter 14 Phocaeicola 15 Helicobacter_J 16 Oscillibacter 17 18 19 Bacteroides 20 Bacteroides 21 22 23 Alistipes 24 Agrobacterium Agrobacterium tumefaciens_H 25 26 Clostridium_Q 27 NSJ-61 28 29 UMGS1251 30 31 Blautia_A 32 Alistipes 33 Marseille-P3106 34 Bacteroides 35 36 CAG-56 37 Blautia 38 Enterocloster 39 Lacrimispora 40 Intestinimonas 41 Dielma 42 Mailhella 43 Staphylococcus Staphylococcus shinii 44 Lactococcus Lactococcus formosensis 45 Bacteroides 46 Bacteroides 47 Bacteroides 48 Parabacteroides 49 MGBC136627 50 RGIG6463 51 Clostridium_Q 52 Bacteroides 53 Alistipes 54 Fusobacterium_A Fusobacterium_A ulcerans 55 Rikenella 56 Bacteroides 57 Alistipes 58 Fournierella 59 Bacteroides Bacteroides thetaiotaomicron 60 Bacteroides 61 Citrobacter_A Citrobacter_A amalonaticus 62 Anaerotruncus 63 Copromonas 64 Copromonas 65 66 Eisenbergiella 67 Enterocloster 68 Clostridium_AQ 69 Negativibacillus 70 71 72 Parabacteroides colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT1 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT1 &gt;= 0.05), aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 10)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 3, label = &quot;FMT1&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 3, label = &quot;Acclimation&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) "],["does-the-antibiotic-administration-deplete-the-gut-microbiota.html", "Chapter 9 Does the antibiotic administration deplete the gut microbiota? 9.1 DNA extraction 9.2 Bacterial fraction change", " Chapter 9 Does the antibiotic administration deplete the gut microbiota? 9.1 DNA extraction Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] Formula: dna_extraction ~ time_point.x + (1 | individual) Data: dna_extraction_df REML criterion at convergence: 232.6 Scaled residuals: Min 1Q Median 3Q Max -1.0148 -0.4947 -0.2085 0.2941 3.4251 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 1.254 1.120 Residual 6.835 2.614 Number of obs: 48, groups: individual, 27 Fixed effects: Estimate Std. Error df t value Pr(&gt;|t|) (Intercept) 3.0236 0.5575 44.3763 5.423 2.3e-06 *** time_point.xAntibiotics -1.9883 0.7647 15.7132 -2.600 0.0195 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnt.xAnt -0.621 9.2 Bacterial fraction change Linear mixed model fit by REML. t-tests use Satterthwaite&#39;s method [&#39;lmerModLmerTest&#39;] Formula: value ~ time_point + (1 | individual) Data: mag_fragtion_accli_antib REML criterion at convergence: -33.1 Scaled residuals: Min 1Q Median 3Q Max -2.88128 -0.56866 -0.00331 0.41846 2.71194 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.00458 0.06768 Residual 0.02151 0.14665 Number of obs: 50, groups: individual, 27 Fixed effects: Estimate Std. Error df t value Pr(&gt;|t|) (Intercept) 0.59140 0.03166 47.01994 18.68 &lt; 2e-16 *** time_pointAntibiotics -0.32819 0.04181 26.23096 -7.85 2.37e-08 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pntAntbt -0.630 "],["does-the-antibiotic-administration-change-the-microbial-community.html", "Chapter 10 Does the antibiotic administration change the microbial community? 10.1 Alpha diversity 10.2 Beta diversity 10.3 Differences in MAGs and functional capacity", " Chapter 10 Does the antibiotic administration change the microbial community? 10.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) ) label_map &lt;- c( &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;)), time_point = factor(time_point, levels = c(&quot;Wild&quot;, &quot;Acclimation&quot;))) %&gt;% filter(time_point %in% c(&quot;Wild&quot;, &quot;Acclimation&quot;)) %&gt;% ggplot(aes(y = value, x = time_point, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5, outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2,show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + facet_grid(metric ~ Population, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.text = element_text(size = 14), axis.title = element_text(size = 14), strip.text = element_text(size = 18, lineheight = 0.6), ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ time_point*Population+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(3.3031) ( log ) Formula: richness ~ time_point * Population + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 453.0 464.6 -220.5 441.0 45 Scaled residuals: Min 1Q Median 3Q Max -1.45683 -0.56970 0.01616 0.42638 3.03485 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.1434 0.3787 Number of obs: 51, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8038 0.1706 22.301 &lt; 2e-16 *** time_pointAntibiotics -1.2995 0.2143 -6.065 1.32e-09 *** PopulationWarm 0.6580 0.2833 2.323 0.0202 * time_pointAntibiotics:PopulationWarm -0.1983 0.3580 -0.554 0.5797 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tm_pnA PpltnW tm_pntAntbt -0.539 PopulatnWrm -0.603 0.324 tm_pntAn:PW 0.335 -0.587 -0.553 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 357.0216 368.1225 -172.5108 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.334606 7.920952 Fixed effects: neutral ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 19.30078 2.083103 25 9.265401 0e+00 time_pointAntibiotics -12.24105 2.728975 22 -4.485585 2e-04 PopulationWarm 25.30058 3.542048 25 7.142924 0e+00 time_pointAntibiotics:PopulationWarm -20.55961 4.732066 22 -4.344742 3e-04 Correlation: (Intr) tm_pnA PpltnW time_pointAntibiotics -0.655 PopulationWarm -0.588 0.385 time_pointAntibiotics:PopulationWarm 0.378 -0.577 -0.638 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.8337660 -0.5250331 -0.1690052 0.5647389 2.1144650 Number of Observations: 51 Number of Groups: 27 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ time_point*Population, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 214.9941 226.095 -101.4971 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8604909 1.70013 Fixed effects: phylogenetic ~ time_point * Population Value Std.Error DF t-value p-value (Intercept) 5.426628 0.4616166 25 11.755705 0.0000 time_pointAntibiotics -1.101856 0.5866694 22 -1.878155 0.0737 PopulationWarm 1.088797 0.7851891 25 1.386669 0.1778 time_pointAntibiotics:PopulationWarm -0.375271 1.0172677 22 -0.368901 0.7157 Correlation: (Intr) tm_pnA PpltnW time_pointAntibiotics -0.635 PopulationWarm -0.588 0.374 time_pointAntibiotics:PopulationWarm 0.366 -0.577 -0.618 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.79893698 -0.50285915 -0.07891184 0.49006037 1.85177334 Number of Observations: 51 Number of Groups: 27 10.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.046108 0.046108 12.545 999 0.001 *** Residuals 49 0.180100 0.003676 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_y2ruica2b5f6il3mmcc3, .table th.tinytable_css_y2ruica2b5f6il3mmcc3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ej1gyi5hc3szt4tp7ghd, .table th.tinytable_css_ej1gyi5hc3szt4tp7ghd { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 2.0239655 0.09924051 6.197237 0.001 Population 1 2.1298900 0.10443427 6.521570 0.001 time_point:Population 1 0.8908892 0.04368271 2.727839 0.004 Residual 47 15.3498055 0.75264251 NA NA Total 50 20.3945503 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.06612 0.066120 12.357 999 0.002 ** Residuals 49 0.26219 0.005351 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ttkexmspt6wokyl9zwh4, .table th.tinytable_css_ttkexmspt6wokyl9zwh4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_3l39so9hfu2fnopbi15g, .table th.tinytable_css_3l39so9hfu2fnopbi15g { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 2.1502445 0.1099662 7.412706 0.001 Population 1 2.8814616 0.1473616 9.933488 0.001 time_point:Population 1 0.8884255 0.0454352 3.062739 0.003 Residual 47 13.6335491 0.6972370 NA NA Total 50 19.5536807 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.82840 0.82840 60.21 999 0.001 *** Residuals 49 0.67417 0.01376 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ time_point*Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_89yog9fq7g6ypge3lt6r, .table th.tinytable_css_89yog9fq7g6ypge3lt6r { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3bn5md65gvucal2f1n4i, .table th.tinytable_css_3bn5md65gvucal2f1n4i { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 2.0945462 0.22473442 16.243398 0.001 Population 1 0.7920735 0.08498556 6.142603 0.001 time_point:Population 1 0.3729411 0.04001473 2.892192 0.031 Residual 47 6.0605345 0.65026529 NA NA Total 50 9.3200953 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo ~ subset_meta$time_point* subset_meta$Population) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode( biplot_scores$Variable, &quot;subset_meta$time_pointAntibiotics&quot; = &quot;Antibiotics&quot;, &quot;subset_meta$PopulationWarm&quot; = &quot;Warm population&quot;, &quot;subset_meta$time_pointAntibiotics:subset_meta$PopulationWarm&quot; = &quot;Interaction Wam population&quot; ) CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=Population,shape = time_point)) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() 10.3 Differences in MAGs and functional capacity 10.3.1 Cold population 10.3.1.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Antibiotics&quot;,&quot;Acclimation&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 9 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 43 2 p__Bacteroidota 15 3 p__Bacillota 8 4 p__Pseudomonadota 8 5 p__Cyanobacteriota 3 6 p__Verrucomicrobiota 2 7 p__Bacillota_B 1 8 p__Bacillota_C 1 9 p__Fusobacteriota 1 structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 82 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_1:bin_000006 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Kineothrix s__ 2 AH1_2nd_19:bin_000005 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 3 AH1_2nd_11:bin_000008 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 4 AH1_2nd_2:bin_000003 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 s__ 5 AH1_2nd_10:bin_000007 p__Bacillota_A c__Clostridia o__Lachnospirales f__ g__ s__ 6 AH1_2nd_15:bin_000043 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Bacteroidaceae g__Bacteroides s__ 7 AH1_2nd_10:bin_000041 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Rikenellaceae g__Alistipes s__ 8 AH1_2nd_8:bin_000007 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma s__ 9 AH1_2nd_14:bin_000015 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ 10 AH1_2nd_5:bin_000001 p__Bacillota_C c__Negativicutes o__Selenomonadales f__ g__ s__ # ℹ 72 more rows Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 4 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_7:bin_000001 p__Bacillota_A c__Clostridia o__Clostridiales f__Clostridiaceae g__Sarcina s__ 3 AH1_2nd_7:bin_000055 p__Bacillota c__Bacilli o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma s__ 4 AH1_2nd_13:bin_000025 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA3700 g__ s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 10.3.1.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_antib_accl_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_antib_accl_2803, file = &quot;data/ancombc_antib_accl_2803.Rdata&quot;) load(&quot;data/ancombc_antib_accl_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_antib_accl_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointAntibiotics, p_time_pointAntibiotics) %&gt;% filter(p_time_pointAntibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointAntibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointAntibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointAntibiotics, y=forcats::fct_reorder(genome,lfc_time_pointAntibiotics), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in antibiotics on the right side Phyla of the significant MAGs Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 15 2 Bacillota_A 4 3 Bacillota 1 4 Campylobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Campylobacterota Helicobacter_J 2 Bacillota_A 3 Bacteroidota Bacteroides 4 Bacteroidota Odoribacter 5 Bacillota 6 Bacteroidota Bacteroides 7 Bacteroidota Bacteroides 8 Bacteroidota Bacteroides 9 Bacteroidota Phocaeicola 10 Bacteroidota Odoribacter 11 Bacteroidota Phocaeicola 12 Bacteroidota Bacteroides 13 Bacteroidota Bacteroides 14 Bacteroidota Parabacteroides 15 Bacteroidota 16 Bacillota_A 17 Bacteroidota Alistipes 18 Bacillota_A 19 Bacillota_A 20 Bacteroidota Alistipes 21 Bacteroidota Odoribacter Antibiotics ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 2 2 Pseudomonadota 2 3 Verrucomicrobiota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacillota_A MGBC116941 2 Pseudomonadota 3 Bacillota_A Intestinimonas 4 Verrucomicrobiota 5 Pseudomonadota 10.3.1.3 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Cold&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 10.3.1.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.331 0.0319 2 Antibiotics 0.244 0.132 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93705, p-value = 0.05038 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 209, p-value = 0.02612 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#003a45&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Time_point&quot;) 10.3.1.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.329 0.0319 2 Antibiotics 0.254 0.123 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.95036, p-value = 0.1259 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 213, p-value = 0.01774 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_zcv58xzd4dl502ddgd9b, .table th.tinytable_css_zcv58xzd4dl502ddgd9b { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_nwpxr42fi1riiwjrunew, .table th.tinytable_css_nwpxr42fi1riiwjrunew { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Antibiotics Function Difference time_point B06 0.68059020 0.47977960 Organic anion biosynthesis 0.20081060 Acclimation D02 0.38530780 0.19353530 Polysaccharide degradation 0.19177250 Acclimation S03 0.27145162 0.08296879 Spore 0.18848283 Acclimation B02 0.59930820 0.42536320 Amino acid biosynthesis 0.17394500 Acclimation B01 0.84159250 0.67849220 Nucleic acid biosynthesis 0.16310030 Acclimation B07 0.44505530 0.30794600 Vitamin biosynthesis 0.13710930 Acclimation B08 0.44618700 0.31972550 Aromatic compound biosynthesis 0.12646150 Acclimation D09 0.25519710 0.13259720 Antibiotic degradation 0.12259990 Acclimation B04 0.54481600 0.43492620 SCFA biosynthesis 0.10988980 Acclimation D03 0.29173710 0.19845420 Sugar degradation 0.09328290 Acclimation S02 0.19281000 0.15677840 Appendages 0.03603160 Acclimation B10 0.05960097 0.03669565 Antibiotic biosynthesis 0.02290532 Acclimation 10.3.2 Warm population 10.3.2.1 Structural zeros acclimation_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Acclimation&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() antibiotics_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point == &quot;Antibiotics&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% mutate(all_zeros_acclimation = all(c_across(all_of(acclimation_samples)) == 0)) %&gt;% mutate(all_zeros_antibiotics = all(c_across(all_of(antibiotics_samples)) == 0)) %&gt;% mutate(average_acclimation = mean(c_across(all_of(acclimation_samples)), na.rm = TRUE)) %&gt;% mutate(average_antibiotics = mean(c_across(all_of(antibiotics_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_acclimation == TRUE || all_zeros_antibiotics==TRUE) %&gt;% mutate(present = case_when( all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;antibiotics&quot;, !all_zeros_acclimation &amp; all_zeros_antibiotics ~ &quot;acclimation&quot;, !all_zeros_acclimation &amp; !all_zeros_antibiotics ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;acclimation&quot;, average_acclimation, average_antibiotics)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Acclimation structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) # A tibble: 12 × 2 # Rowwise: phylum sample_count &lt;chr&gt; &lt;int&gt; 1 p__Bacillota_A 64 2 p__Bacteroidota 32 3 p__Bacillota 16 4 p__Cyanobacteriota 9 5 p__Pseudomonadota 8 6 p__Bacillota_B 3 7 p__Desulfobacterota 3 8 p__Bacillota_C 2 9 p__Verrucomicrobiota 2 10 p__Actinomycetota 1 11 p__Campylobacterota 1 12 p__Elusimicrobiota 1 structural_zeros %&gt;% filter(present==&quot;acclimation&quot;) %&gt;% select(1,5:10) # A tibble: 142 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_11:bin_000008 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 2 LI1_2nd_8:bin_000013 p__Verrucomicrobiota c__Verrucomicrobiae o__Verrucomicrobiales f__Akkermansiaceae g__Akkermansia s__ 3 AH1_2nd_19:bin_000005 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Roseburia s__ 4 AH1_2nd_20:bin_000009 p__Bacillota_A c__Clostridia o__Lachnospirales f__Lachnospiraceae g__Kineothrix s__ 5 AH1_2nd_18:bin_000011 p__Bacillota c__Bacilli o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus s__ 6 LI1_2nd_2:bin_000001 p__Bacillota_A c__Clostridia o__Oscillospirales f__Ruminococcaceae g__ s__ 7 AH1_2nd_6:bin_000035 p__Bacillota c__Bacilli o__RF39 f__UBA660 g__Faecisoma s__ 8 LI1_2nd_4:bin_000003 p__Bacillota c__Bacilli o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma s__ 9 AH1_2nd_1:bin_000039 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Marinifilaceae g__Odoribacter s__ 10 AH1_2nd_2:bin_000018 p__Elusimicrobiota c__Elusimicrobia o__Elusimicrobiales f__Elusimicrobiaceae g__UBA1436 s__ # ℹ 132 more rows Antibiotics structural_zeros %&gt;% filter(present==&quot;antibiotics&quot;) %&gt;% select(1,5:10) # A tibble: 7 × 7 # Rowwise: genome phylum class order family genus species &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; &lt;chr&gt; 1 AH1_2nd_7:bin_000003 p__Pseudomonadota c__Gammaproteobacteria o__Enterobacterales f__Enterobacteriaceae g__Proteus s__Proteus cibarius 2 LI1_2nd_8:bin_000030 p__Actinomycetota c__Actinomycetia o__Mycobacteriales f__Mycobacteriaceae g__Corynebacterium s__ 3 LI1_2nd_8:bin_000077 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__Parabacteroides sp003480915 4 LI1_2nd_5:bin_000032 p__Bacillota_A c__Clostridia o__Christensenellales f__UBA1242 g__Caccovivens s__ 5 AH1_2nd_18:bin_000013 p__Bacteroidota c__Bacteroidia o__Bacteroidales f__Tannerellaceae g__Parabacteroides s__ 6 LI1_2nd_5:bin_000069 p__Bacillota c__Bacilli o__RF39 f__UBA660 g__ s__ 7 AH1_2nd_20:bin_000061 p__Bacillota c__Bacilli o__Lactobacillales f__Enterococcaceae g__Enterococcus s__ Community elements differences in structural zeros element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) # A tibble: 20 × 3 trait p_value p_adjust &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 B0220 0.00618 0.0497 2 B0708 0.00280 0.0497 3 B0709 0.00662 0.0497 4 B1012 0.00618 0.0497 5 D0203 0.00559 0.0497 6 D0205 0.00280 0.0497 7 D0206 0.00280 0.0497 8 D0207 0.00280 0.0497 9 D0210 0.00280 0.0497 10 D0211 0.00662 0.0497 11 D0213 0.00685 0.0497 12 D0305 0.00685 0.0497 13 D0308 0.00685 0.0497 14 D0610 0.00618 0.0497 15 D0706 0.00662 0.0497 16 D0902 0.00618 0.0497 17 D0905 0.00618 0.0497 18 D0908 0.00280 0.0497 19 D0911 0.00618 0.0497 20 S0104 0.00685 0.0497 10.3.2.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;) )%&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_2803, file = &quot;data/ancombc_antib_accl_warm_2803.Rdata&quot;) load(&quot;data/ancombc_antib_accl_warm_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_2803$res %&gt;% dplyr::select(taxon, lfc_time_pointAntibiotics, p_time_pointAntibiotics) %&gt;% filter(p_time_pointAntibiotics &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointAntibiotics) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointAntibiotics) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_time_pointAntibiotics, y=forcats::fct_reorder(genome,lfc_time_pointAntibiotics), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in acclimation on the left side and in antibiotics on the right side Phyla of the significant MAGs Acclimation ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&lt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacteroidota Phocaeicola 2 Bacteroidota Alistipes 3 Pseudomonadota Salmonella Salmonella enterica 4 Bacteroidota Bacteroides Bacteroides fragilis_B Antibiotics ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 4 2 Bacillota 2 3 Bacillota_A 1 4 Chlamydiota 1 5 Pseudomonadota 1 ancombc_rand_table_mag%&gt;% filter(lfc_time_pointAntibiotics&gt;0) %&gt;% select(phylum, genus, species) phylum genus species 1 Bacteroidota Parabacteroides 2 Bacteroidota Bacteroides 3 Bacteroidota Bacteroides Bacteroides intestinalis 4 Bacillota_A MGBC116941 5 Bacillota Staphylococcus Staphylococcus shinii 6 Bacillota Ureaplasma 7 Bacteroidota Bacteroides 8 Pseudomonadota 9 Chlamydiota 10.3.2.3 Differences in the functional capacity sample_sub &lt;- sample_metadata %&gt;% filter(Population == &quot;Warm&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 10.3.2.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.350 0.0225 2 Antibiotics 0.250 0.0665 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.88114, p-value = 0.03317 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 70, p-value = 0.0003291 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(8,9)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(8,9)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-Antibiotics)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Antibiotics&quot;,&quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#d57d2c&quot;,&quot;#003a45&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ labs(fill=&quot;Time point&quot;) 10.3.2.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(time_point) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 time_point MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Acclimation 0.348 0.0158 2 Antibiotics 0.268 0.0585 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.85808, p-value = 0.01428 wilcox.test(value ~ time_point, data=MCI) Wilcoxon rank sum exact test data: value by time_point W = 69, p-value = 0.0005759 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(8,9)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) .table td.tinytable_css_egixh7c4nigtmj537uc7, .table th.tinytable_css_egixh7c4nigtmj537uc7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_55kh2ewflwzhksycgee2, .table th.tinytable_css_55kh2ewflwzhksycgee2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Code_function Acclimation Antibiotics Function Difference time_point D02 0.42716670 0.21793910 Polysaccharide degradation 0.20922760 Acclimation B02 0.62784110 0.47187490 Amino acid biosynthesis 0.15596620 Acclimation D03 0.34000130 0.18813800 Sugar degradation 0.15186330 Acclimation B08 0.44482920 0.33165890 Aromatic compound biosynthesis 0.11317030 Acclimation D05 0.33300830 0.22491860 Amino acid degradation 0.10808970 Acclimation D09 0.24738110 0.14240830 Antibiotic degradation 0.10497280 Acclimation B06 0.70894950 0.61231610 Organic anion biosynthesis 0.09663340 Acclimation B09 0.02947309 0.01568554 Metallophore biosynthesis 0.01378755 Acclimation "],["does-antibiotic-administration-remove-the-differences-found-in-the-two-populations.html", "Chapter 11 Does antibiotic administration remove the differences found in the two populations? 11.1 Alpha diversity 11.2 Beta diversity", " Chapter 11 Does antibiotic administration remove the differences found in the two populations? 11.1 Alpha diversity ****Shapiro test*** alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0006105801 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.0001499955 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.08396948 alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(time_point == &quot;Antibiotics&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;, &quot;neutral&quot;))) %&gt;% filter(metric!=&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + stat_compare_means(method = &quot;t.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ facet_grid( ~ metric, scales = &quot;free_y&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title = element_text(size = 14), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% filter(time_point == &quot;Antibiotics&quot; ) %&gt;% ggplot(aes(y = value, x = Population, color=Population, fill=Population)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + stat_compare_means(method = &quot;wilcox.test&quot;, show.legend = F, size = 3, label.x = c(1.5))+ facet_grid( ~ metric, scales = &quot;free_y&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title = element_text(size = 14), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) 11.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point == &quot;Antibiotics&quot;) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.023847 0.0238466 7.3041 999 0.012 * Residuals 23 0.075091 0.0032648 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_7grc3nmurzz6rrntdr6y, .table th.tinytable_css_7grc3nmurzz6rrntdr6y { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_56jh7gknw619zzwu6cns, .table th.tinytable_css_56jh7gknw619zzwu6cns { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.381149 0.1399188 3.741662 0.001 Residual 23 8.489926 0.8600812 NA NA Total 24 9.871076 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.045616 0.045616 5.3952 999 0.026 * Residuals 23 0.194465 0.008455 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nf4wr2tzapfedu9dteqb, .table th.tinytable_css_nf4wr2tzapfedu9dteqb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_52hfz976hrdto2bb2dyi, .table th.tinytable_css_52hfz976hrdto2bb2dyi { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 1.808695 0.1896467 5.382683 0.001 Residual 23 7.728486 0.8103533 NA NA Total 24 9.537181 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$Population) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.03359 0.033593 2.0784 999 0.175 Residuals 23 0.37174 0.016162 adonis2(phylo ~ Population, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p1py4y1cyyx3xr4r9z7a, .table th.tinytable_css_p1py4y1cyyx3xr4r9z7a { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_e2sb0mh2mvwxdp2nw0cw, .table th.tinytable_css_e2sb0mh2mvwxdp2nw0cw { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.9536751 0.1675005 4.627645 0.001 Residual 23 4.7398896 0.8324995 NA NA Total 24 5.6935647 1.0000000 NA NA richness %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code)) %&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_point(size = 2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme() neutral %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values=c(&#39;#008080&#39;,&quot;#d57d2c&quot;)) + geom_point(size = 2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x = &quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme() phylo %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace=FALSE) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta, by = join_by(sample == Tube_code))%&gt;% group_by(Population, time_point) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=Population)) + scale_color_manual(values = c(&#39;#008080&#39;, &quot;#d57d2c&quot;))+ geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (),x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme() "],["are-the-microbial-communities-similar-in-both-donor-samples.html", "Chapter 12 Are the microbial communities similar in both donor samples?", " Chapter 12 Are the microbial communities similar in both donor samples? "],["does-the-donor-sample-maintain-the-microbial-community-found-in-acclimation.html", "Chapter 13 Does the donor sample maintain the microbial community found in acclimation? 13.1 Alpha diversity 13.2 Beta diversity", " Chapter 13 Does the donor sample maintain the microbial community found in acclimation? sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=time_point) %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Donor1&quot;, &quot;Donor2&quot;) ~ &quot;Inoculum&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Inoculum&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Inoculum&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Inoculum&quot;)) 13.1 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Warm_control&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Inoculum&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(20711.68) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 100.6 102.2 -46.3 92.6 7 Scaled residuals: Min 1Q Median 3Q Max -1.3578 -0.4057 0.1258 0.4356 1.0316 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.02426 0.1558 Number of obs: 11, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 4.45780 0.06336 70.357 &lt;2e-16 *** treatmentInoculum 0.26416 0.11889 2.222 0.0263 * --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmntInclm -0.196 Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 76.39545 77.18435 -34.19773 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.001564204 9.209474 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 44.60136 3.069825 8 14.528962 0.0000 treatmentInoculum 2.55632 7.199377 1 0.355075 0.7828 Correlation: (Intr) treatmentInoculum -0.426 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.88704179 -0.57820816 -0.05183832 0.77001373 1.31706229 Number of Observations: 11 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 36.42309 37.21198 -14.21154 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 1.248303 0.1584519 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 6.515426 0.4194397 8 15.53364 0.0000 treatmentInoculum 3.016106 0.1931492 1 15.61542 0.0407 Correlation: (Intr) treatmentInoculum -0.034 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -0.70710677 -0.11362573 0.02836225 0.10413486 0.70710677 Number of Observations: 11 Number of Groups: 9 13.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.107597 0.107597 91.374 999 0.001 *** Residuals 9 0.010598 0.001178 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_g262f1wad7t9clk7keif, .table th.tinytable_css_g262f1wad7t9clk7keif { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_7t95pgled7hgx67met9f, .table th.tinytable_css_7t95pgled7hgx67met9f { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.2164835 0.1150692 1.170287 0.3333333 Residual 9 1.6648486 0.8849308 NA NA Total 10 1.8813321 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.097902 0.097902 27.881 999 0.001 *** Residuals 9 0.031602 0.003511 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_90bbcxfm7r1p9uzbhzvw, .table th.tinytable_css_90bbcxfm7r1p9uzbhzvw { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4dkm5dm54nwvlwcj7ntm, .table th.tinytable_css_4dkm5dm54nwvlwcj7ntm { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.2069048 0.120704 1.235462 0.3333333 Residual 9 1.5072448 0.879296 NA NA Total 10 1.7141496 1.000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.0039521 0.0039521 2.2674 999 0.287 Residuals 9 0.0156876 0.0017431 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_g8qsjx03qn7ss3cpu3c0, .table th.tinytable_css_g8qsjx03qn7ss3cpu3c0 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ewfro1vhzz0x2hue4xqy, .table th.tinytable_css_ewfro1vhzz0x2hue4xqy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.03659982 0.1562009 1.666047 0.3333333 Residual 9 0.19771257 0.8437991 NA NA Total 10 0.23431239 1.0000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.6, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) "],["is-the-donor-sample-microbiota-different-to-recipient-microbiota.html", "Chapter 14 Is the donor sample microbiota different to recipient microbiota? 14.1 Alpha diversity 14.2 Beta diversity", " Chapter 14 Is the donor sample microbiota different to recipient microbiota? 14.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Inoculum&quot;)) samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Inoculum&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Inoculum&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Inoculum&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + scale_fill_manual(values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(6.3722) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 220.0 224.4 -106.0 212.0 18 Scaled residuals: Min 1Q Median 3Q Max -1.9465 -0.5611 0.1514 0.5619 1.1818 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0 0 Number of obs: 22, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8140 0.1410 27.045 &lt; 2e-16 *** treatmentInoculum 0.8465 0.1808 4.682 2.84e-06 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trtmntInclm -0.780 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;-nlme:: lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 170.0812 174.0642 -81.04062 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.842312 11.53095 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.39898 4.168810 12 4.173609 0.0013 treatmentInoculum 29.09078 5.071625 12 5.735988 0.0001 Correlation: (Intr) treatmentInoculum -0.699 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.4825911 -0.5793956 0.1032662 0.5491274 1.8006237 Number of Observations: 22 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 81.55999 85.54292 -36.78 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8962527 1.131407 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.534169 0.4811271 12 11.502509 0.000 treatmentInoculum 0.234279 0.5080710 12 0.461115 0.653 Correlation: (Intr) treatmentInoculum -0.582 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.42139306 -0.43646015 -0.05258636 0.51547418 1.54132280 Number of Observations: 22 Number of Groups: 9 14.2 Beta diversity Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.12878 0.128776 13.013 999 0.002 ** Residuals 20 0.19792 0.009896 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nsvcphvabyandn7zrx6z, .table th.tinytable_css_nsvcphvabyandn7zrx6z { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_njozgqidh0wch0hxwhxt, .table th.tinytable_css_njozgqidh0wch0hxwhxt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 1.76810 0.2746704 7.573672 0.001 Residual 20 4.66907 0.7253296 NA NA Total 21 6.43717 1.0000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.071939 0.071939 5.5113 999 0.033 * Residuals 20 0.261057 0.013053 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_pr0qxigvtgmrjnutbaa9, .table th.tinytable_css_pr0qxigvtgmrjnutbaa9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_3512a2m415qizdoc9hto, .table th.tinytable_css_3512a2m415qizdoc9hto { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 2.109391 0.3208221 9.447366 0.003 Residual 20 4.465565 0.6791779 NA NA Total 21 6.574956 1.0000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.04724 0.047241 2.6056 999 0.129 Residuals 20 0.36261 0.018131 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_nzaslvpreo7tng3iwcb6, .table th.tinytable_css_nzaslvpreo7tng3iwcb6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_cjyhjsbzdc7yw6a4cdv0, .table th.tinytable_css_cjyhjsbzdc7yw6a4cdv0 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 1 0.3764016 0.2391132 6.285119 0.003 Residual 20 1.1977547 0.7608868 NA NA Total 21 1.5741563 1.0000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;, &quot;#d5b52c&quot;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) "],["faecal-microbiota-transplantation-fmt.html", "Chapter 15 Faecal Microbiota Transplantation (FMT) 15.1 Does FMT change the microbial community over time? 15.2 Do FMT change the microbial community compared to antibiotics and acclimation? 15.3 Is the gut microbiota similar to the inoculum after FMT? 15.4 What is the trend of the microbiota in each type after FMT? 15.5 Differences between acclimation and FMT1 across the three experimental groups 15.6 Differences between FMT1 and FMT2 across the three experimental groups", " Chapter 15 Faecal Microbiota Transplantation (FMT) 15.1 Does FMT change the microbial community over time? 15.1.1 Alpha diversity sample_metadata &lt;- sample_metadata %&gt;% mutate(treatment=time_point) %&gt;% mutate(treatment=case_when( treatment %in% c(&quot;Donor1&quot;, &quot;Donor2&quot;) ~ &quot;Inoculum&quot;, TRUE ~ treatment )) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;) ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_boxplot(width = 0.5,alpha=0.5 ,outlier.shape = NA, show.legend = FALSE) + geom_jitter(width = 0.2, show.legend = FALSE) + scale_color_manual(values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + scale_fill_manual(values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + facet_wrap( ~ metric, scales = &quot;free&quot;)+ theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(4.3157) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 171.5 174.8 -81.7 163.5 13 Scaled residuals: Min 1Q Median 3Q Max -1.72426 -0.71683 -0.08993 0.38000 1.84050 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0 0 Number of obs: 17, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9416 0.1772 22.247 &lt;2e-16 *** treatmentFMT2 0.4080 0.2420 1.686 0.0918 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) tretmntFMT2 -0.732 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- nlme::lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 129.347 132.1792 -60.6735 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 3.521142 11.47471 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.81671 4.241888 8 5.850393 0.0004 treatmentFMT2 15.06479 5.589803 7 2.695048 0.0309 Correlation: (Intr) treatmentFMT2 -0.701 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.75054530 -0.55659466 -0.07097174 0.51610612 1.27053535 Number of Observations: 17 Number of Groups: 9 Phylogenetic Model_phylo &lt;- nlme::lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 56.31055 59.14275 -24.15527 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.7045591 0.8405942 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.176014 0.3840968 8 10.872296 0.0000 treatmentFMT2 0.933438 0.4133828 7 2.258048 0.0585 Correlation: (Intr) treatmentFMT2 -0.582 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.1450921 -0.5911576 -0.1410070 0.4851316 2.3184128 Number of Observations: 17 Number of Groups: 9 15.1.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.017295 0.0172950 2.8289 999 0.093 . Residuals 15 0.091706 0.0061137 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_kc88hvo5vbu6nrpuon5z, .table th.tinytable_css_kc88hvo5vbu6nrpuon5z { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7nsw739mkm1yoo0arq2j, .table th.tinytable_css_7nsw739mkm1yoo0arq2j { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3571397 0.07959561 1.297184 0.00390625 Residual 15 4.1297869 0.92040439 NA NA Total 16 4.4869265 1.00000000 NA NA Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.009753 0.0097526 0.7091 999 0.42 Residuals 15 0.206312 0.0137541 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_hspi8duga7lyvr6ex3cl, .table th.tinytable_css_hspi8duga7lyvr6ex3cl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_chbevdegyyr0r1pje0uo, .table th.tinytable_css_chbevdegyyr0r1pje0uo { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.3157079 0.08117526 1.325203 0.00390625 Residual 15 3.5735051 0.91882474 NA NA Total 16 3.8892130 1.00000000 NA NA Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.010945 0.010944 0.6593 999 0.542 Residuals 15 0.248985 0.016599 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_higkkqybz8qa1r6ogtjq, .table th.tinytable_css_higkkqybz8qa1r6ogtjq { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4ejxkb3ribs856xs2g1h, .table th.tinytable_css_4ejxkb3ribs856xs2g1h { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 1 0.06393539 0.09448624 1.565182 0.0703125 Residual 15 0.61272811 0.90551376 NA NA Total 16 0.67666350 1.00000000 NA NA NMDS richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 4) + scale_color_manual(name=&quot;Time point&quot;,values=c(&quot;#76b183&quot;, &#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.9, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 15.2 Do FMT change the microbial community compared to antibiotics and acclimation? alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Antibiotics&quot;, &quot;Acclimation&quot;,&quot;FMT1&quot;,&quot;FMT2&quot;) ) 15.2.1 Alpha diversity Richness # Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment + (1|individual), data = alpha_div_meta) # summary(Modelq0GLMMNB) #emmeans(Modelq0GLMMNB, pairwise ~ treatment) model_nb &lt;- MASS::glm.nb(richness ~ treatment, data = alpha_div_meta) summary(model_nb) Call: MASS::glm.nb(formula = richness ~ treatment, data = alpha_div_meta, init.theta = 2.267478601, link = log) Coefficients: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.8140 0.2268 16.814 &lt;2e-16 *** treatmentAntibiotics -1.0895 0.3388 -3.216 0.0013 ** treatmentFMT1 0.1275 0.3302 0.386 0.6993 treatmentFMT2 0.5355 0.3192 1.678 0.0934 . --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 (Dispersion parameter for Negative Binomial(2.2675) family taken to be 1) Null deviance: 58.599 on 33 degrees of freedom Residual deviance: 37.469 on 30 degrees of freedom AIC: 323.67 Number of Fisher Scoring iterations: 1 Theta: 2.267 Std. Err.: 0.586 2 x log-likelihood: -313.673 emmeans(model_nb, pairwise ~ treatment) $emmeans treatment emmean SE df asymp.LCL asymp.UCL Acclimation 3.81 0.227 Inf 3.37 4.26 Antibiotics 2.72 0.252 Inf 2.23 3.22 FMT1 3.94 0.240 Inf 3.47 4.41 FMT2 4.35 0.225 Inf 3.91 4.79 Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - Antibiotics 1.089 0.339 Inf 3.216 0.0071 Acclimation - FMT1 -0.128 0.330 Inf -0.386 0.9804 Acclimation - FMT2 -0.536 0.319 Inf -1.678 0.3355 Antibiotics - FMT1 -1.217 0.348 Inf -3.500 0.0026 Antibiotics - FMT2 -1.625 0.337 Inf -4.818 &lt;.0001 FMT1 - FMT2 -0.408 0.329 Inf -1.241 0.6004 Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 4 estimates Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 243.2135 251.6207 -115.6068 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.655396 9.025318 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.398983 3.385083 22 5.139899 0.0000 treatmentAntibiotics -9.707909 4.404610 22 -2.204034 0.0383 treatmentFMT1 7.165981 4.404610 22 1.626927 0.1180 treatmentFMT2 22.482511 4.254575 22 5.284313 0.0000 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.607 treatmentFMT1 -0.607 0.465 treatmentFMT2 -0.628 0.483 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.19758428 -0.47944101 -0.03077563 0.31591722 1.64995087 Number of Observations: 34 Number of Groups: 9 emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.40 3.39 8 9.593 25.2 Antibiotics 7.69 3.57 8 -0.546 15.9 FMT1 24.56 3.57 8 16.328 32.8 FMT2 39.88 3.39 8 32.075 47.7 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 9.71 4.40 22 2.204 0.1533 Acclimation - FMT1 -7.17 4.40 22 -1.627 0.3848 Acclimation - FMT2 -22.48 4.25 22 -5.284 0.0001 Antibiotics - FMT1 -16.87 4.55 22 -3.704 0.0063 Antibiotics - FMT2 -32.19 4.40 22 -7.308 &lt;.0001 FMT1 - FMT2 -15.32 4.40 22 -3.477 0.0107 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 243.2135 251.6207 -115.6068 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.655396 9.025318 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 17.398983 3.385083 22 5.139899 0.0000 treatmentAntibiotics -9.707909 4.404610 22 -2.204034 0.0383 treatmentFMT1 7.165981 4.404610 22 1.626927 0.1180 treatmentFMT2 22.482511 4.254575 22 5.284313 0.0000 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.607 treatmentFMT1 -0.607 0.465 treatmentFMT2 -0.628 0.483 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.19758428 -0.47944101 -0.03077563 0.31591722 1.64995087 Number of Observations: 34 Number of Groups: 9 emmeans(Model_neutral, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 17.40 3.39 8 9.593 25.2 Antibiotics 7.69 3.57 8 -0.546 15.9 FMT1 24.56 3.57 8 16.328 32.8 FMT2 39.88 3.39 8 32.075 47.7 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 9.71 4.40 22 2.204 0.1533 Acclimation - FMT1 -7.17 4.40 22 -1.627 0.3848 Acclimation - FMT2 -22.48 4.25 22 -5.284 0.0001 Antibiotics - FMT1 -16.87 4.55 22 -3.704 0.0063 Antibiotics - FMT2 -32.19 4.40 22 -7.308 &lt;.0001 FMT1 - FMT2 -15.32 4.40 22 -3.477 0.0107 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 130.0245 138.4317 -59.01224 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8207678 1.33387 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 5.534169 0.5220547 22 10.600745 0.0000 treatmentAntibiotics -1.632652 0.6515261 22 -2.505889 0.0201 treatmentFMT1 -1.454635 0.6515261 22 -2.232658 0.0361 treatmentFMT2 -0.424717 0.6287926 22 -0.675448 0.5064 Correlation: (Intr) trtmnA trFMT1 treatmentAntibiotics -0.581 treatmentFMT1 -0.581 0.464 treatmentFMT2 -0.602 0.483 0.483 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.06341294 -0.41689413 -0.09586612 0.41091089 2.13759464 Number of Observations: 34 Number of Groups: 9 emmeans(Model_phylo, pairwise ~ treatment) $emmeans treatment emmean SE df lower.CL upper.CL Acclimation 5.53 0.522 8 4.33 6.74 Antibiotics 3.90 0.549 8 2.64 5.17 FMT1 4.08 0.549 8 2.81 5.35 FMT2 5.11 0.522 8 3.91 6.31 Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - Antibiotics 1.633 0.652 22 2.506 0.0867 Acclimation - FMT1 1.455 0.652 22 2.233 0.1456 Acclimation - FMT2 0.425 0.629 22 0.675 0.9053 Antibiotics - FMT1 -0.178 0.674 22 -0.264 0.9934 Antibiotics - FMT2 -1.208 0.652 22 -1.854 0.2761 FMT1 - FMT2 -1.030 0.652 22 -1.581 0.4095 Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 4 estimates 15.2.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.096421 0.032140 4.8803 999 0.011 * Residuals 30 0.197572 0.006586 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_u596b56rf75so4s6qtew, .table th.tinytable_css_u596b56rf75so4s6qtew { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6ycyct5se14fnmrv3w2e, .table th.tinytable_css_6ycyct5se14fnmrv3w2e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 2.683764 0.2155119 2.747165 0.001 Residual 30 9.769211 0.7844881 NA NA Total 33 12.452975 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8449464 2.247427 0.13030507 0.003 0.018 . 2 Acclimation vs FMT1 1 0.9551308 2.926054 0.16322910 0.001 0.006 * 3 Acclimation vs FMT2 1 0.9130048 3.195028 0.16645080 0.001 0.006 * 4 Antibiotics vs FMT1 1 0.9852559 2.654101 0.15936620 0.004 0.024 . 5 Antibiotics vs FMT2 1 1.3163001 4.051926 0.21267802 0.001 0.006 * 6 FMT1 vs FMT2 1 0.3571397 1.297184 0.07959561 0.123 0.738 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.10156 0.033852 2.4329 999 0.08 . Residuals 30 0.41743 0.013914 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w5gbbmn0mi09n3sdpwh1, .table th.tinytable_css_w5gbbmn0mi09n3sdpwh1 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_v3m335jj0d513bzbwoiu, .table th.tinytable_css_v3m335jj0d513bzbwoiu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 3.379624 0.2803282 3.895223 0.001 Residual 30 8.676329 0.7196718 NA NA Total 33 12.055953 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.8963625 2.634901 0.14941400 0.002 0.012 . 2 Acclimation vs FMT1 1 1.3127773 4.629826 0.23585668 0.001 0.006 * 3 Acclimation vs FMT2 1 1.3540292 5.339808 0.25022756 0.001 0.006 * 4 Antibiotics vs FMT1 1 1.3354906 4.047671 0.22427663 0.002 0.012 . 5 Antibiotics vs FMT2 1 1.5437899 5.235421 0.25872559 0.001 0.006 * 6 FMT1 vs FMT2 1 0.3157079 1.325203 0.08117526 0.153 0.918 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 3 0.46252 0.154173 6.1575 999 0.003 ** Residuals 30 0.75115 0.025038 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_v638l1emii5x9ca6p9q0, .table th.tinytable_css_v638l1emii5x9ca6p9q0 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_d6eensv848py29nz6w9q, .table th.tinytable_css_d6eensv848py29nz6w9q { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 3 1.912526 0.381447 6.166764 0.001 Residual 30 3.101345 0.618553 NA NA Total 33 5.013871 1.000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Acclimation vs Antibiotics 1 0.72982793 4.398998 0.22676417 0.002 0.012 . 2 Acclimation vs FMT1 1 0.25319427 3.273842 0.17915456 0.037 0.222 3 Acclimation vs FMT2 1 0.36496892 6.396667 0.28560797 0.003 0.018 . 4 Antibiotics vs FMT1 1 1.12675209 7.208093 0.33987463 0.002 0.012 . 5 Antibiotics vs FMT2 1 1.33118440 10.285949 0.40678516 0.002 0.012 . 6 FMT1 vs FMT2 1 0.06393539 1.565182 0.09448624 0.163 0.978 15.3 Is the gut microbiota similar to the inoculum after FMT? 15.3.1 Alpha diversity alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) alpha_div_meta$treatment &lt;- factor(alpha_div_meta$treatment, levels=c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = &quot;sample&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% filter(type==&quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;, &quot;Antibiotics&quot;, &quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) %&gt;% ggplot(aes(y = value, x = treatment, color=treatment, fill=treatment)) + geom_jitter(width = 0.2, show.legend = FALSE) + geom_boxplot(width = 0.5, alpha=0.5, outlier.shape = NA, show.legend = FALSE) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + scale_fill_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + facet_wrap(. ~ metric, scales = &quot;free&quot;) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.text = element_text(size = 12), axis.text.x = element_text(angle = 45, hjust = 1), axis.title.y = element_text(size = 14), axis.title.x = element_blank(), strip.text = element_text(size = 16, lineheight = 0.6) ) + ylab(&quot;Alpha diversity&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == sample))%&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ treatment+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(6.2707) ( log ) Formula: richness ~ treatment + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 302.8 309.8 -146.4 292.8 25 Scaled residuals: Min 1Q Median 3Q Max -2.04296 -0.55690 -0.04598 0.41609 2.18068 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 4.203e-12 2.05e-06 Number of obs: 30, groups: individual, 9 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9416 0.1495 26.359 &lt; 2e-16 *** treatmentFMT2 0.4080 0.2038 2.002 0.045252 * treatmentInoculum 0.7189 0.1880 3.824 0.000132 *** --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) trFMT2 tretmntFMT2 -0.734 trtmntInclm -0.795 0.584 optimizer (Nelder_Mead) convergence code: 0 (OK) boundary (singular) fit: see help(&#39;isSingular&#39;) Neutral Model_neutral &lt;- lme(fixed = neutral ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_neutral) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 231.6482 238.1274 -110.8241 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.999193 11.81926 Fixed effects: neutral ~ treatment Value Std.Error DF t-value p-value (Intercept) 24.92148 4.663457 19 5.343992 0.0000 treatmentFMT2 14.96002 5.768065 19 2.593594 0.0178 treatmentInoculum 21.85949 5.444172 19 4.015210 0.0007 Correlation: (Intr) trFMT2 treatmentFMT2 -0.660 treatmentInoculum -0.705 0.570 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.18205314 -0.44648649 -0.05242603 0.48061393 1.78093930 Number of Observations: 30 Number of Groups: 9 Phylogenetic Model_phylo &lt;- lme(fixed = phylogenetic ~ treatment, data = alpha_div_meta, random = ~ 1 | individual) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 89.12096 95.60014 -39.56048 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.8687014 0.713253 Fixed effects: phylogenetic ~ treatment Value Std.Error DF t-value p-value (Intercept) 4.119285 0.3865820 19 10.655656 0.0000 treatmentFMT2 0.990167 0.3494597 19 2.833423 0.0106 treatmentInoculum 1.796914 0.3376900 19 5.321194 0.0000 Correlation: (Intr) trFMT2 treatmentFMT2 -0.486 treatmentInoculum -0.512 0.566 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.60112262 -0.56309132 -0.04618045 0.47823718 2.30187547 Number of Observations: 30 Number of Groups: 9 15.3.2 Beta diversity samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) Richness richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.098367 0.049184 6.3083 999 0.004 ** Residuals 27 0.210508 0.007797 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 adonis2(richness ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(richness))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_twi8ddz3adxx0yqxzig2, .table th.tinytable_css_twi8ddz3adxx0yqxzig2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2mrf53u6t8c6zytz9m7b, .table th.tinytable_css_2mrf53u6t8c6zytz9m7b { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.539185 0.2007101 3.389991 0.001 Residual 27 6.129515 0.7992899 NA NA Total 29 7.668700 1.0000000 NA NA pairwise.adonis(richness, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Inoculum vs FMT1 1 1.0509630 4.724291 0.19913308 0.001 0.003 * 2 Inoculum vs FMT2 1 0.8197254 4.201012 0.17358829 0.001 0.003 * 3 FMT1 vs FMT2 1 0.3571397 1.297184 0.07959561 0.122 0.366 Neutral neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.03502 0.017509 1.2784 999 0.291 Residuals 27 0.36980 0.013696 adonis2(neutral ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(neutral))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(neutral))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ysxvdm9c5ypmu54et2wc, .table th.tinytable_css_ysxvdm9c5ypmu54et2wc { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6pj4owepvtd3fh77bfum, .table th.tinytable_css_6pj4owepvtd3fh77bfum { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.462216 0.2049975 3.481079 0.001 Residual 27 5.670632 0.7950025 NA NA Total 29 7.132848 1.0000000 NA NA pairwise.adonis(neutral, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Inoculum vs FMT1 1 1.0077208 4.808422 0.20196308 0.001 0.003 * 2 Inoculum vs FMT2 1 0.7880599 4.163185 0.17229454 0.001 0.003 * 3 FMT1 vs FMT2 1 0.3157079 1.325203 0.08117526 0.172 0.516 Phylogenetic phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$treatment) %&gt;% permutest(.) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01119 0.0055948 0.3668 999 0.72 Residuals 27 0.41184 0.0152533 adonis2(phylo ~ treatment, data = subset_meta %&gt;% arrange(match(sample,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(sample,labels(phylo))) %&gt;% pull(individual)) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_bi8veh5lboacandax87y, .table th.tinytable_css_bi8veh5lboacandax87y { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ask0xm2aaqwlz5fs3a0a, .table th.tinytable_css_ask0xm2aaqwlz5fs3a0a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 0.1936316 0.1519883 2.419591 0.001 Residual 27 1.0803587 0.8480117 NA NA Total 29 1.2739903 1.0000000 NA NA pairwise.adonis(phylo, subset_meta$treatment, perm = 999) pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig 1 Inoculum vs FMT1 1 0.11166475 2.363709 0.11064134 0.038 0.114 2 Inoculum vs FMT2 1 0.10804939 3.322530 0.14246010 0.013 0.039 . 3 FMT1 vs FMT2 1 0.06393539 1.565182 0.09448624 0.151 0.453 NMDS samples_to_keep &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) %&gt;% select(sample) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;) ) alpha_div_meta$treatment &lt;- factor(alpha_div_meta$treatment, levels=c(&quot;Acclimation&quot;,&quot;Antibiotics&quot;,&quot;Inoculum&quot;, &quot;FMT1&quot;, &quot;FMT2&quot;)) richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) richness %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) neutral %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;)) + geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) phylo %&gt;% vegan::metaMDS(., trymax = 500, k = 2, trace=0) %&gt;% vegan::scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% dplyr::left_join(subset_meta, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(aes(x = NMDS1, y = NMDS2, color = treatment)) + geom_point(size = 3) + scale_color_manual(name=&quot;Time point&quot;,values=c(&#39;#008080&#39;,&quot;#003a45&quot;, &quot;#d5b52c&quot;, &quot;#76b183&quot;,&#39;#40714b50&#39;))+ geom_segment(aes(x = x_cen, y = y_cen, xend = NMDS1, yend = NMDS2), alpha = 0.5, show.legend = FALSE) + theme( axis.title = element_text(size = 12, face = &quot;bold&quot;), axis.text = element_text(size = 10), panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), legend.text = element_text(size = 10), legend.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot; ) 15.3.2.1 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;,&quot;FMT2&quot;, &quot;Inoculum&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT1 0.353 0.0186 2 FMT2 0.346 0.0255 3 Inoculum 0.354 0.0374 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.87186, p-value = 0.001843 kruskal.test(value ~ treatment, data=MCI) Kruskal-Wallis rank sum test data: value by treatment Kruskal-Wallis chi-squared = 0.34491, df = 2, p-value = 0.8416 15.3.3 Inoculum vs FMT1 15.3.3.1 Structural zeros FMT_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment == &quot;FMT1&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Donor_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment ==&quot;Inoculum&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Inoculum&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT = all(c_across(all_of(FMT_samples)) == 0)) %&gt;% mutate(all_zeros_Donor = all(c_across(all_of(Donor_samples)) == 0)) %&gt;% mutate(average_FMT = mean(c_across(all_of(FMT_samples)), na.rm = TRUE)) %&gt;% mutate(average_Donor = mean(c_across(all_of(Donor_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT == TRUE || all_zeros_Donor==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT &amp; !all_zeros_Donor ~ &quot;Inoculum&quot;, !all_zeros_FMT &amp; all_zeros_Donor ~ &quot;FMT1&quot;, !all_zeros_FMT &amp; !all_zeros_Donor ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT1&quot;, average_FMT, average_Donor)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;) %&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) fmt_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;) %&gt;% count(family, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Inoculum FMT1 1 85 30 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_vkiiokk8i1h8gdve6471, .table th.tinytable_css_vkiiokk8i1h8gdve6471 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_uzv02jivuzwvfm8350gx, .table th.tinytable_css_uzv02jivuzwvfm8350gx { border-bottom: solid #d3d8dc 0.1em; } phylum Inoculum FMT1 p__Bacillota_A 31 13 p__Bacillota 18 7 p__Pseudomonadota 12 2 p__Bacteroidota 8 3 p__Cyanobacteriota 6 0 p__Desulfobacterota 3 1 p__Verrucomicrobiota 2 1 p__Bacillota_B 1 0 p__Bacillota_C 1 1 p__Chlamydiota 1 0 p__Fusobacteriota 1 0 p__Spirochaetota 1 0 p__Actinomycetota 0 1 p__Campylobacterota 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(family, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_nybaqyzcm7kkcn0i1tdq, .table th.tinytable_css_nybaqyzcm7kkcn0i1tdq { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_f05j4ruv8xofxw1xyb86, .table th.tinytable_css_f05j4ruv8xofxw1xyb86 { border-bottom: solid #d3d8dc 0.1em; } family Inoculum FMT1 f__Lachnospiraceae 14 5 f__Erysipelotrichaceae 6 3 f__UBA660 6 0 f__Enterobacteriaceae 5 1 f__CAG-239 4 0 f__CAG-508 4 0 f__Coprobacillaceae 4 0 f__Gastranaerophilaceae 4 0 f__UBA1242 4 0 f__ 3 1 f__Desulfovibrionaceae 3 1 f__Ruminococcaceae 3 2 f__Tannerellaceae 3 0 f__Akkermansiaceae 2 0 f__Anaerovoracaceae 2 0 f__Bacteroidaceae 2 1 f__Marinifilaceae 2 0 f__Oscillospiraceae 2 1 f__RUG14156 2 0 f__UBA3830 2 0 f__Brevinemataceae 1 0 f__Chlamydiaceae 1 0 f__Enterococcaceae 1 2 f__Fusobacteriaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Rikenellaceae 1 1 f__UBA1997 1 0 f__UBA3700 0 2 f__Acutalibacteraceae 0 1 f__Arcobacteraceae 0 1 f__CAG-274 0 1 f__LL51 0 1 f__Mycobacteriaceae 0 1 f__Pumilibacteraceae 0 1 f__Rhizobiaceae 0 1 f__Streptococcaceae 0 1 f__Weeksellaceae 0 1 15.3.3.1.1 Functional capacities of the structural zeros GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT1-Inoculum)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Inoculum&quot;,&quot;FMT1&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual( breaks=c(&quot;FMT1&quot;,&quot;Inoculum&quot;), values=c(&#39;#40714b&#39;, &quot;#d5b52c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ guides(fill=guide_legend(title=&quot;Time point&quot;)) 15.3.3.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Inoculum&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancombc_FMT_Donor_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_FMT_Donor_2803, file = &quot;data/ancombc_FMT_Donor_2803.Rdata&quot;) load(&quot;data/ancombc_FMT_Donor_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_FMT_Donor_2803$res %&gt;% dplyr::select(taxon, lfc_treatmentFMT1, p_treatmentFMT1) %&gt;% filter(p_treatmentFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentFMT1) %&gt;% left_join(., genome_metadata, by = join_by(taxon == genome)) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentFMT1) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&lt;0) %&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Inoculum FMT1 1 Bacillota_A 9 10 2 Bacteroidota 4 11 3 Bacillota 1 2 4 Campylobacterota 1 1 5 Desulfobacterota 1 1 6 Pseudomonadota 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Inoculum FMT1 1 16 26 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentFMT1, y=forcats::fct_reorder(genome,lfc_treatmentFMT1), fill=phylum)) + #forcats::fct_rev() geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in FMT on the left side and in FMT1 on the right side Phyla of the significant MAGs FMT1 ancombc_rand_table_mag%&gt;% filter(lfc_treatmentFMT1&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 11 2 Bacillota_A 10 3 Bacillota 2 4 Campylobacterota 1 5 Desulfobacterota 1 6 Pseudomonadota 1 ancombc_rand_table_mag%&gt;% filter(lfc_treatmentFMT1&lt;0) %&gt;% select(phylum, family, genus, species) phylum family genus species 1 Campylobacterota f__Helicobacteraceae g__NHYM01 2 Bacteroidota f__Rikenellaceae g__Alistipes 3 Bacillota_A f__Lachnospiraceae g__JAAYNV01 4 Desulfobacterota f__Desulfovibrionaceae g__WRHT01 5 Bacteroidota f__Rikenellaceae g__Alistipes 6 Bacillota_A f__DTU072 g__ 7 Bacillota f__Coprobacillaceae g__Coprobacillus 8 Bacteroidota f__Marinifilaceae g__Odoribacter 9 Bacteroidota f__UBA932 g__Egerieousia 10 Bacillota f__Erysipelotrichaceae g__Dielma 11 Bacillota_A f__Lachnospiraceae g__ 12 Bacteroidota f__Tannerellaceae g__Parabacteroides 13 Bacillota_A f__Lachnospiraceae g__Hungatella_A 14 Bacillota_A f__UBA3700 g__ 15 Bacillota_A f__Lachnospiraceae g__CAG-95 16 Bacillota_A f__ g__ 17 Bacillota_A f__Lachnospiraceae g__Ventrimonas 18 Bacteroidota f__Marinifilaceae g__Odoribacter 19 Pseudomonadota f__CAG-239 g__CAZU01 20 Bacteroidota f__Bacteroidaceae g__Bacteroides 21 Bacillota_A f__Lachnospiraceae g__Hungatella_A 22 Bacteroidota f__Marinifilaceae g__Odoribacter 23 Bacteroidota f__Muribaculaceae g__HGM05232 24 Bacteroidota f__Bacteroidaceae g__Bacteroides 25 Bacteroidota f__Marinifilaceae g__Odoribacter 26 Bacillota_A f__Oscillospiraceae g__Oscillibacter Inoculum ancombc_rand_table_mag%&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 9 2 Bacteroidota 4 3 Bacillota 1 4 Campylobacterota 1 5 Desulfobacterota 1 ancombc_rand_table_mag%&gt;% filter(lfc_treatmentFMT1&gt;0) %&gt;% select(phylum, family, genus, species) phylum family genus species 1 Bacillota_A f__Oscillospiraceae g__Pseudoflavonifractor 2 Bacillota_A f__Lachnospiraceae g__Lacrimispora 3 Bacillota f__Mycoplasmoidaceae g__Ureaplasma 4 Bacteroidota f__Bacteroidaceae g__Bacteroides 5 Bacillota_A f__Lachnospiraceae g__JALFVM01 6 Bacillota_A f__UBA3700 g__ 7 Desulfobacterota f__Desulfovibrionaceae g__Bilophila 8 Bacillota_A f__Lachnospiraceae g__Blautia 9 Bacteroidota f__Tannerellaceae g__Parabacteroides 10 Bacteroidota f__Bacteroidaceae g__Bacteroides Bacteroides ovatus 11 Bacillota_A f__Ruminococcaceae g__Negativibacillus 12 Bacteroidota f__Bacteroidaceae g__ 13 Bacillota_A f__Lachnospiraceae g__Eisenbergiella 14 Bacillota_A f__Lachnospiraceae g__ 15 Bacillota_A f__Lachnospiraceae g__Copromonas 16 Campylobacterota f__Helicobacteraceae g__Helicobacter_J 15.3.3.3 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT1&quot;, &quot;Inoculum&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 15.3.3.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT1 0.359 0.0214 2 Inoculum 0.351 0.0426 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.93266, p-value = 0.1556 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 65, p-value = 0.3738 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT1-Inoculum)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Inoculum&quot;,&quot;FMT1&quot;)) 15.3.3.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT1 0.353 0.0186 2 Inoculum 0.354 0.0374 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.83167, p-value = 0.002086 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 60, p-value = 0.5951 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(9,10)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) significant_functional # A tibble: 2 × 4 trait p_value p_adjust Function &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 B04 0.00454 0.0454 SCFA biosynthesis 2 B10 0.00454 0.0454 Antibiotic biosynthesis 15.3.4 Inoculum vs FMT2 15.3.4.1 Structural zeros FMT2_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment == &quot;FMT2&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() Inoculum_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment ==&quot;Inoculum&quot;) %&gt;% dplyr::select(sample) %&gt;% pull() sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Inoculum&quot;)) structural_zeros &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,subset_meta$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% rowwise() %&gt;% #compute for each row (genome) mutate(all_zeros_FMT2 = all(c_across(all_of(FMT2_samples)) == 0)) %&gt;% mutate(all_zeros_Donor = all(c_across(all_of(Donor_samples)) == 0)) %&gt;% mutate(average_FMT2 = mean(c_across(all_of(FMT2_samples)), na.rm = TRUE)) %&gt;% mutate(average_Donor = mean(c_across(all_of(Donor_samples)), na.rm = TRUE)) %&gt;% filter(all_zeros_FMT2 == TRUE || all_zeros_Donor==TRUE) %&gt;% mutate(present = case_when( all_zeros_FMT2 &amp; !all_zeros_Donor ~ &quot;Inoculum&quot;, !all_zeros_FMT2 &amp; all_zeros_Donor ~ &quot;FMT2&quot;, !all_zeros_FMT2 &amp; !all_zeros_Donor ~ &quot;None&quot;, TRUE ~ NA_character_ )) %&gt;% mutate(average = ifelse(present == &quot;FMT2&quot;, average_FMT2, average_Donor)) %&gt;% dplyr::select(genome, present, average) %&gt;% left_join(genome_metadata, by=join_by(genome==genome)) %&gt;% arrange(present,-average) Structural zeros in each group fmt &lt;- structural_zeros %&gt;% filter(present==&quot;FMT2&quot;) %&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) fmt2_f &lt;- structural_zeros %&gt;% filter(present==&quot;FMT2&quot;) %&gt;% count(family, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Inoculum FMT2 1 62 50 Phyla to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt, by=&quot;phylum&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_dlsusu1meoiivyvqluo3, .table th.tinytable_css_dlsusu1meoiivyvqluo3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_9xd1sbvb3knsv2xaekez, .table th.tinytable_css_9xd1sbvb3knsv2xaekez { border-bottom: solid #d3d8dc 0.1em; } phylum Inoculum FMT2 p__Bacillota_A 27 20 p__Bacillota 17 8 p__Pseudomonadota 6 11 p__Bacteroidota 5 6 p__Desulfobacterota 2 2 p__Bacillota_B 1 0 p__Chlamydiota 1 0 p__Cyanobacteriota 1 0 p__Fusobacteriota 1 0 p__Verrucomicrobiota 1 2 p__Bacillota_C 0 1 Families to which the structural zeros belong in each group structural_zeros %&gt;% filter(present==&quot;Inoculum&quot;) %&gt;% count(family, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt2_f, by=&quot;family&quot; ) %&gt;% mutate(across(everything(), ~ replace_na(., 0))) %&gt;% tt() .table td.tinytable_css_xper0ha5okf8zpi4b6vc, .table th.tinytable_css_xper0ha5okf8zpi4b6vc { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_a1xqperf8nfpco9tmqer, .table th.tinytable_css_a1xqperf8nfpco9tmqer { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } family Inoculum FMT2 f__Lachnospiraceae 11 9 f__Erysipelotrichaceae 6 5 f__UBA660 6 0 f__Enterobacteriaceae 5 2 f__CAG-508 3 0 f__Ruminococcaceae 3 3 f__Anaerovoracaceae 2 0 f__Coprobacillaceae 2 0 f__Desulfovibrionaceae 2 2 f__Oscillospiraceae 2 1 f__Tannerellaceae 2 1 f__UBA1242 2 0 f__ 1 3 f__Akkermansiaceae 1 0 f__Bacteroidaceae 1 2 f__CAG-239 1 2 f__Chlamydiaceae 1 0 f__Clostridiaceae 1 0 f__Enterococcaceae 1 1 f__Eubacteriaceae 1 0 f__Fusobacteriaceae 1 0 f__Gastranaerophilaceae 1 0 f__Marinifilaceae 1 0 f__Mycoplasmoidaceae 1 1 f__Peptococcaceae 1 0 f__Rikenellaceae 1 1 f__Staphylococcaceae 1 0 f__UBA3700 1 2 f__Anaerotignaceae 0 2 f__LL51 0 2 f__Acutalibacteraceae 0 1 f__CAG-274 0 1 f__CALVMC01 0 1 f__Devosiaceae 0 1 f__RUG11792 0 1 f__Rhizobiaceae 0 1 f__Sphingobacteriaceae 0 1 f__Streptococcaceae 0 1 f__UBA1997 0 1 f__UBA3830 0 1 f__Weeksellaceae 0 1 15.3.4.1.1 Functional capacities of the structural zeros #Aggregate bundle-level GIFTs into the compound level GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% structural_zeros$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) #Aggregate element-level GIFTs into the function level GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) #Aggregate function-level GIFTs into overall Biosynthesis, Degradation and Structural GIFTs GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_row &lt;- genome_counts_filt %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% filter(genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_row,GIFT_db) element_gift_inoculum &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(9,10)], by=join_by(&quot;sample&quot;==&quot;sample&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift_inoculum %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_inoculum_t &lt;- element_gift_inoculum %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_inoculum_filt &lt;- subset(element_gift_inoculum_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_inoculum_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT2-Inoculum)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Inoculum&quot;,&quot;FMT2&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual( breaks=c(&quot;FMT2&quot;,&quot;Inoculum&quot;), values=c(&#39;#40714b50&#39;, &quot;#d5b52c&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Microbial Functional Capacity&quot;) + ylab(&quot;Mean difference&quot;)+ guides(fill=guide_legend(title=&quot;Time point&quot;)) 15.3.4.2 Differential abundance analysis: composition phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Inoculum&quot;)) %&gt;% column_to_rownames(&quot;sample&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancombc_FMT2_Donor_2803 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;treatment&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancombc_FMT2_Donor_2803, file = &quot;data/ancombc_FMT2_Donor_2803.Rdata&quot;) load(&quot;data/ancombc_FMT2_Donor_2803.Rdata&quot;) taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancombc_FMT2_Donor_2803$res %&gt;% dplyr::select(taxon, lfc_treatmentFMT2, p_treatmentFMT2) %&gt;% filter(p_treatmentFMT2 &lt; 0.05) %&gt;% dplyr::arrange(p_treatmentFMT2) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_treatmentFMT2) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() Differential abundance MAGs in each group fmt2_count &lt;- ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&lt;0) %&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&gt;0) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt2_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) phylum Inoculum FMT2 1 Bacillota_A 12 3 2 Pseudomonadota 3 0 3 Bacteroidota 2 6 4 Cyanobacteriota 2 0 5 Desulfobacterota 2 1 6 Bacillota 1 2 7 Bacillota_B 1 0 8 Campylobacterota 1 1 9 Spirochaetota 0 1 ancombc_rand_table_mag %&gt;% filter(lfc_treatmentFMT2&gt;0) %&gt;% count(phylum, name = &quot;Inoculum&quot;) %&gt;% arrange(desc(Inoculum)) %&gt;% full_join(.,fmt2_count, by=&quot;phylum&quot;)%&gt;% mutate(across(where(is.numeric), ~ replace_na(., 0))) %&gt;% as.data.frame() %&gt;% summarise(across(where(is.numeric), ~ sum(.x, na.rm = TRUE))) Inoculum FMT2 1 24 14 ancombc_rand_table_mag%&gt;% mutate(genome=factor(taxon,levels=ancombc_rand_table_mag$taxon)) %&gt;% ggplot(., aes(x=lfc_treatmentFMT2, y=forcats::fct_reorder(genome,lfc_treatmentFMT2), fill=phylum)) + geom_col() + scale_fill_manual(values=tax_color) + geom_hline(yintercept=0) + theme(panel.background = element_blank(), axis.line = element_line(size = 0.5, linetype = &quot;solid&quot;, colour = &quot;black&quot;), axis.text.x = element_text(size = 12), axis.text.y = element_text(size = 8), axis.title = element_text(size = 14, face = &quot;bold&quot;), legend.text = element_text(size = 12), legend.title = element_text(size = 14, face = &quot;bold&quot;), legend.position = &quot;right&quot;, legend.box = &quot;vertical&quot;)+ xlab(&quot;log2FoldChange&quot;) + ylab(&quot;Species&quot;)+ guides(fill=guide_legend(title=&quot;Phylum&quot;)) MAGs enriched in donor on the left side and in FMT2 on the right side 15.3.4.3 Differences in the functional capacities sample_sub &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; treatment %in% c(&quot;FMT2&quot;, &quot;Inoculum&quot;)) genome_counts_filtered &lt;- genome_counts_filt %&gt;% select(one_of(c(&quot;genome&quot;,sample_sub$sample))) GIFTs_elements &lt;- to.elements(genome_gifts,GIFT_db) GIFTs_elements_filtered &lt;- GIFTs_elements[rownames(GIFTs_elements) %in% genome_counts_filtered$genome,] GIFTs_elements_filtered &lt;- as.data.frame(GIFTs_elements_filtered) %&gt;% select_if(~ !is.numeric(.) || sum(.) != 0) GIFTs_functions &lt;- to.functions(GIFTs_elements_filtered,GIFT_db) GIFTs_domains &lt;- to.domains(GIFTs_functions,GIFT_db) genome_counts_filtered_row &lt;- genome_counts_filtered %&gt;% mutate_at(vars(-genome),~./sum(.)) %&gt;% column_to_rownames(., &quot;genome&quot;) GIFTs_elements_community &lt;- to.community(GIFTs_elements_filtered,genome_counts_filtered_row,GIFT_db) GIFTs_functions_community &lt;- to.community(GIFTs_functions,genome_counts_filtered_row,GIFT_db) GIFTs_domains_community &lt;- to.community(GIFTs_domains,genome_counts_filtered_row,GIFT_db) 15.3.4.3.1 Community elements differences: MCI GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT2 0.350 0.0293 2 Inoculum 0.351 0.0426 MCI &lt;- GIFTs_elements_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.94571, p-value = 0.259 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 63, p-value = 0.7938 alternative hypothesis: true location shift is not equal to 0 element_gift &lt;- GIFTs_elements_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% left_join(., sample_metadata[c(1,10)], by=join_by(&quot;sample&quot;==&quot;Tube_code&quot;)) uniqueGIFT_db&lt;- unique(GIFT_db[c(2,4,5,6)]) %&gt;% unite(&quot;Function&quot;,Function:Element, sep= &quot;_&quot;, remove=FALSE) significant_elements &lt;- element_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3)],by = join_by(trait == Code_element)) element_gift_t &lt;- element_gift %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;trait&quot;) element_gift_filt &lt;- subset(element_gift_t, trait %in% significant_elements$trait) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;sample&quot;)%&gt;% left_join(., sample_metadata[c(9,10)], by = join_by(sample == sample)) difference_table &lt;- element_gift_filt %&gt;% select(-sample) %&gt;% group_by(treatment) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT2-Inoculum)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Inoculum&quot;,&quot;FMT2&quot;)) 15.3.4.3.2 Community functions differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) %&gt;% group_by(treatment) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 2 × 3 treatment MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 FMT2 0.346 0.0255 2 Inoculum 0.354 0.0374 MCI &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == sample)) shapiro.test(MCI$value) Shapiro-Wilk normality test data: MCI$value W = 0.86712, p-value = 0.006921 wilcox.test(value ~ treatment, data=MCI) Wilcoxon rank sum exact test data: value by treatment W = 61, p-value = 0.896 alternative hypothesis: true location shift is not equal to 0 function_gift &lt;- GIFTs_functions_community %&gt;% as.data.frame() %&gt;% rownames_to_column(., &quot;sample&quot;) %&gt;% merge(., sample_metadata[c(9,10)], by=&quot;sample&quot;) unique_funct_db&lt;- GIFT_db[c(3,4,5)] %&gt;% distinct(Code_function, .keep_all = TRUE) significant_functional &lt;- function_gift %&gt;% pivot_longer(-c(sample,treatment), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ treatment)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% left_join(.,unique_funct_db[c(1,3)],by = join_by(trait == Code_function)) significant_functional # A tibble: 1 × 4 trait p_value p_adjust Function &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;chr&gt; 1 B04 0.00193 0.0387 SCFA biosynthesis 15.4 What is the trend of the microbiota in each type after FMT? 15.4.1 Alpha diversity label_map &lt;- c( &quot;Control&quot; = &quot;Cold-control&quot;, &quot;Treatment&quot; = &quot;Cold-intervention&quot;, &quot;Hot_control&quot; = &quot;Warm-control&quot;, &quot;richness&quot; = &quot;Species Richness&quot;, &quot;neutral&quot; = &quot;Neutral Diversity&quot;, &quot;phylogenetic&quot; = &quot;Phylogenetic Diversity&quot; ) alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;, &quot;FMT2&quot;)) %&gt;% mutate(metric = factor(metric, levels = c(&quot;richness&quot;, &quot;neutral&quot;, &quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = time_point, color = type, fill = type)) + geom_boxplot(outlier.shape = NA, show.legend = FALSE) + geom_point(position = position_jitterdodge(jitter.width = 0.2, dodge.width = 0.8), alpha = 0.5, show.legend = FALSE) + facet_grid(metric ~ type, scales = &quot;free_y&quot;, labeller = labeller(metric = label_map, type = label_map))+ # facet_nested(.~metric+type, labeller = labeller(metric = label_map, type = label_map))+ scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + theme_minimal() + theme(axis.text.x=element_text(size=10))+ labs(x = &quot;Time Point&quot;, y = &quot;value&quot;) alpha_div_meta &lt;- alpha_div %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) Richness Modelq0GLMMNB &lt;- glmer.nb(richness ~ type*time_point+(1|individual), data = alpha_div_meta) summary(Modelq0GLMMNB) Generalized linear mixed model fit by maximum likelihood (Laplace Approximation) [&#39;glmerMod&#39;] Family: Negative Binomial(5.7695) ( log ) Formula: richness ~ type * time_point + (1 | individual) Data: alpha_div_meta AIC BIC logLik deviance df.resid 757.7 783.7 -367.8 735.7 68 Scaled residuals: Min 1Q Median 3Q Max -2.01194 -0.49653 0.06196 0.55789 1.90953 Random effects: Groups Name Variance Std.Dev. individual (Intercept) 0.02586 0.1608 Number of obs: 79, groups: individual, 27 Fixed effects: Estimate Std. Error z value Pr(&gt;|z|) (Intercept) 3.9089 0.1696 23.046 &lt;2e-16 *** typeCold_intervention -0.1233 0.2297 -0.537 0.5915 typeWarm_control 0.5568 0.2283 2.439 0.0147 * time_pointFMT1 -0.3140 0.2167 -1.449 0.1473 time_pointFMT2 0.1487 0.2173 0.684 0.4937 typeCold_intervention:time_pointFMT1 0.4309 0.3068 1.404 0.1602 typeWarm_control:time_pointFMT1 -0.1155 0.2983 -0.387 0.6986 typeCold_intervention:time_pointFMT2 0.4093 0.2990 1.369 0.1710 typeWarm_control:time_pointFMT2 -0.3876 0.2988 -1.297 0.1945 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Correlation of Fixed Effects: (Intr) typCl_ typWr_ t_FMT1 t_FMT2 tC_:_FMT1 tW_:_FMT1 tC_:_FMT2 typCld_ntrv -0.721 typWrm_cntr -0.741 0.535 tim_pntFMT1 -0.677 0.497 0.503 tim_pntFMT2 -0.702 0.507 0.520 0.532 typC_:_FMT1 0.482 -0.664 -0.357 -0.707 -0.378 typW_:_FMT1 0.496 -0.362 -0.671 -0.727 -0.389 0.515 typC_:_FMT2 0.498 -0.686 -0.370 -0.384 -0.719 0.511 0.280 typW_:_FMT2 0.515 -0.370 -0.684 -0.388 -0.730 0.276 0.516 0.524 emmeans::emmeans(Modelq0GLMMNB, pairwise ~ type) $emmeans type emmean SE df asymp.LCL asymp.UCL Cold_control 3.85 0.1050 Inf 3.65 4.06 Cold_intervention 4.01 0.1030 Inf 3.81 4.21 Warm_control 4.24 0.0996 Inf 4.05 4.44 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Cold_control - Cold_intervention -0.157 0.145 Inf -1.083 0.5246 Cold_control - Warm_control -0.389 0.144 Inf -2.711 0.0184 Cold_intervention - Warm_control -0.232 0.143 Inf -1.627 0.2342 Results are averaged over the levels of: time_point Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq0GLMMNB, pairwise ~ time_point) $emmeans time_point emmean SE df asymp.LCL asymp.UCL Acclimation 4.05 0.0938 Inf 3.87 4.24 FMT1 3.84 0.0949 Inf 3.66 4.03 FMT2 4.21 0.0895 Inf 4.03 4.38 Results are averaged over the levels of: type Results are given on the log (not the response) scale. Confidence level used: 0.95 $contrasts contrast estimate SE df z.ratio p.value Acclimation - FMT1 0.209 0.123 Inf 1.700 0.2050 Acclimation - FMT2 -0.156 0.121 Inf -1.286 0.4028 FMT1 - FMT2 -0.365 0.122 Inf -2.997 0.0077 Results are averaged over the levels of: type Results are given on the log (not the response) scale. P value adjustment: tukey method for comparing a family of 3 estimates Neutral Modelq1n &lt;- nlme::lme(neutral ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Modelq1n) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 563.2664 587.9998 -270.6332 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 4.551076 9.160157 Fixed effects: neutral ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 21.343055 3.603126 46 5.923483 0.0000 typeCold_intervention -3.944072 4.960549 24 -0.795088 0.4344 typeWarm_control 23.258307 4.960549 24 4.688656 0.0001 time_pointFMT1 -3.983722 4.472618 46 -0.890691 0.3777 time_pointFMT2 2.374489 4.472618 46 0.530895 0.5980 typeCold_intervention:time_pointFMT1 11.253000 6.325237 46 1.779064 0.0818 typeWarm_control:time_pointFMT1 -14.877819 6.216964 46 -2.393101 0.0208 typeCold_intervention:time_pointFMT2 20.108022 6.216964 46 3.234380 0.0023 typeWarm_control:time_pointFMT2 -14.775497 6.216964 46 -2.376642 0.0217 Correlation: (Intr) typCl_ typWr_ t_FMT1 t_FMT2 tC_:_FMT1 tW_:_FMT1 tC_:_FMT2 typeCold_intervention -0.726 typeWarm_control -0.726 0.528 time_pointFMT1 -0.663 0.481 0.481 time_pointFMT2 -0.663 0.481 0.481 0.534 typeCold_intervention:time_pointFMT1 0.469 -0.638 -0.340 -0.707 -0.378 typeWarm_control:time_pointFMT1 0.477 -0.346 -0.649 -0.719 -0.384 0.509 typeCold_intervention:time_pointFMT2 0.477 -0.649 -0.346 -0.384 -0.719 0.509 0.276 typeWarm_control:time_pointFMT2 0.477 -0.346 -0.649 -0.384 -0.719 0.272 0.518 0.518 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.1324340 -0.7088533 0.0456110 0.6569569 1.9681295 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Modelq1n, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Cold_control 20.8 2.36 26 16.0 25.7 Cold_intervention 27.3 2.36 24 22.4 32.2 Warm_control 34.2 2.33 24 29.4 39.0 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_control - Cold_intervention -6.51 3.33 24 -1.952 0.1461 Cold_control - Warm_control -13.37 3.31 24 -4.038 0.0013 Cold_intervention - Warm_control -6.86 3.31 24 -2.073 0.1170 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Modelq1n, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 27.8 2.01 24 23.6 31.9 FMT1 22.6 2.01 24 18.4 26.7 FMT2 31.9 1.97 24 27.9 36.0 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 5.19 2.55 46 2.034 0.1156 Acclimation - FMT2 -4.15 2.52 46 -1.646 0.2372 FMT1 - FMT2 -9.34 2.52 46 -3.703 0.0016 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates Phylogenetic Model_phylo &lt;- nlme::lme(phylogenetic ~ type*time_point, random = ~ 1 | individual, data = alpha_div_meta) summary(Model_phylo) Linear mixed-effects model fit by REML Data: alpha_div_meta AIC BIC logLik 269.592 294.3254 -123.796 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.4979037 1.144231 Fixed effects: phylogenetic ~ type * time_point Value Std.Error DF t-value p-value (Intercept) 5.250918 0.4401145 46 11.930799 0.0000 typeCold_intervention 0.283251 0.6055741 24 0.467740 0.6442 typeWarm_control 1.264508 0.6055741 24 2.088114 0.0476 time_pointFMT1 -0.835721 0.5582377 46 -1.497070 0.1412 time_pointFMT2 -0.480730 0.5582377 46 -0.861157 0.3936 typeCold_intervention:time_pointFMT1 -0.545026 0.7894673 46 -0.690371 0.4934 typeWarm_control:time_pointFMT1 -1.408920 0.7762583 46 -1.815014 0.0760 typeCold_intervention:time_pointFMT2 0.056014 0.7762583 46 0.072159 0.9428 typeWarm_control:time_pointFMT2 -0.584302 0.7762583 46 -0.752716 0.4555 Correlation: (Intr) typCl_ typWr_ t_FMT1 t_FMT2 tC_:_FMT1 tW_:_FMT1 tC_:_FMT2 typeCold_intervention -0.727 typeWarm_control -0.727 0.528 time_pointFMT1 -0.676 0.492 0.492 time_pointFMT2 -0.676 0.492 0.492 0.533 typeCold_intervention:time_pointFMT1 0.478 -0.652 -0.348 -0.707 -0.377 typeWarm_control:time_pointFMT1 0.486 -0.353 -0.663 -0.719 -0.383 0.509 typeCold_intervention:time_pointFMT2 0.486 -0.663 -0.353 -0.383 -0.719 0.509 0.276 typeWarm_control:time_pointFMT2 0.486 -0.353 -0.663 -0.383 -0.719 0.271 0.517 0.517 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -2.81770682 -0.52006818 -0.06472395 0.55839915 2.23601869 Number of Observations: 79 Number of Groups: 27 emmeans::emmeans(Model_phylo, pairwise ~ type) $emmeans type emmean SE df lower.CL upper.CL Cold_control 4.81 0.280 26 4.24 5.39 Cold_intervention 4.93 0.280 24 4.35 5.51 Warm_control 5.41 0.276 24 4.84 5.98 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Cold_control - Cold_intervention -0.12 0.396 24 -0.304 0.9505 Cold_control - Warm_control -0.60 0.393 24 -1.527 0.2963 Cold_intervention - Warm_control -0.48 0.393 24 -1.221 0.4525 Results are averaged over the levels of: time_point Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates emmeans::emmeans(Model_phylo, pairwise ~ time_point) $emmeans time_point emmean SE df lower.CL upper.CL Acclimation 5.77 0.245 24 5.26 6.27 FMT1 4.28 0.245 24 3.77 4.79 FMT2 5.11 0.240 24 4.61 5.61 Results are averaged over the levels of: type Degrees-of-freedom method: containment Confidence level used: 0.95 $contrasts contrast estimate SE df t.ratio p.value Acclimation - FMT1 1.487 0.319 46 4.666 0.0001 Acclimation - FMT2 0.657 0.315 46 2.085 0.1042 FMT1 - FMT2 -0.830 0.315 46 -2.635 0.0302 Results are averaged over the levels of: type Degrees-of-freedom method: containment P value adjustment: tukey method for comparing a family of 3 estimates 15.4.1.1 Beta diversity Number of samples used samples_to_keep_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post7 &lt;- sample_metadata %&gt;% filter(time_point==&quot;FMT1&quot;|time_point==&quot;Acclimation&quot;|time_point==&quot;FMT2&quot;) subset_meta_post7$time_point&lt;-as.factor(subset_meta_post7$time_point) subset_meta_post7$type&lt;-as.factor(subset_meta_post7$type) length(samples_to_keep_post7) [1] 79 Richness richness_post7 &lt;- as.matrix(beta_q0n$S) richness_post7 &lt;- as.dist(richness_post7[rownames(richness_post7) %in% samples_to_keep_post7, colnames(richness_post7) %in% samples_to_keep_post7]) betadisper(richness_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06454 0.032268 4.9753 999 0.015 * Residuals 76 0.49290 0.006485 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.6990000 0.017 Cold_intervention 0.6817089 0.006 Warm_control 0.0119513 0.0035106 adonis2(richness_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(richness_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_9oqwy9vk2ptdukgbvcx9, .table th.tinytable_css_9oqwy9vk2ptdukgbvcx9 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_5b8sc3rktez75wl6vmfg, .table th.tinytable_css_5b8sc3rktez75wl6vmfg { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 2 3.120806 0.11961754 5.546155 0.001 time_point 2 1.703776 0.06530413 3.027874 0.001 type:time_point 4 1.570884 0.06021051 1.395852 0.001 Residual 70 19.694403 0.75486782 NA NA Total 78 26.089870 1.00000000 NA NA Neutral neutral_post7 &lt;- as.matrix(beta_q1n$S) neutral_post7 &lt;- as.dist(neutral_post7[rownames(neutral_post7) %in% samples_to_keep_post7, colnames(neutral_post7) %in% samples_to_keep_post7]) betadisper(neutral_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.06738 0.033689 3.8309 999 0.021 * Residuals 76 0.66833 0.008794 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.1430000 0.210 Cold_intervention 0.1611083 0.005 Warm_control 0.1985046 0.0069718 adonis2(neutral_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(neutral_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_p93ek474ebcdd8tbc59u, .table th.tinytable_css_p93ek474ebcdd8tbc59u { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_6zkkjmeq8e3aubtjd9gu, .table th.tinytable_css_6zkkjmeq8e3aubtjd9gu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 2 3.705559 0.14953528 7.609355 0.001 time_point 2 2.217656 0.08949199 4.553951 0.001 type:time_point 4 1.813192 0.07317011 1.861693 0.001 Residual 70 17.044094 0.68780262 NA NA Total 78 24.780501 1.00000000 NA NA Phylogenetic phylo_post7 &lt;- as.matrix(beta_q1p$S) phylo_post7 &lt;- as.dist(phylo_post7[rownames(phylo_post7) %in% samples_to_keep_post7, colnames(phylo_post7) %in% samples_to_keep_post7]) betadisper(phylo_post7, subset_meta_post7$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.05438 0.027192 2.1499 999 0.147 Residuals 76 0.96123 0.012648 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.177000 0.722 Cold_intervention 0.155309 0.096 Warm_control 0.697512 0.083221 adonis2(phylo_post7 ~ type*time_point, data = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))), permutations = 999, strata = subset_meta_post7 %&gt;% arrange(match(Tube_code,labels(phylo_post7))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_xj3o275pu3ct74fucl5u, .table th.tinytable_css_xj3o275pu3ct74fucl5u { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_izq47gauqxgmsihw7v3g, .table th.tinytable_css_izq47gauqxgmsihw7v3g { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value type 2 0.2941494 0.07500331 3.592254 0.001 time_point 2 0.5528857 0.14097687 6.752032 0.001 type:time_point 4 0.2088312 0.05324856 1.275159 0.150 Residual 70 2.8659522 0.73077126 NA NA Total 78 3.9218184 1.00000000 NA NA dbRDA #Richness cca_ord &lt;- capscale(formula = richness_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_richness_nmds_post7 &lt;-CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Neutral cca_ord &lt;- capscale(formula = neutral_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_neutral_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() #Phylogenetic cca_ord &lt;- capscale(formula = phylo_post7 ~ subset_meta_post7$time_point* subset_meta_post7$type) CAP_df &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;sites&quot;)) %&gt;% rownames_to_column(&#39;Tube_code&#39;) %&gt;% left_join(subset_meta_post7, by = &#39;Tube_code&#39;) %&gt;% column_to_rownames(&#39;Tube_code&#39;)%&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) biplot_scores &lt;- as.data.frame(vegan::scores(cca_ord, display = &quot;bp&quot;)) %&gt;% rownames_to_column(&quot;Variable&quot;) biplot_scores$Variable &lt;- recode(biplot_scores$Variable, &quot;subset_meta_post7$time_pointFMT1&quot; = &quot;FMT1&quot;, &quot;subset_meta_post7$time_pointFMT2&quot;=&quot;FMT2&quot;, &quot;subset_meta_post7$typeHot_control&quot;=&quot;Warm-control&quot;, &quot;subset_meta_post7$typeTreatment&quot; = &quot;Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeHot_control&quot;=&quot;FMT1 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeHot_control&quot;=&quot;FMT2 Warm-control&quot;, &quot;subset_meta_post7$time_pointFMT1:subset_meta_post7$typeTreatment&quot; = &quot;FMT1 Cold-intervention&quot;, &quot;subset_meta_post7$time_pointFMT2:subset_meta_post7$typeTreatment&quot; = &quot;FMT2 Cold-intervention&quot;) beta_phylogenetic_nmds_post7 &lt;- CAP_df %&gt;% group_by(type, time_point) %&gt;% mutate(x_cen = mean(CAP1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(CAP2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=CAP1,y=CAP2, color=type,shape = time_point)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + geom_point(size=2) + geom_hline(yintercept = 0, linetype = &quot;dotted&quot;) + geom_vline(xintercept = 0, linetype = &quot;dotted&quot;) + geom_segment(aes(x=x_cen, y=y_cen, xend=CAP1, yend=CAP2), alpha=0.2) + geom_segment(data = biplot_scores, aes(x = 0, y = 0, xend = CAP1, yend = CAP2), inherit.aes = FALSE, arrow = arrow(length = unit(0.2, &quot;cm&quot;)), color = &quot;black&quot;) + geom_text(data = biplot_scores, aes(x = CAP1, y = CAP2, label = Variable), inherit.aes = FALSE, color = &quot;black&quot;, vjust = -0.5, hjust = 0.5)+ theme_classic() ggarrange(beta_richness_nmds_post7, beta_neutral_nmds_post7, beta_phylogenetic_nmds_post7, ncol=3, nrow=1, common.legend = TRUE, legend=&quot;right&quot;) beta_neutral_nmds_post7 15.5 Differences between acclimation and FMT1 across the three experimental groups 15.5.1 Beta diversity CI from acclimation to FMT1 samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_intervention&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_intervention&quot;) length(samples_to_keep) [1] 17 richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.001206 0.0012057 0.125 999 0.714 Residuals 15 0.144707 0.0096471 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.722 FMT1 0.72862 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_lk8ymc2qudlm0c4rarqc, .table th.tinytable_css_lk8ymc2qudlm0c4rarqc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_0d2gf8h54pj68d1ptug1, .table th.tinytable_css_0d2gf8h54pj68d1ptug1 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.9551308 0.1632291 2.926054 0.00390625 Residual 15 4.8963429 0.8367709 NA NA Total 16 5.8514737 1.0000000 NA NA neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.004394 0.004394 0.2999 999 0.606 Residuals 15 0.219796 0.014653 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.608 FMT1 0.59202 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_rmzp16t93tiuoe6qtelu, .table th.tinytable_css_rmzp16t93tiuoe6qtelu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_otg0wim39v9kull3bms8, .table th.tinytable_css_otg0wim39v9kull3bms8 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 1.312777 0.2358567 4.629826 0.00390625 Residual 15 4.253219 0.7641433 NA NA Total 16 5.565996 1.0000000 NA NA phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.02219 0.022191 0.8144 999 0.371 Residuals 15 0.40871 0.027247 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.358 FMT1 0.38108 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% tt() .table td.tinytable_css_xjzr8uil6lbmic7gjb8p, .table th.tinytable_css_xjzr8uil6lbmic7gjb8p { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_huh70xo6ahbapaq0c1ma, .table th.tinytable_css_huh70xo6ahbapaq0c1ma { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Df SumOfSqs R2 F Pr(&gt;F) 1 0.2531943 0.1791546 3.273842 0.03125 15 1.1600785 0.8208454 NA NA 16 1.4132728 1.0000000 NA NA CC from acclimation to FMT1 samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_control&quot;) length(samples_to_keep) [1] 17 richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002321 0.0023205 0.2591 999 0.649 Residuals 15 0.134317 0.0089544 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.645 FMT1 0.61811 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_w7zzt7o1zreje4wscpax, .table th.tinytable_css_w7zzt7o1zreje4wscpax { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_b5gsjcevujzot2t4b3d9, .table th.tinytable_css_b5gsjcevujzot2t4b3d9 { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.6804988 0.1228384 2.100611 0.00390625 Residual 15 4.8592912 0.8771616 NA NA Total 16 5.5397900 1.0000000 NA NA neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002521 0.0025206 0.1629 999 0.722 Residuals 15 0.232162 0.0154775 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.723 FMT1 0.69223 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zsehlqtda5ensp4y9a6i, .table th.tinytable_css_zsehlqtda5ensp4y9a6i { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_ogfti6tvkfqs5l5k2u1e, .table th.tinytable_css_ogfti6tvkfqs5l5k2u1e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 0.8153894 0.1711361 3.09706 0.00390625 Residual 15 3.9491774 0.8288639 NA NA Total 16 4.7645668 1.0000000 NA NA phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.002284 0.0022841 0.2022 999 0.627 Residuals 15 0.169443 0.0112962 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.64 FMT1 0.65938 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% tt() .table td.tinytable_css_dgzdgorq4gecy4ns0ww7, .table th.tinytable_css_dgzdgorq4gecy4ns0ww7 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_20dfstx5vs4a54l9edvi, .table th.tinytable_css_20dfstx5vs4a54l9edvi { border-bottom: solid #d3d8dc 0.1em; } Df SumOfSqs R2 F Pr(&gt;F) 1 0.1176029 0.1666113 2.998803 0.015625 15 0.5882490 0.8333887 NA NA 16 0.7058519 1.0000000 NA NA WC from acclimation to FMT1 samples_to_keep &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Warm_control&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta &lt;- sample_metadata %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Warm_control&quot;) length(samples_to_keep) [1] 18 richness &lt;- as.matrix(beta_q0n$S) richness &lt;- as.dist(richness[rownames(richness) %in% samples_to_keep, colnames(richness) %in% samples_to_keep]) betadisper(richness, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.022023 0.0220227 14.458 999 0.002 ** Residuals 16 0.024371 0.0015232 --- Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.003 FMT1 0.0015647 adonis2(richness ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(richness))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ux5ohc4wu2i0qtre9vow, .table th.tinytable_css_ux5ohc4wu2i0qtre9vow { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7vpq5s90hy647gzdcvk3, .table th.tinytable_css_7vpq5s90hy647gzdcvk3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value time_point 1 0.5796135 0.132397 2.441615 0.00390625 Residual 16 3.7982306 0.867603 NA NA Total 17 4.3778441 1.000000 NA NA neutral &lt;- as.matrix(beta_q1n$S) neutral &lt;- as.dist(neutral[rownames(neutral) %in% samples_to_keep, colnames(neutral) %in% samples_to_keep]) betadisper(neutral, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.014589 0.0145888 2.6594 999 0.114 Residuals 16 0.087771 0.0054857 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.112 FMT1 0.12246 adonis2(neutral ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))), strata = subset_meta %&gt;% arrange(match(Tube_code,labels(neutral))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ms4cldul2xnn1wofbtfl, .table th.tinytable_css_ms4cldul2xnn1wofbtfl { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_aywwphngxx7mrvwira4f, .table th.tinytable_css_aywwphngxx7mrvwira4f { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value time_point 1 0.6954835 0.1707749 3.295123 0.00390625 Residual 16 3.3770315 0.8292251 NA NA Total 17 4.0725150 1.0000000 NA NA phylo &lt;- as.matrix(beta_q1p$S) phylo &lt;- as.dist(phylo[rownames(phylo) %in% samples_to_keep, colnames(phylo) %in% samples_to_keep]) betadisper(phylo, subset_meta$time_point) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 1 0.001463 0.0014625 0.1701 999 0.832 Residuals 16 0.137566 0.0085979 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Acclimation FMT1 Acclimation 0.856 FMT1 0.68549 adonis2(phylo ~ time_point, data = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))), permutations = 999, strata = subset_meta %&gt;% arrange(match(Tube_code,labels(phylo))) %&gt;% pull(individual), by=&quot;terms&quot;) %&gt;% tt() .table td.tinytable_css_hsxnm7mez5m4za6f1gqi, .table th.tinytable_css_hsxnm7mez5m4za6f1gqi { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_b9vvpobwkruai3lf9cbf, .table th.tinytable_css_b9vvpobwkruai3lf9cbf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } Df SumOfSqs R2 F Pr(&gt;F) 1 0.0925260 0.1571182 2.982496 0.01953125 16 0.4963682 0.8428818 NA NA 17 0.5888942 1.0000000 NA NA 15.5.2 Functional differences CI from acclimation to FMT1 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_intervention&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 6, 8 )], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;))%&gt;% filter(type==&quot;Cold_intervention&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-FMT1)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT1&quot;, &quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#76b183&quot;,&#39;#008080&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) CC from acclimation to FMT1 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Cold_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 6, 8)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;))%&gt;% filter(type==&quot;Cold_control&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Acclimation-FMT1)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT1&quot;, &quot;Acclimation&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#4477AA&quot;,&#39;#008080&#39;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) WC from acclimation to FMT1 element_gift %&gt;% filter(time_point %in% c(&quot;FMT1&quot;,&quot;Acclimation&quot;) &amp; type == &quot;Warm_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; 15.5.3 Differential abundances 15.5.3.1 CI: acclimation vs FMT1 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Acclimation&quot;)%&gt;% count(phylum, name = &quot;Acclimation&quot;) %&gt;% arrange(desc(Acclimation)) structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_ziyvz0xyztrhhxd7p65l, .table th.tinytable_css_ziyvz0xyztrhhxd7p65l { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_g60z2fh98niklrpo77u6, .table th.tinytable_css_g60z2fh98niklrpo77u6 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum FMT1 Acclimation p__Bacteroidota 33 11 p__Bacillota_A 25 16 p__Pseudomonadota 5 8 p__Desulfobacterota 4 2 p__Bacillota 3 9 p__Campylobacterota 2 0 p__Cyanobacteriota 2 2 p__Bacillota_C 1 1 p__Elusimicrobiota 1 0 p__Verrucomicrobiota 0 2 p__Actinomycetota 0 1 p__Bacillota_B 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;FMT1&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_ci_accli_fmt1 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_ci_accli_fmt1, file=&quot;data/ancom_rand_output_ci_accli_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_ci_accli_fmt1.RData&quot;) ancom_rand_output_ci_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_qmb3u1e2t6ppes11hici, .table th.tinytable_css_qmb3u1e2t6ppes11hici { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_0f3u3t7sms3gt9e8rrrt, .table th.tinytable_css_0f3u3t7sms3gt9e8rrrt { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } lfc_time_pointFMT1 p_time_pointFMT1 order family genus -1.8462367 0.0286090261 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.0602262 0.0256488405 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -2.1031126 0.0039988943 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides -1.1937360 0.0258952249 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A 1.1869122 0.0246642650 o__Oscillospirales f__Ruminococcaceae g__Negativibacillus -3.0923830 0.0007999100 o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus -1.2524541 0.0482834029 o__Opitutales f__LL51 g__ -1.2157647 0.0209074696 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -2.1668443 0.0092167448 o__Gastranaerophilales f__Gastranaerophilaceae g__Scatousia 1.8856206 0.0022558153 o__Lachnospirales f__Lachnospiraceae g__ -1.2811877 0.0290779856 o__Bacteroidales f__Marinifilaceae g__Odoribacter -0.9960276 0.0294171519 o__Selenomonadales f__ g__ -1.9064058 0.0121488844 o__Lachnospirales f__Lachnospiraceae g__CAG-95 -2.0548675 0.0169404933 o__Christensenellales f__ g__ -1.8189515 0.0001244128 o__Bacteroidales f__Marinifilaceae g__Odoribacter 1.0549620 0.0254528501 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ -1.4937622 0.0113515485 o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B 1.9263692 0.0019001955 o__Bacteroidales f__Tannerellaceae g__Parabacteroides taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_ci_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% #filter(p_time_pointFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT1) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT1) ancombc_rand_table_mag taxon lfc_time_pointFMT1 p_time_pointFMT1 domain phylum class order family 1 AH1_2nd_18:bin_000011 -3.092382977 0.0007999100 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 2 AH1_2nd_2:bin_000003 -2.648161454 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 3 AH1_2nd_1:bin_000003 -2.166844294 0.0092167448 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 4 AH1_2nd_12:bin_000041 -2.103112630 0.0039988943 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 5 LI1_2nd_4:bin_000001 -2.054867498 0.0169404933 d__Bacteria Bacillota_A c__Clostridia Christensenellales 6 AH1_2nd_8:bin_000006 -1.906405809 0.0121488844 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 7 AH1_2nd_10:bin_000041 -1.846236702 0.0286090261 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 8 LI1_2nd_4:bin_000026 -1.818951547 0.0001244128 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 9 AH1_2nd_10:bin_000040 -1.684889357 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 10 AH1_2nd_19:bin_000011 -1.494726874 0.0611399521 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 11 LI1_2nd_7:bin_000042 -1.493762171 0.0113515485 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 12 AH1_2nd_19:bin_000072 -1.478268874 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 13 AH1_2nd_14:bin_000015 -1.316753957 0.1424337358 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 14 AH1_2nd_1:bin_000039 -1.281187716 0.0290779856 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 15 AH1_2nd_19:bin_000052 -1.252454135 0.0482834029 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Opitutales LL51 16 AH1_2nd_19:bin_000067 -1.215764663 0.0209074696 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 17 AH1_2nd_14:bin_000003 -1.193736037 0.0258952249 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 18 AH1_2nd_18:bin_000024 -1.188731159 0.0611452591 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 19 AH1_2nd_9:bin_000002 -1.169209782 0.0986538496 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 20 AH1_2nd_12:bin_000012 -1.060226151 0.0256488405 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 21 AH1_2nd_5:bin_000001 -0.996027576 0.0294171519 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 22 LI1_2nd_9:bin_000022 -0.906243708 0.0903292981 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 23 LI1_2nd_5:bin_000013 -0.829604319 0.1527144304 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 24 AH1_2nd_12:bin_000019 -0.825145331 0.2042360107 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 25 AH1_2nd_15:bin_000013 -0.710209451 0.1048903811 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 26 AH1_2nd_14:bin_000052 -0.703781720 0.0836982274 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 27 AH1_2nd_18:bin_000041 -0.639488073 0.1767526356 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 28 AH1_2nd_10:bin_000069 -0.638476918 0.1756392299 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 29 LI1_2nd_8:bin_000019 -0.626058321 0.1873913604 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 30 LI1_2nd_8:bin_000048 -0.604410683 0.1802313047 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 31 AH1_2nd_18:bin_000039 -0.565089676 0.1344504970 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 32 AH1_2nd_15:bin_000001 -0.558917827 0.2775215236 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 33 LI1_2nd_1:bin_000014 -0.541762433 0.1908782875 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 34 AH1_2nd_17:bin_000020 -0.529683120 0.1375747225 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 35 AH1_2nd_5:bin_000037 -0.412726510 0.3766702653 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 36 LI1_2nd_8:bin_000030 -0.401958059 1.0000000000 d__Bacteria Actinomycetota c__Actinomycetia Mycobacteriales Mycobacteriaceae 37 AH1_2nd_8:bin_000027 -0.372699058 0.3929034840 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 38 AH1_2nd_20:bin_000016 -0.367964849 0.4149817314 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 39 AH1_2nd_15:bin_000004 -0.363232962 0.4110273927 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 40 AH1_2nd_20:bin_000061 -0.298108663 0.5019948183 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 41 AH1_2nd_19:bin_000050 -0.289132629 0.4961320864 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 42 AH1_2nd_14:bin_000063 -0.241075741 0.4791871743 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 43 AH1_2nd_12:bin_000018 -0.233278943 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 44 AH1_2nd_14:bin_000014 -0.191639074 0.5967459585 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 45 AH1_2nd_5:bin_000069 -0.113362480 0.7480149690 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 46 AH1_2nd_5:bin_000004 -0.099553779 0.7766158242 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 47 AH1_2nd_19:bin_000053 -0.064499564 0.8633425245 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 48 AH1_2nd_5:bin_000023 -0.061255060 0.8885990209 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 49 LI1_2nd_4:bin_000052 -0.059179520 0.8521593297 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 50 AH1_2nd_7:bin_000011 -0.022457084 0.9485771277 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 51 AH1_2nd_7:bin_000036 -0.020211734 0.9505096511 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 52 AH1_2nd_8:bin_000007 -0.015776367 0.9642381855 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 53 AH1_2nd_18:bin_000033 0.007439884 0.9829288918 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 54 AH1_2nd_13:bin_000049 0.007967211 0.9806505882 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 55 AH1_2nd_20:bin_000075 0.011269835 0.9740329519 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 56 AH1_2nd_1:bin_000048 0.022520775 0.9415136028 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales Anaerovoracaceae 57 AH1_2nd_15:bin_000009 0.050832331 0.8809383092 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 58 LI1_2nd_3:bin_000015 0.100951096 0.7675764926 d__Bacteria Bacillota c__Bacilli Staphylococcales Staphylococcaceae 59 AH1_2nd_12:bin_000008 0.126572793 0.7200772057 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 60 AH1_2nd_6:bin_000046 0.148642513 0.7391254614 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 61 AH1_2nd_15:bin_000043 0.162855259 0.6651236201 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 62 AH1_2nd_14:bin_000032 0.203085142 0.5604935050 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 63 AH1_2nd_11:bin_000028 0.215783039 0.6001649151 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 64 AH1_2nd_19:bin_000055 0.241280202 0.5605744834 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 65 AH1_2nd_1:bin_000015 0.248363743 0.5365901183 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 66 LI1_2nd_1:bin_000006 0.256745957 0.4812257132 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 67 LI1_2nd_4:bin_000041 0.275507297 0.4771321706 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 68 AH1_2nd_8:bin_000051 0.409027135 0.2422754936 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 69 LI1_2nd_3:bin_000003 0.426226521 0.3026156952 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 70 AH1_2nd_11:bin_000005 0.439025859 0.3469594997 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 71 LI1_2nd_8:bin_000016 0.449295795 0.2725481226 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 72 AH1_2nd_9:bin_000047 0.468455027 0.1949450949 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 73 AH1_2nd_16:bin_000045 0.477451825 0.3015275739 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 74 AH1_2nd_1:bin_000002 0.672741699 0.0931456403 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 75 LI1_2nd_4:bin_000034 0.683769866 0.1489775197 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 76 LI1_2nd_8:bin_000070 0.715744805 0.0557648829 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 77 LI1_2nd_8:bin_000079 0.759315418 0.1169813633 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 78 LI1_2nd_7:bin_000009 0.778541309 0.0871078423 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 79 LI1_2nd_7:bin_000078 0.818012844 0.2168112843 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 80 AH1_2nd_7:bin_000027 0.898315397 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 81 AH1_2nd_7:bin_000041 0.917073058 0.0786806187 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 82 AH1_2nd_7:bin_000004 0.930226516 0.0840011143 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 83 AH1_2nd_16:bin_000058 1.019983368 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 84 LI1_2nd_7:bin_000016 1.054961961 0.0254528501 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 85 AH1_2nd_16:bin_000025 1.186912214 0.0246642650 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 86 AH1_2nd_1:bin_000034 1.307370374 0.1316029549 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 87 AH1_2nd_12:bin_000007 1.669993570 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 88 AH1_2nd_1:bin_000023 1.885620641 0.0022558153 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 89 LI1_2nd_8:bin_000064 1.926369204 0.0019001955 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 90 AH1_2nd_20:bin_000042 1.959227946 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae genus species 1 Coprobacillus 2 JAAYNV01 3 Scatousia 4 Mycoplasmoides 5 6 CAG-95 7 Alistipes 8 Odoribacter 9 UBA866 10 Mailhella 11 Parabacteroides_B 12 13 14 Odoribacter 15 16 Bacteroides Bacteroides ovatus 17 Hungatella_A 18 Odoribacter 19 Phocaeicola 20 Helicobacter_J 21 22 Oscillibacter 23 24 25 Ventrimonas 26 Bacteroides 27 Bacteroides 28 Bacteroides 29 30 31 Alistipes 32 Agrobacterium Agrobacterium tumefaciens_H 33 34 Clostridium_Q 35 Pseudoflavonifractor 36 Corynebacterium 37 NSJ-61 38 39 UMGS1251 40 Enterococcus 41 42 Blautia_A 43 Alistipes 44 Marseille-P3106 45 Bacteroides 46 47 CAG-56 48 Blautia 49 Enterocloster 50 Lacrimispora 51 Intestinimonas 52 Dielma 53 Beduini 54 55 Mailhella 56 57 Acetatifactor 58 Staphylococcus Staphylococcus shinii 59 Lactococcus Lactococcus formosensis 60 Bacteroides 61 Bacteroides 62 63 Bacteroides 64 Parabacteroides 65 MGBC136627 66 RGIG6463 67 Clostridium_Q 68 Bacteroides 69 Alistipes 70 Fusobacterium_A Fusobacterium_A ulcerans 71 Rikenella 72 Bacteroides 73 Alistipes 74 Fournierella 75 Bacteroides Bacteroides thetaiotaomicron 76 Bacteroides 77 Citrobacter_A Citrobacter_A amalonaticus 78 Anaerotruncus 79 Copromonas 80 Copromonas 81 82 Eisenbergiella 83 Enterocloster 84 Clostridium_AQ 85 Negativibacillus 86 Dielma 87 88 89 Parabacteroides 90 Hungatella colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT1 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT1 &gt;= 0.05), aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4.5)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 4.5, label = &quot;Acclimation&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 4.5, label = &quot;FMT1&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 2 2 Bacillota 1 3 Bacteroidota 1 Phyla of the significant MAGs in acclimation ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 5 2 Bacillota_A 3 3 Bacillota 2 4 Bacillota_C 1 5 Campylobacterota 1 6 Cyanobacteriota 1 7 Verrucomicrobiota 1 15.5.3.2 CC: acclimation vs FMT1 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Acclimation&quot;)%&gt;% count(phylum, name = &quot;Acclimation&quot;) %&gt;% arrange(desc(Acclimation)) structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_zzpk2x69rugjz7b7c2zu, .table th.tinytable_css_zzpk2x69rugjz7b7c2zu { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ek8xc3m70vioh7vb1vwe, .table th.tinytable_css_ek8xc3m70vioh7vb1vwe { border-bottom: solid #d3d8dc 0.1em; } phylum FMT1 Acclimation p__Bacillota_A 15 20 p__Bacteroidota 10 8 p__Bacillota 4 8 p__Bacillota_C 3 0 p__Actinomycetota 2 0 p__Desulfobacterota 1 1 p__Fusobacteriota 1 0 p__Pseudomonadota 1 6 p__Cyanobacteriota 0 3 p__Verrucomicrobiota 0 3 p__Campylobacterota 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;FMT1&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_cc_accli_fmt1 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, rand_formula = &quot;(1|individual)&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), lme_control = lme4::lmerControl(), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cc_accli_fmt1, file=&quot;data/ancom_rand_output_cc_accli_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_cc_accli_fmt1.RData&quot;) ancom_rand_output_cc_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_zqhmk4dhmqop6tncxzma, .table th.tinytable_css_zqhmk4dhmqop6tncxzma { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_nbsmy6e21vg1k5l5mm8l, .table th.tinytable_css_nbsmy6e21vg1k5l5mm8l { border-bottom: solid #d3d8dc 0.1em; } lfc_time_pointFMT1 p_time_pointFMT1 order family genus -0.05294644 1.020782e-03 o__Bacteroidales f__Rikenellaceae g__Alistipes -2.00026643 4.298128e-03 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides 0.35440645 1.512560e-08 o__Rhizobiales f__Rhizobiaceae g__Agrobacterium 1.17164883 1.483703e-02 o__Lachnospirales f__Lachnospiraceae g__Clostridium_Q 0.63703919 5.965904e-03 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.55106118 9.006749e-03 o__Lachnospirales f__Lachnospiraceae g__Roseburia 0.84138271 2.415877e-10 o__Desulfovibrionales f__Desulfovibrionaceae g__Mailhella -1.88284515 2.223632e-03 o__Opitutales f__LL51 g__ 2.40157567 3.593438e-03 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.02439559 3.132840e-02 o__Gastranaerophilales f__Gastranaerophilaceae g__Scatousia 2.27246087 6.049789e-04 o__Lachnospirales f__Lachnospiraceae g__ 2.09918735 2.272274e-02 o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma -0.13201767 6.157531e-07 o__Oscillospirales f__Acutalibacteraceae g__ 0.41463549 7.396983e-08 o__Lachnospirales f__Lachnospiraceae g__Blautia 1.60289164 2.561034e-02 o__Lachnospirales f__Lachnospiraceae g__Lacrimispora 1.15547613 4.032184e-02 o__Lachnospirales f__Lachnospiraceae g__Copromonas 0.98965563 3.228020e-02 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.61791528 7.080058e-10 o__Lachnospirales f__Lachnospiraceae g__CAG-95 -0.03682354 2.173338e-02 o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma 0.76092641 3.213289e-02 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -0.33664976 8.276106e-06 o__Bacteroidales f__Bacteroidaceae g__ 1.71934159 8.435943e-03 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 1.69860100 1.457330e-03 o__Bacteroidales f__Bacteroidaceae g__Bacteroides taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_cc_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% #filter(p_time_pointFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT1) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT1) ancombc_rand_table_mag taxon lfc_time_pointFMT1 p_time_pointFMT1 domain phylum class order family 1 AH1_2nd_12:bin_000041 -2.000266425 4.298128e-03 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 2 AH1_2nd_19:bin_000052 -1.882845155 2.223632e-03 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Opitutales LL51 3 AH1_2nd_1:bin_000005 -1.665135795 2.966206e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 4 AH1_2nd_13:bin_000029 -1.645734439 1.300459e-01 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 UBA3830 5 AH1_2nd_8:bin_000006 -1.617915280 7.080058e-10 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 6 AH1_2nd_19:bin_000005 -1.551061184 9.006749e-03 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 7 AH1_2nd_7:bin_000015 -1.548997604 1.029942e-01 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 8 LI1_2nd_1:bin_000014 -1.344212147 1.794418e-01 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 9 LI1_2nd_7:bin_000042 -1.283364395 7.717019e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 10 AH1_2nd_1:bin_000003 -1.024395595 3.132840e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 11 AH1_2nd_12:bin_000012 -0.857025351 9.239810e-02 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 12 AH1_2nd_12:bin_000056 -0.630383266 4.846583e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 13 AH1_2nd_8:bin_000027 -0.476488990 6.481804e-01 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 14 AH1_2nd_15:bin_000043 -0.469767220 5.882203e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 15 AH1_2nd_15:bin_000002 -0.458253339 9.329558e-02 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 16 AH1_2nd_19:bin_000001 -0.451145097 5.092757e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 17 AH1_2nd_5:bin_000069 -0.414686954 4.056860e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 18 AH1_2nd_12:bin_000008 -0.345661076 7.669333e-01 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 19 LI1_2nd_4:bin_000036 -0.336649759 8.276106e-06 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 20 AH1_2nd_14:bin_000063 -0.332541685 6.714184e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 21 LI1_2nd_5:bin_000013 -0.325271149 5.715231e-01 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 22 AH1_2nd_10:bin_000069 -0.318041295 9.433433e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 23 AH1_2nd_14:bin_000003 -0.288272311 1.670150e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 24 AH1_2nd_15:bin_000021 -0.277614214 5.981331e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 25 AH1_2nd_19:bin_000053 -0.218579282 5.310912e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 26 AH1_2nd_5:bin_000004 -0.132017667 6.157531e-07 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 27 AH1_2nd_9:bin_000002 -0.119671900 8.463868e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 28 AH1_2nd_18:bin_000013 -0.102856803 6.148871e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 29 AH1_2nd_10:bin_000010 -0.056703910 4.735064e-01 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 30 AH1_2nd_10:bin_000041 -0.052946441 1.020782e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 31 AH1_2nd_8:bin_000007 -0.036823541 2.173338e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 32 LI1_2nd_4:bin_000041 0.007852236 9.864813e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 33 LI1_2nd_8:bin_000019 0.042559551 9.547561e-01 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 34 AH1_2nd_1:bin_000002 0.082912552 9.269474e-01 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 35 AH1_2nd_15:bin_000009 0.118943844 7.743671e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 36 AH1_2nd_10:bin_000009 0.132804718 9.229210e-01 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 37 AH1_2nd_19:bin_000050 0.208408084 5.553207e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 38 AH1_2nd_9:bin_000047 0.267209131 4.171579e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 39 AH1_2nd_7:bin_000004 0.289820892 6.930117e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 40 AH1_2nd_15:bin_000001 0.354406452 1.512560e-08 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 41 AH1_2nd_16:bin_000045 0.357010392 8.352287e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 42 AH1_2nd_5:bin_000023 0.414635489 7.396983e-08 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 43 LI1_2nd_7:bin_000016 0.436780747 4.912489e-01 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 44 AH1_2nd_12:bin_000018 0.515214110 3.343744e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 45 AH1_2nd_9:bin_000015 0.517317627 2.691657e-01 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 46 AH1_2nd_7:bin_000041 0.572340514 2.017542e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 47 AH1_2nd_17:bin_000029 0.630370592 2.395506e-01 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 48 AH1_2nd_7:bin_000006 0.630734317 6.606338e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 49 AH1_2nd_18:bin_000024 0.637039187 5.965904e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 50 AH1_2nd_15:bin_000004 0.646830855 6.362064e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 51 AH1_2nd_14:bin_000052 0.660179503 2.931944e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 52 AH1_2nd_8:bin_000051 0.760926411 3.213289e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 53 LI1_2nd_1:bin_000006 0.827553585 1.589541e-01 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 54 AH1_2nd_19:bin_000011 0.841382706 2.415877e-10 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 55 AH1_2nd_7:bin_000036 0.913967361 5.945868e-02 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 56 AH1_2nd_7:bin_000065 0.989655634 3.228020e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 57 LI1_2nd_8:bin_000048 1.004333054 2.120711e-01 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 58 AH1_2nd_7:bin_000027 1.155476129 4.032184e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 59 AH1_2nd_17:bin_000020 1.171648828 1.483703e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 60 AH1_2nd_7:bin_000011 1.602891637 2.561034e-02 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 61 LI1_2nd_8:bin_000070 1.698601003 1.457330e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 62 LI1_2nd_8:bin_000064 1.719341585 8.435943e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 63 AH1_2nd_18:bin_000041 1.801032415 1.225818e-01 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 64 AH1_2nd_1:bin_000034 2.099187351 2.272274e-02 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 65 AH1_2nd_1:bin_000023 2.272460867 6.049789e-04 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 66 AH1_2nd_19:bin_000055 2.401575666 3.593438e-03 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 67 AH1_2nd_11:bin_000028 2.669065282 7.236994e-02 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 68 AH1_2nd_1:bin_000015 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 69 AH1_2nd_1:bin_000048 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales Anaerovoracaceae 70 AH1_2nd_10:bin_000049 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 71 AH1_2nd_11:bin_000004 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 72 AH1_2nd_11:bin_000009 NA 1.000000e+00 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 73 AH1_2nd_12:bin_000007 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 74 AH1_2nd_12:bin_000009 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 75 AH1_2nd_12:bin_000044 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 76 AH1_2nd_12:bin_000063 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 77 AH1_2nd_13:bin_000011 NA 1.000000e+00 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 78 AH1_2nd_14:bin_000014 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 79 AH1_2nd_14:bin_000047 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 80 AH1_2nd_15:bin_000013 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 81 AH1_2nd_15:bin_000025 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 82 AH1_2nd_16:bin_000025 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 83 AH1_2nd_16:bin_000058 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 84 AH1_2nd_17:bin_000030 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 85 AH1_2nd_18:bin_000033 NA 1.000000e+00 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 86 AH1_2nd_18:bin_000039 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 87 AH1_2nd_18:bin_000047 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 88 AH1_2nd_19:bin_000067 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 89 AH1_2nd_2:bin_000003 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 90 AH1_2nd_20:bin_000027 NA 1.000000e+00 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 91 AH1_2nd_20:bin_000061 NA 1.000000e+00 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 92 AH1_2nd_20:bin_000073 NA 1.000000e+00 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 93 AH1_2nd_5:bin_000037 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 94 AH1_2nd_7:bin_000010 NA 1.000000e+00 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 95 AH1_2nd_7:bin_000017 NA 1.000000e+00 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 96 AH1_2nd_7:bin_000060 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Eubacteriales Eubacteriaceae 97 AH1_2nd_7:bin_000070 NA 1.000000e+00 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 98 AH1_2nd_8:bin_000056 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 99 LI1_2nd_10:bin_000017 NA 1.000000e+00 d__Bacteria Chlamydiota c__Chlamydiia Chlamydiales Chlamydiaceae 100 LI1_2nd_3:bin_000003 NA 1.000000e+00 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae genus species 1 Mycoplasmoides 2 3 4 5 CAG-95 6 Roseburia 7 CAZU01 8 9 Parabacteroides_B 10 Scatousia 11 Helicobacter_J 12 Enterocloster 13 NSJ-61 14 Bacteroides 15 Limenecus 16 Parabacteroides 17 Bacteroides 18 Lactococcus Lactococcus formosensis 19 20 Blautia_A 21 22 Bacteroides 23 Hungatella_A 24 25 CAG-56 26 27 Phocaeicola 28 Parabacteroides 29 CALURL01 30 Alistipes 31 Dielma 32 Clostridium_Q 33 34 Fournierella 35 Acetatifactor 36 Bilophila 37 38 Bacteroides 39 Eisenbergiella 40 Agrobacterium Agrobacterium tumefaciens_H 41 Alistipes 42 Blautia 43 Clostridium_AQ 44 Alistipes 45 Desulfovibrio 46 47 NSJ-61 48 JALFVM01 49 Odoribacter 50 UMGS1251 51 Bacteroides 52 Bacteroides 53 RGIG6463 54 Mailhella 55 Intestinimonas 56 Parabacteroides 57 58 Copromonas 59 Clostridium_Q 60 Lacrimispora 61 Bacteroides 62 Parabacteroides 63 Bacteroides 64 Dielma 65 66 Parabacteroides 67 Bacteroides 68 MGBC136627 69 70 Parabacteroides 71 Hungatella_A 72 Scatocola 73 74 Alistipes 75 Parabacteroides Parabacteroides distasonis 76 CHH4-2 77 MGBC133411 78 Marseille-P3106 79 Bacteroides 80 Ventrimonas 81 Phocaeicola 82 Negativibacillus 83 Enterocloster 84 Bacteroides 85 Beduini 86 Alistipes 87 Parabacteroides 88 Bacteroides Bacteroides ovatus 89 JAAYNV01 90 Desulfovibrio 91 Enterococcus 92 Enterococcus Enterococcus sp002174455 93 Pseudoflavonifractor 94 CAJLXD01 95 Lawsonia 96 Eubacterium 97 Pseudoflavonifractor 98 Bacteroides 99 100 Alistipes [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 7 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT1 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT1 &gt;= 0.05), aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 11)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT1)+0.2, y = 10, label = &quot;Acclimation&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT1)-0.2, y = 10, label = &quot;FMT1&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;)+ theme(plot.margin = margin(10, 10, 10, 10), clip = &quot;off&quot;) Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 6 2 Bacillota_A 5 3 Bacillota 1 4 Desulfobacterota 1 5 Pseudomonadota 1 Phyla of the significant MAGs in acclimation ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 3 2 Bacillota 2 3 Bacteroidota 2 4 Cyanobacteriota 1 5 Verrucomicrobiota 1 15.5.3.3 WC: acclimation vs FMT1 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Acclimation&quot;)%&gt;% count(phylum, name = &quot;Acclimation&quot;) %&gt;% arrange(desc(Acclimation)) structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_cf1pyuv5hy97tjuy6rt0, .table th.tinytable_css_cf1pyuv5hy97tjuy6rt0 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_7ttpsvgm7l7iywokawmy, .table th.tinytable_css_7ttpsvgm7l7iywokawmy { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum FMT1 Acclimation p__Bacillota_A 8 24 p__Bacillota 4 9 p__Bacteroidota 4 9 p__Bacillota_C 3 0 p__Pseudomonadota 2 7 p__Desulfobacterota 1 3 p__Cyanobacteriota 0 4 p__Verrucomicrobiota 0 2 p__Bacillota_B 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; time_point %in% c(&quot;Acclimation&quot;, &quot;FMT1&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_wc_accli_fmt1 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_wc_accli_fmt1, file=&quot;data/ancom_rand_output_wc_accli_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_wc_accli_fmt1.RData&quot;) ancom_rand_output_wc_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_qedexbpjfcbub83vdg1s, .table th.tinytable_css_qedexbpjfcbub83vdg1s { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4dbgrqyell20jin662l0, .table th.tinytable_css_4dbgrqyell20jin662l0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } lfc_time_pointFMT1 p_time_pointFMT1 order family genus -1.4147020 0.0079624151 o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus -1.6335512 0.0015915022 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 2.2048197 0.0027319824 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -0.9719098 0.0338244363 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A 1.9160385 0.0008275244 o__Fusobacteriales f__Fusobacteriaceae g__Fusobacterium_A 1.7589146 0.0289403764 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -1.2336775 0.0177056512 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A -0.9224891 0.0194457088 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.2168819 0.0048334173 o__Lachnospirales f__Lachnospiraceae g__Enterocloster -1.3990257 0.0176505048 o__Lachnospirales f__Lachnospiraceae g__Roseburia 1.0227752 0.0208942361 o__Lachnospirales f__Lachnospiraceae g__ -1.3990617 0.0292190491 o__Lachnospirales f__Lachnospiraceae g__Kineothrix -1.6368805 0.0033069688 o__Desulfovibrionales f__Desulfovibrionaceae g__Desulfovibrio -1.7932455 0.0038411118 o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 1.0028863 0.0399559198 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -2.7248646 0.0143167820 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.2349255 0.0118533968 o__UBA3830 f__UBA3830 g__ -2.5444915 0.0181963898 o__RF39 f__UBA660 g__Faecisoma -0.8132650 0.0410727153 o__Oscillospirales f__Oscillospiraceae g__Intestinimonas -1.6887136 0.0052260245 o__Campylobacterales f__Helicobacteraceae g__NHYM01 0.8742795 0.0304885224 o__Lachnospirales f__Lachnospiraceae g__ -1.6911528 0.0075333214 o__Oscillospirales f__Ruminococcaceae g__Ruthenibacterium -1.2248435 0.0031293651 o__Christensenellales f__MGBC116941 g__MGBC116941 -1.3822835 0.0145873552 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.0354069 0.0354665938 o__Christensenellales f__ g__ -1.2478241 0.0049555216 o__Bacteroidales f__Marinifilaceae g__Odoribacter 1.9196797 0.0073599170 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -0.9705541 0.0400355874 o__Christensenellales f__DTU072 g__ 0.9974229 0.0322636387 o__UBA3830 f__ g__ -0.8119953 0.0245159238 o__Bacteroidales f__Marinifilaceae g__Odoribacter 1.7039486 0.0022695466 o__Erysipelotrichales f__Erysipelotrichaceae g__Breznakia 0.9438507 0.0481624226 o__Oscillospirales f__Ruminococcaceae g__Anaerotruncus 1.3967021 0.0228792426 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ 1.6782542 0.0001554928 o__Lachnospirales f__Lachnospiraceae g__ 0.8341143 0.0297704979 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -2.2451028 0.0207309381 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.0173105 0.0409645084 o__Bacteroidales f__Rikenellaceae g__Rikenella 1.4037398 0.0434404072 o__Christensenellales f__UBA3700 g__ -2.1061921 0.0255031097 o__Oscillospirales f__Ruminococcaceae g__Angelakisella -2.8140777 0.0023998639 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides -1.0993689 0.0246772376 o__Lachnospirales f__Lachnospiraceae g__ 1.3411358 0.0251547320 o__RF32 f__CAG-239 g__CAJLXD01 taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_wc_accli_fmt1$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT1, p_time_pointFMT1) %&gt;% #filter(p_time_pointFMT1 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT1) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT1) ancombc_rand_table_mag taxon lfc_time_pointFMT1 p_time_pointFMT1 domain phylum class order family 1 AH1_2nd_2:bin_000018 -3.172045116 1.000000000 d__Bacteria Elusimicrobiota c__Elusimicrobia Elusimicrobiales Elusimicrobiaceae 2 LI1_2nd_8:bin_000045 -2.814077676 0.002399864 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 3 AH1_2nd_6:bin_000002 -2.724864564 0.014316782 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 4 AH1_2nd_6:bin_000035 -2.544491492 0.018196390 d__Bacteria Bacillota c__Bacilli RF39 UBA660 5 AH1_2nd_20:bin_000053 -2.459596342 0.068593011 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA1242 6 LI1_2nd_8:bin_000006 -2.245102794 0.020730938 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 7 LI1_2nd_8:bin_000044 -2.106192139 0.025503110 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 8 LI1_2nd_7:bin_000038 -1.914362784 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 9 AH1_2nd_2:bin_000003 -1.793245548 0.003841112 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 AH1_2nd_14:bin_000063 -1.725388252 0.107550596 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 11 LI1_2nd_2:bin_000002 -1.691152830 0.007533321 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 12 AH1_2nd_7:bin_000028 -1.688713582 0.005226025 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 13 AH1_2nd_20:bin_000027 -1.636880512 0.003306969 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 14 AH1_2nd_10:bin_000069 -1.633551159 0.001591502 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 15 LI1_2nd_4:bin_000037 -1.541769495 1.000000000 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 16 LI1_2nd_8:bin_000079 -1.454775239 0.131542667 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 17 AH1_2nd_10:bin_000001 -1.414701964 0.007962415 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 18 AH1_2nd_20:bin_000009 -1.399061741 0.029219049 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 19 AH1_2nd_19:bin_000005 -1.399025732 0.017650505 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 20 LI1_2nd_3:bin_000003 -1.382283470 0.014587355 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 21 LI1_2nd_4:bin_000026 -1.247824146 0.004955522 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 22 AH1_2nd_6:bin_000030 -1.234925474 0.011853397 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 UBA3830 23 AH1_2nd_14:bin_000003 -1.233677453 0.017705651 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 24 LI1_2nd_2:bin_000006 -1.224843510 0.003129365 d__Bacteria Bacillota_A c__Clostridia Christensenellales MGBC116941 25 AH1_2nd_16:bin_000058 -1.216881887 0.004833417 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 26 AH1_2nd_19:bin_000072 -1.176594825 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 27 AH1_2nd_18:bin_000040 -1.172511335 0.141345717 d__Bacteria Actinomycetota c__Coriobacteriia Coriobacteriales Eggerthellaceae 28 AH1_2nd_13:bin_000055 -1.161670869 0.051969566 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 29 LI1_2nd_8:bin_000048 -1.099368907 0.024677238 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 30 LI1_2nd_4:bin_000001 -1.035406921 0.035466594 d__Bacteria Bacillota_A c__Clostridia Christensenellales 31 LI1_2nd_8:bin_000016 -1.017310476 0.040964508 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 32 LI1_2nd_1:bin_000032 -0.999484854 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 33 AH1_2nd_11:bin_000004 -0.971909767 0.033824436 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 34 LI1_2nd_5:bin_000013 -0.970554096 0.040035587 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 35 AH1_2nd_12:bin_000015 -0.955081047 0.091947738 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 36 AH1_2nd_5:bin_000023 -0.935340094 0.068420241 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 37 AH1_2nd_16:bin_000047 -0.922489055 0.019445709 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 38 AH1_2nd_10:bin_000050 -0.915250029 0.062275338 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 39 AH1_2nd_20:bin_000024 -0.904223789 0.085727985 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 40 AH1_2nd_5:bin_000006 -0.835384441 0.054735417 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales Acidaminococcaceae 41 LI1_2nd_6:bin_000001 -0.819288155 0.089380355 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 42 AH1_2nd_6:bin_000060 -0.813265018 0.041072715 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 43 LI1_2nd_5:bin_000037 -0.811995277 0.024515924 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 44 LI1_2nd_3:bin_000007 -0.761559060 0.108710846 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 45 AH1_2nd_20:bin_000008 -0.755064594 0.146762306 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 46 AH1_2nd_6:bin_000037 -0.732607033 0.228979980 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales UBA932 47 LI1_2nd_7:bin_000001 -0.724383692 0.276128779 d__Bacteria Bacillota_A c__Clostridia Clostridiales Clostridiaceae 48 AH1_2nd_5:bin_000051 -0.720742397 0.096650644 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 49 AH1_2nd_19:bin_000011 -0.709572225 1.000000000 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 50 LI1_2nd_1:bin_000014 -0.692650571 0.067035686 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 51 LI1_2nd_7:bin_000011 -0.673555412 0.134871483 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 52 AH1_2nd_1:bin_000039 -0.667198867 0.068006903 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 53 AH1_2nd_20:bin_000003 -0.657783594 0.245501871 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 54 LI1_2nd_7:bin_000020 -0.622484932 1.000000000 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 55 AH1_2nd_16:bin_000045 -0.584130247 0.099413448 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 56 LI1_2nd_4:bin_000010 -0.572438357 0.167231453 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 57 AH1_2nd_18:bin_000024 -0.570930451 0.145805402 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 58 AH1_2nd_13:bin_000025 -0.511260207 0.289820095 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 59 AH1_2nd_2:bin_000017 -0.498405648 0.145828685 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 60 AH1_2nd_13:bin_000037 -0.491429021 0.159057604 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 61 AH1_2nd_19:bin_000001 -0.460649227 0.331234642 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 62 AH1_2nd_6:bin_000004 -0.456682329 0.280801383 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales RUG14156 63 AH1_2nd_15:bin_000001 -0.453142587 0.350803862 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 64 LI1_2nd_9:bin_000022 -0.435710568 0.175258804 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 65 AH1_2nd_5:bin_000004 -0.426700893 0.259155948 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 66 AH1_2nd_9:bin_000002 -0.422458230 0.413092317 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 67 AH1_2nd_10:bin_000049 -0.410039582 0.324826918 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 68 AH1_2nd_1:bin_000003 -0.368752504 0.337753915 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 69 AH1_2nd_14:bin_000052 -0.327862400 0.284734829 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 70 LI1_2nd_7:bin_000005 -0.323963344 0.495004900 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 71 LI1_2nd_3:bin_000005 -0.295164346 0.418500690 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 72 AH1_2nd_12:bin_000008 -0.226626091 0.640611934 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 73 AH1_2nd_6:bin_000062 -0.206368360 0.539866673 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 74 LI1_2nd_9:bin_000023 -0.203347377 0.595223736 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 75 AH1_2nd_7:bin_000006 -0.202673177 0.554293566 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 76 LI1_2nd_7:bin_000012 -0.189556770 0.661546421 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 77 AH1_2nd_16:bin_000064 -0.187790084 0.572888455 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 78 AH1_2nd_16:bin_000096 -0.178702383 0.583373192 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 79 LI1_2nd_10:bin_000017 -0.173184347 0.737001280 d__Bacteria Chlamydiota c__Chlamydiia Chlamydiales Chlamydiaceae 80 LI1_2nd_3:bin_000015 -0.170797925 0.612784815 d__Bacteria Bacillota c__Bacilli Staphylococcales Staphylococcaceae 81 LI1_2nd_7:bin_000014 -0.168665378 0.625493363 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales UBA1820 82 LI1_2nd_4:bin_000041 -0.132252238 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 83 LI1_2nd_8:bin_000038 -0.127036874 0.666220738 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 84 AH1_2nd_6:bin_000046 -0.124514289 0.800916165 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 85 AH1_2nd_18:bin_000011 -0.121480606 0.781438815 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 86 AH1_2nd_8:bin_000006 -0.085757870 0.837188584 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 87 LI1_2nd_2:bin_000001 -0.081488093 0.806381661 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 88 AH1_2nd_16:bin_000033 -0.070311676 0.836601382 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 89 AH1_2nd_16:bin_000020 -0.063469833 0.872865235 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 90 LI1_2nd_4:bin_000036 -0.056912524 0.887544342 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 91 AH1_2nd_10:bin_000010 -0.055775151 1.000000000 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 92 AH1_2nd_16:bin_000019 -0.031730347 0.952633776 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 93 AH1_2nd_14:bin_000014 -0.023373863 0.941623659 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 94 LI1_2nd_9:bin_000004 -0.009434782 0.977099556 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 95 AH1_2nd_7:bin_000011 -0.009352205 0.980499154 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 96 AH1_2nd_13:bin_000011 -0.004237580 0.991877404 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 97 AH1_2nd_1:bin_000005 0.012737951 0.971508554 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 98 LI1_2nd_4:bin_000052 0.044044504 0.897882451 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 99 AH1_2nd_19:bin_000055 0.051824866 0.896680010 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 100 LI1_2nd_7:bin_000042 0.053144641 0.881172225 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae genus species 1 UBA1436 2 Mycoplasmoides 3 Odoribacter 4 Faecisoma 5 6 Alistipes 7 Angelakisella 8 Parabacteroides_B 9 JAAYNV01 10 Blautia_A 11 Ruthenibacterium 12 NHYM01 13 Desulfovibrio 14 Bacteroides 15 Stoquefichus 16 Citrobacter_A Citrobacter_A amalonaticus 17 Limenecus 18 Kineothrix 19 Roseburia 20 Alistipes 21 Odoribacter 22 23 Hungatella_A 24 MGBC116941 25 Enterocloster 26 27 Eggerthella 28 Bacteroides Bacteroides fragilis_B 29 30 31 Rikenella 32 Parabacteroides 33 Hungatella_A 34 35 Thomasclavelia 36 Blautia 37 Odoribacter 38 Bacteroides Bacteroides intestinalis 39 CAZU01 40 Phascolarctobacterium Phascolarctobacterium sp900544795 41 Salmonella Salmonella enterica 42 Intestinimonas 43 Odoribacter 44 C-19 45 Alistipes 46 Egerieousia 47 Sarcina 48 Bacteroides 49 Mailhella 50 51 14-2 52 Odoribacter 53 Scatenecus 54 55 Alistipes 56 Parabacteroides 57 Odoribacter 58 59 Copromonas 60 Odoribacter 61 Parabacteroides 62 63 Agrobacterium Agrobacterium tumefaciens_H 64 Oscillibacter 65 66 Phocaeicola 67 Parabacteroides 68 Scatousia 69 Bacteroides 70 Ventrimonas 71 Lawsonia 72 Lactococcus Lactococcus formosensis 73 HGM05232 74 JALFVM01 75 JALFVM01 76 Alistipes 77 Scatomorpha 78 Ruthenibacterium 79 80 Staphylococcus Staphylococcus shinii 81 Merdimorpha 82 Clostridium_Q 83 Clostridium_Q 84 Bacteroides 85 Coprobacillus 86 CAG-95 87 88 89 Bilophila 90 91 CALURL01 92 Alistipes 93 Marseille-P3106 94 Scatousia 95 Lacrimispora 96 MGBC133411 97 98 Enterocloster 99 Parabacteroides 100 Parabacteroides_B [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 60 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT1 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT1 &gt;= 0.05), aes(x = lfc_time_pointFMT1, y = -log10(p_time_pointFMT1)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 5)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 5, label = &quot;FMT1&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT1), y = 5, label = &quot;Acclimation&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 5 2 Bacteroidota 4 3 Bacillota 2 4 Pseudomonadota 2 5 Campylobacterota 1 6 Fusobacteriota 1 Phyla of the significant MAGs in acclimation ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT1 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT1&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 13 2 Bacteroidota 8 3 Bacillota 2 4 Campylobacterota 1 5 Cyanobacteriota 1 6 Desulfobacterota 1 7 Pseudomonadota 1 15.6 Differences between FMT1 and FMT2 across the three experimental groups 15.6.1 Functional differences CI from FMT1 to FMT2 significant_element&lt;-element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;FMT1&quot;) &amp; type == &quot;Cold_intervention&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_element$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 6, 8)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;FMT1&quot;))%&gt;% filter(type==&quot;Cold_intervention&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code, -type) %&gt;% group_by(time_point) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=FMT1-FMT2)%&gt;% mutate(group_color = ifelse(Difference &lt;0,&quot;FMT2&quot;, &quot;FMT1&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&#39;#008080&#39;,&quot;#76b183&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) CC from FMT1 to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;FMT1&quot;) &amp; type == &quot;Cold_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; WC from FMT1 to FMT2 element_gift %&gt;% filter(time_point %in% c(&quot;FMT2&quot;,&quot;FMT1&quot;) &amp; type == &quot;Warm_control&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 8)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, time_point), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ time_point)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) # A tibble: 0 × 6 # ℹ 6 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt;, Domain &lt;chr&gt;, Function &lt;chr&gt;, Element &lt;chr&gt; 15.6.2 Differential abundances 15.6.2.1 CI: FMT1 vs FMT2 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) structural_zeros %&gt;% filter(present==&quot;FMT2&quot;)%&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_pl9r5sfjn6809p1hl09w, .table th.tinytable_css_pl9r5sfjn6809p1hl09w { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ku1hnekwzrelbv22sfwy, .table th.tinytable_css_ku1hnekwzrelbv22sfwy { border-bottom: solid #d3d8dc 0.1em; } phylum FMT2 FMT1 p__Bacillota_A 19 8 p__Pseudomonadota 15 0 p__Bacteroidota 8 2 p__Bacillota 5 3 p__Cyanobacteriota 5 0 p__Desulfobacterota 2 0 p__Verrucomicrobiota 2 0 p__Bacillota_C 1 0 p__Spirochaetota 1 0 p__Actinomycetota 0 1 p__Campylobacterota 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_intervention&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_ci_fmt1_FMT2 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_ci_fmt1_FMT2, file=&quot;data/ancom_rand_output_ci_fmt1_FMT2.RData&quot;) load(&quot;data/ancom_rand_output_ci_fmt1_FMT2.RData&quot;) ancom_rand_output_ci_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_qgipupq4gqokcqxb4kd2, .table th.tinytable_css_qgipupq4gqokcqxb4kd2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_a9we35xreiu0ynbs682v, .table th.tinytable_css_a9we35xreiu0ynbs682v { border-bottom: solid #d3d8dc 0.1em; } lfc_time_pointFMT2 p_time_pointFMT2 order family genus 1.6049257 0.0157811882 o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus 0.9564973 0.0275097118 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 2.0492182 0.0166204047 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A -1.8918089 0.0096699935 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -1.2081046 0.0210589048 o__RF32 f__CAG-239 g__MGBC133411 1.1513092 0.0219338311 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.9022385 0.0009678399 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A -1.1428833 0.0226212070 o__Rhizobiales f__Rhizobiaceae g__Agrobacterium 1.5906273 0.0008227119 o__Lachnospirales f__Lachnospiraceae g__Acetatifactor 1.0975241 0.0150004143 o__Oscillospirales f__Oscillospiraceae g__Scatomorpha -1.0241243 0.0081256219 o__Lachnospirales f__Lachnospiraceae g__ 1.1899452 0.0392264071 o__Bacteroidales f__Marinifilaceae g__Odoribacter 2.3003361 0.0160580792 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.1771426 0.0398005710 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 2.1549960 0.0063980104 o__Enterobacterales f__Enterobacteriaceae g__Proteus 1.1806298 0.0153184268 o__Lachnospirales f__Lachnospiraceae g__CAG-95 0.9643163 0.0213552181 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 0.9715614 0.0148063607 o__Desulfovibrionales f__Desulfovibrionaceae g__ 1.4550694 0.0288178508 o__Christensenellales f__ g__ 1.6826956 0.0003988881 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.7750819 0.0188386547 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.0206597 0.0387357866 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ 1.6686679 0.0064021560 o__Lachnospirales f__Lachnospiraceae g__ 1.2527316 0.0339066243 o__RF32 f__CAG-239 g__CAJLXD01 1.1133229 0.0229428413 o__Oscillospirales f__Oscillospiraceae g__Oscillibacter taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_ci_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% #filter(p_time_pointFMT2 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT2) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT2) ancombc_rand_table_mag taxon lfc_time_pointFMT2 p_time_pointFMT2 domain phylum class order family 1 AH1_2nd_2:bin_000018 -2.2170594742 1.000000000 d__Bacteria Elusimicrobiota c__Elusimicrobia Elusimicrobiales Elusimicrobiaceae 2 AH1_2nd_12:bin_000012 -1.8918089486 0.009669994 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 3 LI1_2nd_7:bin_000012 -1.7750818527 0.018838655 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 4 AH1_2nd_1:bin_000034 -1.6789181641 0.122732878 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 5 AH1_2nd_2:bin_000017 -1.6426716672 0.099339303 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 6 AH1_2nd_12:bin_000007 -1.3317033397 0.149416164 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 7 AH1_2nd_13:bin_000049 -1.2129524972 1.000000000 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 8 AH1_2nd_13:bin_000011 -1.2081046232 0.021058905 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 9 AH1_2nd_6:bin_000046 -1.1771425763 0.039800571 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 10 AH1_2nd_15:bin_000001 -1.1428833217 0.022621207 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 11 AH1_2nd_1:bin_000023 -1.0241243111 0.008125622 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 12 LI1_2nd_7:bin_000016 -1.0206596605 0.038735787 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 13 AH1_2nd_16:bin_000020 -0.8225875827 0.125186644 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 14 LI1_2nd_4:bin_000036 -0.7526182595 0.126502538 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 15 AH1_2nd_16:bin_000033 -0.7360801119 0.259428240 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales 16 AH1_2nd_16:bin_000018 -0.7339918201 0.050556855 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 17 LI1_2nd_2:bin_000006 -0.6585081134 0.243653520 d__Bacteria Bacillota_A c__Clostridia Christensenellales MGBC116941 18 AH1_2nd_12:bin_000008 -0.6374710665 0.240673513 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 19 AH1_2nd_16:bin_000045 -0.6276291694 0.142544022 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 20 AH1_2nd_2:bin_000001 -0.6267640458 0.103108126 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 21 AH1_2nd_10:bin_000097 -0.6211566498 0.172843297 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 22 AH1_2nd_5:bin_000006 -0.5548028963 0.145909018 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales Acidaminococcaceae 23 LI1_2nd_8:bin_000079 -0.5544456136 0.224155294 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 24 AH1_2nd_5:bin_000073 -0.5285887503 0.294517962 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 25 AH1_2nd_9:bin_000047 -0.5283891687 0.106458201 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 26 LI1_2nd_9:bin_000023 -0.5086805550 0.166418019 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 27 LI1_2nd_8:bin_000070 -0.4860780469 0.356817031 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 28 LI1_2nd_7:bin_000014 -0.4683846051 0.314952831 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales UBA1820 29 AH1_2nd_16:bin_000047 -0.4250924204 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 30 AH1_2nd_19:bin_000055 -0.4061328580 0.375240818 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 31 LI1_2nd_7:bin_000038 -0.3966760527 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 32 AH1_2nd_5:bin_000069 -0.3900113999 0.311651877 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 33 AH1_2nd_20:bin_000087 -0.3245503723 0.266844400 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 34 AH1_2nd_7:bin_000036 -0.3212194646 0.334517260 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 35 AH1_2nd_17:bin_000020 -0.3187362674 0.426259034 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 36 AH1_2nd_10:bin_000042 -0.3101621313 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 37 LI1_2nd_8:bin_000064 -0.2610335487 0.646906988 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 38 AH1_2nd_7:bin_000070 -0.2418390019 0.493532581 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 39 LI1_2nd_7:bin_000040 -0.2381398838 0.583059539 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 40 AH1_2nd_5:bin_000023 -0.2136644368 0.593548340 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 41 AH1_2nd_7:bin_000027 -0.1580093762 0.583321339 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 42 AH1_2nd_8:bin_000027 -0.1571181784 0.675378405 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 43 AH1_2nd_15:bin_000004 -0.1536142596 0.696309495 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 44 AH1_2nd_8:bin_000007 -0.1519618005 0.586159140 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 45 AH1_2nd_12:bin_000041 -0.1294680721 0.770312929 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 46 AH1_2nd_7:bin_000041 -0.1273204855 0.690949178 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 47 LI1_2nd_4:bin_000034 -0.1191329411 0.736328870 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 48 LI1_2nd_7:bin_000083 -0.1172776467 0.698042931 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 49 LI1_2nd_4:bin_000041 -0.1155769652 0.702040881 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 50 AH1_2nd_1:bin_000048 -0.1090370229 0.695407295 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales Anaerovoracaceae 51 AH1_2nd_19:bin_000067 -0.0833563872 0.811024270 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 52 AH1_2nd_11:bin_000005 -0.0355163387 0.950101967 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 53 LI1_2nd_7:bin_000005 -0.0290230670 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 54 LI1_2nd_5:bin_000023 -0.0240260015 0.929045758 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 55 AH1_2nd_16:bin_000058 -0.0169831700 0.954070906 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 56 AH1_2nd_18:bin_000033 -0.0100172749 0.969644351 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 57 AH1_2nd_15:bin_000013 -0.0001676338 0.999546372 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 58 LI1_2nd_8:bin_000016 0.0011274489 0.996771455 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 59 AH1_2nd_16:bin_000025 0.0366696878 0.901343037 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 60 AH1_2nd_16:bin_000019 0.0369203759 0.924379339 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 61 AH1_2nd_7:bin_000011 0.0479829287 0.875765403 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 62 AH1_2nd_18:bin_000041 0.0540359288 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 63 AH1_2nd_15:bin_000025 0.0701556482 0.886016590 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 64 AH1_2nd_7:bin_000004 0.0707079201 0.893038927 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 65 LI1_2nd_7:bin_000009 0.0852743604 0.793414966 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 66 LI1_2nd_7:bin_000053 0.0883838143 0.808848202 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 67 AH1_2nd_18:bin_000039 0.0902103359 0.751572995 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 68 AH1_2nd_7:bin_000055 0.0995979755 0.783239826 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 69 AH1_2nd_20:bin_000042 0.1457144033 0.687130023 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 70 AH1_2nd_14:bin_000032 0.1595169534 0.607052260 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 71 AH1_2nd_12:bin_000018 0.1715907676 0.539214431 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 72 AH1_2nd_14:bin_000052 0.1912431106 0.601899351 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 73 AH1_2nd_13:bin_000025 0.2216490457 0.511924719 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 74 AH1_2nd_1:bin_000015 0.2218604276 0.613436340 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 75 LI1_2nd_5:bin_000037 0.2236604074 0.503097546 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 76 AH1_2nd_14:bin_000063 0.2304734408 0.488756679 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 77 AH1_2nd_15:bin_000043 0.2329461781 0.511602541 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 78 AH1_2nd_5:bin_000004 0.2382440770 0.468335048 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 79 LI1_2nd_7:bin_000078 0.2932171346 0.427503334 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 80 LI1_2nd_8:bin_000006 0.3331257716 0.403780919 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 81 AH1_2nd_14:bin_000014 0.3373251738 0.270598916 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 82 AH1_2nd_20:bin_000006 0.3542644595 0.293421593 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 83 LI1_2nd_7:bin_000019 0.3561942326 0.281023928 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 84 AH1_2nd_19:bin_000050 0.3635927444 0.421825348 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 85 AH1_2nd_1:bin_000003 0.3754831806 0.314191133 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 86 AH1_2nd_11:bin_000028 0.4410427519 0.247717632 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 87 AH1_2nd_1:bin_000002 0.4518608620 0.177644673 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 88 AH1_2nd_6:bin_000062 0.4580597522 0.307562548 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 89 LI1_2nd_4:bin_000052 0.4668906412 0.232901403 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 90 LI1_2nd_7:bin_000033 0.4871293802 0.230751510 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 91 AH1_2nd_16:bin_000023 0.4902761211 0.360578101 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 92 AH1_2nd_6:bin_000037 0.4968732208 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales UBA932 93 AH1_2nd_6:bin_000060 0.5058525488 0.123057616 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 94 LI1_2nd_3:bin_000003 0.5061346276 0.172686829 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 95 AH1_2nd_16:bin_000096 0.5099151444 0.171129874 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 96 AH1_2nd_16:bin_000100 0.5845175399 0.253252200 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 97 AH1_2nd_10:bin_000069 0.5995170465 0.172000007 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 98 AH1_2nd_20:bin_000016 0.6065298077 0.204139503 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 99 AH1_2nd_18:bin_000024 0.7171502782 0.107781937 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 100 AH1_2nd_20:bin_000027 0.7182052307 0.095720937 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae genus species 1 UBA1436 2 Helicobacter_J 3 Alistipes 4 Dielma 5 Copromonas 6 7 8 MGBC133411 9 Bacteroides 10 Agrobacterium Agrobacterium tumefaciens_H 11 12 Clostridium_AQ 13 Bilophila 14 15 16 17 MGBC116941 18 Lactococcus Lactococcus formosensis 19 Alistipes 20 21 Parabacteroides 22 Phascolarctobacterium Phascolarctobacterium sp900544795 23 Citrobacter_A Citrobacter_A amalonaticus 24 Parabacteroides Parabacteroides goldsteinii 25 Bacteroides 26 JALFVM01 27 Bacteroides 28 Merdimorpha 29 Odoribacter 30 Parabacteroides 31 Parabacteroides_B 32 Bacteroides 33 Parabacteroides Parabacteroides gordonii 34 Intestinimonas 35 Clostridium_Q 36 Alistipes 37 Parabacteroides 38 Pseudoflavonifractor 39 40 Blautia 41 Copromonas 42 NSJ-61 43 UMGS1251 44 Dielma 45 Mycoplasmoides 46 47 Bacteroides Bacteroides thetaiotaomicron 48 Pseudoflavonifractor 49 Clostridium_Q 50 51 Bacteroides Bacteroides ovatus 52 Fusobacterium_A Fusobacterium_A ulcerans 53 Ventrimonas 54 55 Enterocloster 56 Beduini 57 Ventrimonas 58 Rikenella 59 Negativibacillus 60 Alistipes 61 Lacrimispora 62 Bacteroides 63 Phocaeicola 64 Eisenbergiella 65 Anaerotruncus 66 Bacteroides Bacteroides nordii 67 Alistipes 68 Ureaplasma 69 Hungatella 70 71 Alistipes 72 Bacteroides 73 74 MGBC136627 75 Odoribacter 76 Blautia_A 77 Bacteroides 78 79 Copromonas 80 Alistipes 81 Marseille-P3106 82 Butyricimonas Butyricimonas sp900184685 83 Butyricimonas 84 85 Scatousia 86 Bacteroides 87 Fournierella 88 HGM05232 89 Enterocloster 90 Fournierella 91 92 Egerieousia 93 Intestinimonas 94 Alistipes 95 Ruthenibacterium 96 Bacteroides 97 Bacteroides 98 99 Odoribacter 100 Desulfovibrio [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 51 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT2 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT2 &gt;= 0.05), aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT1&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT2&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in FMT2 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 8 2 Bacteroidota 6 3 Pseudomonadota 2 4 Cyanobacteriota 1 5 Desulfobacterota 1 Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 2 2 Pseudomonadota 2 3 Bacillota 1 4 Bacillota_A 1 5 Campylobacterota 1 15.6.2.2 CC: FMT1 vs FMT2 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) structural_zeros %&gt;% filter(present==&quot;FMT2&quot;)%&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_tltw5zy5ivtxwdasphfn, .table th.tinytable_css_tltw5zy5ivtxwdasphfn { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_df9ak81jvnx16bhsfutd, .table th.tinytable_css_df9ak81jvnx16bhsfutd { border-bottom: solid #d3d8dc 0.1em; } phylum FMT2 FMT1 p__Bacillota_A 19 6 p__Bacillota 6 4 p__Bacteroidota 6 6 p__Pseudomonadota 6 1 p__Cyanobacteriota 2 0 p__Desulfobacterota 2 1 p__Campylobacterota 1 0 p__Verrucomicrobiota 1 0 p__Actinomycetota 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Cold_control&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_cc_fmt1_FMT2 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cc_fmt1_FMT2, file=&quot;data/ancom_rand_output_cc_fmt1_FMT2.RData&quot;) load(&quot;data/ancom_rand_output_cc_fmt1_FMT2.RData&quot;) ancom_rand_output_cc_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_rs6y914vxxu9avqgavc4, .table th.tinytable_css_rs6y914vxxu9avqgavc4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_1ywg7t3ub6pci1z5ie4l, .table th.tinytable_css_1ywg7t3ub6pci1z5ie4l { border-bottom: solid #d3d8dc 0.1em; } lfc_time_pointFMT2 p_time_pointFMT2 order family genus -1.1198010 0.0493049200 o__Gastranaerophilales f__Gastranaerophilaceae g__CALURL01 -1.5062750 0.0097993777 o__Fusobacteriales f__Fusobacteriaceae g__Fusobacterium_A 2.4827509 0.0139900320 o__RF32 f__CAG-239 g__Scatocola -1.3151251 0.0072517934 o__Lactobacillales f__Streptococcaceae g__Lactococcus 1.4541589 0.0160901321 o__Bacteroidales f__Rikenellaceae g__Alistipes -0.8116835 0.0444836720 o__Bacteroidales f__Rikenellaceae g__Alistipes 1.1136172 0.0250850121 o__Mycoplasmatales f__Mycoplasmoidaceae g__Mycoplasmoides -1.3597164 0.0258606282 o__Rhizobiales f__Rhizobiaceae g__Agrobacterium 1.1091976 0.0164391420 o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus -0.9340069 0.0351897828 o__Lachnospirales f__Lachnospiraceae g__Clostridium_Q -1.5761510 0.0087725688 o__Erysipelotrichales f__Erysipelotrichaceae g__NSJ-61 1.6900745 0.0007465451 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -2.0339744 0.0146779091 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.1908959 0.0223022247 o__Coriobacteriales f__Eggerthellaceae g__Eggerthella 1.0462005 0.0272520436 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.1937901 0.0224995923 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -2.3139776 0.0012671561 o__Lachnospirales f__Lachnospiraceae g__ 1.1186724 0.0417965176 o__Lachnospirales f__Lachnospiraceae g__ -2.3220764 0.0118523541 o__Lachnospirales f__Lachnospiraceae g__MGBC136627 -1.7225723 0.0084680239 o__Lachnospirales f__Lachnospiraceae g__ -1.0102405 0.0451494794 o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma 1.0311504 0.0132985344 o__Oscillospirales f__Acutalibacteraceae g__ -3.0528872 0.0006416506 o__Enterobacterales f__Enterobacteriaceae g__Proteus -2.0779366 0.0016473980 o__Mycoplasmatales f__Mycoplasmoidaceae g__Ureaplasma -1.6574844 0.0054464826 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.1168025 0.0257358548 o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor -1.2369578 0.0432727451 o__Peptococcales f__Peptococcaceae g__RGIG6463 -1.1783817 0.0145456364 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ -1.4329605 0.0047288565 o__Christensenellales f__UBA3700 g__ -1.5111121 0.0031036127 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -1.1709721 0.0168869815 o__Bacteroidales f__Bacteroidaceae g__Bacteroides taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_cc_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% #filter(p_time_pointFMT2 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT2) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT2) ancombc_rand_table_mag taxon lfc_time_pointFMT2 p_time_pointFMT2 domain phylum class order family 1 LI1_2nd_10:bin_000018 -3.31447169 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 2 AH1_2nd_7:bin_000010 -3.30303444 1.0000000000 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 3 AH1_2nd_7:bin_000003 -3.05288723 0.0006416506 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 4 AH1_2nd_1:bin_000015 -2.32207639 0.0118523541 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 5 AH1_2nd_19:bin_000072 -2.31397764 0.0012671561 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 6 LI1_2nd_7:bin_000053 -2.20355357 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 7 AH1_2nd_7:bin_000055 -2.07793661 0.0016473980 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 8 AH1_2nd_18:bin_000024 -2.03397438 0.0146779091 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 9 AH1_2nd_12:bin_000007 -1.92051664 0.1148569150 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 AH1_2nd_13:bin_000011 -1.73568911 0.0938536206 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 11 AH1_2nd_12:bin_000056 -1.72844265 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 12 AH1_2nd_1:bin_000023 -1.72257234 0.0084680239 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 13 AH1_2nd_12:bin_000044 -1.66220361 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 14 AH1_2nd_7:bin_000065 -1.65748441 0.0054464826 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 15 AH1_2nd_5:bin_000073 -1.64486346 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 16 AH1_2nd_17:bin_000029 -1.57615104 0.0087725688 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 17 AH1_2nd_7:bin_000017 -1.54785328 1.0000000000 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 18 LI1_2nd_7:bin_000078 -1.54732216 0.1079249784 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 19 LI1_2nd_8:bin_000064 -1.51111206 0.0031036127 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 20 AH1_2nd_11:bin_000005 -1.50627502 0.0097993777 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 21 LI1_2nd_8:bin_000019 -1.43296047 0.0047288565 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 22 AH1_2nd_15:bin_000001 -1.35971641 0.0258606282 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 23 AH1_2nd_12:bin_000008 -1.31512515 0.0072517934 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 24 AH1_2nd_7:bin_000005 -1.25956134 1.0000000000 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales Acidaminococcaceae 25 LI1_2nd_1:bin_000006 -1.23695780 0.0432727451 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 26 LI1_2nd_7:bin_000040 -1.22539158 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 27 AH1_2nd_19:bin_000055 -1.19379006 0.0224995923 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 28 AH1_2nd_18:bin_000040 -1.19089595 0.0223022247 d__Bacteria Actinomycetota c__Coriobacteriia Coriobacteriales Eggerthellaceae 29 LI1_2nd_4:bin_000003 -1.17899796 1.0000000000 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 30 LI1_2nd_7:bin_000016 -1.17838170 0.0145456364 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 31 LI1_2nd_8:bin_000070 -1.17097215 0.0168869815 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 32 LI1_2nd_10:bin_000017 -1.17083401 1.0000000000 d__Bacteria Chlamydiota c__Chlamydiia Chlamydiales Chlamydiaceae 33 AH1_2nd_10:bin_000010 -1.11980098 0.0493049200 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 34 AH1_2nd_7:bin_000070 -1.11680255 0.0257358548 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 35 AH1_2nd_7:bin_000060 -1.08947487 0.0685470015 d__Bacteria Bacillota_A c__Clostridia Eubacteriales Eubacteriaceae 36 AH1_2nd_10:bin_000049 -1.07227106 0.0608887913 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 37 AH1_2nd_11:bin_000004 -1.02816598 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 38 AH1_2nd_1:bin_000034 -1.01024051 0.0451494794 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 39 AH1_2nd_7:bin_000036 -0.97686458 0.0502387480 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 40 AH1_2nd_8:bin_000056 -0.97181876 0.1651921805 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 41 LI1_2nd_8:bin_000048 -0.96753496 0.0535034077 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 42 AH1_2nd_8:bin_000051 -0.95370663 0.0693984411 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 43 AH1_2nd_13:bin_000025 -0.93846629 0.2249741347 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 44 AH1_2nd_17:bin_000020 -0.93400689 0.0351897828 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 45 AH1_2nd_5:bin_000037 -0.87365532 0.1845172676 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 46 AH1_2nd_14:bin_000052 -0.86717449 0.0577734378 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 47 AH1_2nd_14:bin_000047 -0.81464027 0.0863462400 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 48 AH1_2nd_12:bin_000018 -0.81168355 0.0444836720 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 49 AH1_2nd_19:bin_000053 -0.79618315 0.1992914817 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 50 AH1_2nd_9:bin_000015 -0.79008673 0.0590367473 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 51 AH1_2nd_19:bin_000067 -0.74344044 0.1079809850 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 52 AH1_2nd_15:bin_000013 -0.73243588 0.0721427894 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 53 AH1_2nd_14:bin_000063 -0.70775818 0.0704567904 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 54 LI1_2nd_4:bin_000036 -0.68890291 0.1570833785 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 55 AH1_2nd_5:bin_000001 -0.68335413 0.1397978394 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 56 AH1_2nd_11:bin_000028 -0.68309727 0.1393442971 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 57 LI1_2nd_7:bin_000083 -0.67263526 0.0624737951 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 58 AH1_2nd_7:bin_000027 -0.63326145 0.0916304028 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 59 AH1_2nd_18:bin_000033 -0.58034911 0.0910414298 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 60 AH1_2nd_15:bin_000025 -0.54489587 0.2773138343 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 61 AH1_2nd_15:bin_000004 -0.52431642 0.1585491240 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 62 LI1_2nd_8:bin_000033 -0.49339480 0.1388733059 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 63 AH1_2nd_7:bin_000011 -0.48690688 0.2623426363 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 64 AH1_2nd_8:bin_000027 -0.48377973 0.2494601566 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 65 AH1_2nd_16:bin_000045 -0.42231723 0.2208254305 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 66 AH1_2nd_7:bin_000041 -0.39412285 0.2217449601 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 67 AH1_2nd_5:bin_000023 -0.39168227 0.2268615769 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 68 AH1_2nd_7:bin_000006 -0.36796245 0.3870562493 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 69 LI1_2nd_8:bin_000079 -0.35815945 0.3356688947 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 70 AH1_2nd_20:bin_000027 -0.34093411 1.0000000000 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 71 AH1_2nd_9:bin_000047 -0.32989275 0.3542231990 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 72 AH1_2nd_18:bin_000047 -0.32948170 0.5225406571 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 73 LI1_2nd_4:bin_000041 -0.32846165 0.4400601500 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 74 AH1_2nd_10:bin_000009 -0.28981655 0.4969603940 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 75 AH1_2nd_19:bin_000052 -0.28309357 1.0000000000 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Opitutales LL51 76 AH1_2nd_7:bin_000015 -0.27606569 0.5381996058 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 77 AH1_2nd_19:bin_000005 -0.27324854 0.5764297852 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 78 AH1_2nd_16:bin_000025 -0.17985833 0.6301171339 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 79 AH1_2nd_6:bin_000060 -0.16640238 1.0000000000 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 80 AH1_2nd_14:bin_000014 -0.13288977 0.6732892235 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 81 AH1_2nd_1:bin_000002 -0.10001016 0.8160008029 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 82 AH1_2nd_9:bin_000023 -0.09322763 0.7761682588 d__Bacteria Bacillota c__Bacilli RFN20 CAG-288 83 AH1_2nd_14:bin_000003 -0.08065136 0.8025648786 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 84 AH1_2nd_2:bin_000003 -0.07671427 0.8331360033 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 85 AH1_2nd_14:bin_000032 -0.07653252 0.7839900975 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 86 AH1_2nd_12:bin_000012 -0.06274415 0.9057514181 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 87 AH1_2nd_19:bin_000050 -0.05308835 0.8751060207 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 88 AH1_2nd_19:bin_000011 -0.05304033 0.8480588324 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 89 AH1_2nd_16:bin_000058 -0.01315875 0.9676245603 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 90 LI1_2nd_7:bin_000042 0.02510172 0.9570955639 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 91 AH1_2nd_17:bin_000030 0.02700583 0.9280456712 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 92 AH1_2nd_1:bin_000048 0.05860246 0.8608253440 d__Bacteria Bacillota_A c__Clostridia Peptostreptococcales Anaerovoracaceae 93 AH1_2nd_9:bin_000002 0.08996791 0.8783653508 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 94 AH1_2nd_15:bin_000043 0.09039449 0.7743586547 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 95 LI1_2nd_5:bin_000013 0.09954949 0.7714367370 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 96 AH1_2nd_18:bin_000039 0.11265387 0.7016435471 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 97 AH1_2nd_13:bin_000055 0.12595106 1.0000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 98 AH1_2nd_8:bin_000007 0.14324441 0.6584804512 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 99 LI1_2nd_7:bin_000009 0.14984005 0.6315252798 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 100 AH1_2nd_5:bin_000069 0.16883789 0.7076248426 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae genus species 1 Bacteroides 2 CAJLXD01 3 Proteus Proteus cibarius 4 MGBC136627 5 6 Bacteroides Bacteroides nordii 7 Ureaplasma 8 Odoribacter 9 10 MGBC133411 11 Enterocloster 12 13 Parabacteroides Parabacteroides distasonis 14 Parabacteroides 15 Parabacteroides Parabacteroides goldsteinii 16 NSJ-61 17 Lawsonia 18 Copromonas 19 Parabacteroides 20 Fusobacterium_A Fusobacterium_A ulcerans 21 22 Agrobacterium Agrobacterium tumefaciens_H 23 Lactococcus Lactococcus formosensis 24 Phascolarctobacterium Phascolarctobacterium faecium 25 RGIG6463 26 27 Parabacteroides 28 Eggerthella 29 Dielma 30 Clostridium_AQ 31 Bacteroides 32 33 CALURL01 34 Pseudoflavonifractor 35 Eubacterium 36 Parabacteroides 37 Hungatella_A 38 Dielma 39 Intestinimonas 40 Bacteroides 41 42 Bacteroides 43 44 Clostridium_Q 45 Pseudoflavonifractor 46 Bacteroides 47 Bacteroides 48 Alistipes 49 CAG-56 50 Desulfovibrio 51 Bacteroides Bacteroides ovatus 52 Ventrimonas 53 Blautia_A 54 55 56 Bacteroides 57 Pseudoflavonifractor 58 Copromonas 59 Beduini 60 Phocaeicola 61 UMGS1251 62 63 Lacrimispora 64 NSJ-61 65 Alistipes 66 67 Blautia 68 JALFVM01 69 Citrobacter_A Citrobacter_A amalonaticus 70 Desulfovibrio 71 Bacteroides 72 Parabacteroides 73 Clostridium_Q 74 Bilophila 75 76 CAZU01 77 Roseburia 78 Negativibacillus 79 Intestinimonas 80 Marseille-P3106 81 Fournierella 82 CAG-345 83 Hungatella_A 84 JAAYNV01 85 86 Helicobacter_J 87 88 Mailhella 89 Enterocloster 90 Parabacteroides_B 91 Bacteroides 92 93 Phocaeicola 94 Bacteroides 95 96 Alistipes 97 Bacteroides Bacteroides fragilis_B 98 Dielma 99 Anaerotruncus 100 Bacteroides [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 25 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT2 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT2 &gt;= 0.05), aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT1&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT2&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in FMT2 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 3 2 Bacillota_A 2 3 Bacillota 1 4 Cyanobacteriota 1 5 Pseudomonadota 1 Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 6 2 Bacteroidota 6 3 Bacillota 5 4 Pseudomonadota 2 5 Actinomycetota 1 6 Bacillota_B 1 7 Cyanobacteriota 1 8 Fusobacteriota 1 15.6.2.3 WC: FMT1 vs FMT2 Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;FMT1&quot;)%&gt;% count(phylum, name = &quot;FMT1&quot;) %&gt;% arrange(desc(FMT1)) structural_zeros %&gt;% filter(present==&quot;FMT2&quot;)%&gt;% count(phylum, name = &quot;FMT2&quot;) %&gt;% arrange(desc(FMT2)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_yo1s7v42w07149szjm6e, .table th.tinytable_css_yo1s7v42w07149szjm6e { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_34tjap8vey96xjj9i2hb, .table th.tinytable_css_34tjap8vey96xjj9i2hb { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum FMT2 FMT1 p__Bacillota_A 12 13 p__Bacteroidota 8 3 p__Bacillota 4 5 p__Pseudomonadota 4 1 p__Cyanobacteriota 3 0 p__Desulfobacterota 2 0 p__Verrucomicrobiota 2 0 p__Bacillota_B 1 0 p__Bacillota_C 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type == &quot;Warm_control&quot; &amp; time_point %in% c(&quot;FMT1&quot;, &quot;FMT2&quot;) )%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_wc_fmt1_FMT2 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;time_point&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_wc_fmt1_FMT2, file=&quot;data/ancom_rand_output_wc_fmt1_FMT2.RData&quot;) load(&quot;data/ancom_rand_output_wc_fmt1_FMT2.RData&quot;) ancom_rand_output_wc_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_f2nqhxk2ofigmfudh9ai, .table th.tinytable_css_f2nqhxk2ofigmfudh9ai { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_13m2k9ashwaqc8nziiyh, .table th.tinytable_css_13m2k9ashwaqc8nziiyh { border-bottom: solid #d3d8dc 0.1em; } lfc_time_pointFMT2 p_time_pointFMT2 order family genus 1.2537325 0.029011593 o__Gastranaerophilales f__Gastranaerophilaceae g__Limenecus -1.2446218 0.020897418 o__Fusobacteriales f__Fusobacteriaceae g__Fusobacterium_A -1.3152584 0.044543573 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -0.8821247 0.029330809 o__Lachnospirales f__Lachnospiraceae g__UMGS1251 1.0370118 0.034798957 o__Bacteroidales f__Marinifilaceae g__Odoribacter -1.4081841 0.011345341 o__Erysipelotrichales f__Coprobacillaceae g__Coprobacillus -1.1775932 0.019499011 o__Erysipelotrichales f__Erysipelotrichaceae g__ 1.3523455 0.016477167 o__Desulfovibrionales f__Desulfovibrionaceae g__Desulfovibrio 1.3457840 0.022072106 o__Christensenellales f__UBA1242 g__ -1.7017766 0.009626807 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 1.2803273 0.043789286 o__Acidaminococcales f__Acidaminococcaceae g__Phascolarctobacterium -1.3245581 0.011056770 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 1.3062379 0.019865974 o__Bacteroidales f__Marinifilaceae g__Odoribacter 1.3245459 0.013082061 o__UBA3830 f__UBA3830 g__ -1.5592978 0.025407224 o__Enterobacterales f__Enterobacteriaceae g__Proteus -1.0812434 0.013919048 o__Lachnospirales f__Lachnospiraceae g__Eisenbergiella -1.0099994 0.023380577 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.2817587 0.001367698 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.1580560 0.033213580 o__Chlamydiales f__Chlamydiaceae g__ 0.6998666 0.026257063 o__Christensenellales f__MGBC116941 g__MGBC116941 1.5483904 0.002502672 o__Christensenellales f__ g__ -0.9563076 0.039772629 o__Oscillospirales f__Ruminococcaceae g__Anaerotruncus 2.3773896 0.015636768 o__Lachnospirales f__Lachnospiraceae g__14-2 -0.9161289 0.047763615 o__Bacteroidales f__Rikenellaceae g__Alistipes -0.9044651 0.026634644 o__Oscillospirales f__Ruminococcaceae g__Fournierella 1.4541016 0.030212531 o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B -1.0124184 0.011201437 o__Lachnospirales f__Lachnospiraceae g__ -0.9084867 0.028859672 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -0.7064750 0.043580530 o__Lachnospirales f__Lachnospiraceae g__Copromonas -0.7714674 0.029067625 o__Oscillospirales f__Oscillospiraceae g__Pseudoflavonifractor 1.5835649 0.022738074 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.8505816 0.008115738 o__Christensenellales f__UBA3700 g__ -1.1895271 0.015730598 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.4689203 0.016641038 o__RF32 f__CAG-239 g__CAJLXD01 taxonomy &lt;- data.frame(physeq_genome_filtered@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_wc_fmt1_FMT2$res %&gt;% dplyr::select(taxon, lfc_time_pointFMT2, p_time_pointFMT2) %&gt;% #filter(p_time_pointFMT2 &lt; 0.05) %&gt;% dplyr::arrange(p_time_pointFMT2) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_time_pointFMT2) ancombc_rand_table_mag taxon lfc_time_pointFMT2 p_time_pointFMT2 domain phylum class order family 1 AH1_2nd_20:bin_000073 -4.3031988137 1.000000000 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 2 AH1_2nd_10:bin_000097 -2.9177223471 0.054500702 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 3 LI1_2nd_8:bin_000019 -1.8505816492 0.008115738 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 4 AH1_2nd_20:bin_000087 -1.7017766044 0.009626807 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 5 AH1_2nd_7:bin_000003 -1.5592978126 0.025407224 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 6 AH1_2nd_20:bin_000054 -1.5356765029 0.102478288 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 7 LI1_2nd_9:bin_000007 -1.4689203460 0.016641038 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 8 LI1_2nd_7:bin_000074 -1.4189759202 1.000000000 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 9 AH1_2nd_18:bin_000011 -1.4081841124 0.011345341 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 10 AH1_2nd_5:bin_000016 -1.3273362400 1.000000000 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 11 AH1_2nd_5:bin_000073 -1.3245580585 0.011056770 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 12 AH1_2nd_12:bin_000012 -1.3152584353 0.044543573 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 13 AH1_2nd_9:bin_000047 -1.2817587079 0.001367698 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 14 AH1_2nd_11:bin_000028 -1.2753871418 0.062137752 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 15 AH1_2nd_11:bin_000005 -1.2446217932 0.020897418 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 16 LI1_2nd_7:bin_000008 -1.1951326928 1.000000000 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 17 LI1_2nd_8:bin_000070 -1.1895270540 0.015730598 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 18 AH1_2nd_20:bin_000016 -1.1775932446 0.019499011 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 19 LI1_2nd_10:bin_000017 -1.1580559813 0.033213580 d__Bacteria Chlamydiota c__Chlamydiia Chlamydiales Chlamydiaceae 20 LI1_2nd_7:bin_000019 -1.1124294235 0.149183516 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 21 AH1_2nd_7:bin_000004 -1.0812434267 0.013919048 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 22 LI1_2nd_4:bin_000034 -1.0225200893 0.083242968 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 23 LI1_2nd_7:bin_000040 -1.0124183513 0.011201437 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 24 AH1_2nd_8:bin_000051 -1.0099993618 0.023380577 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 25 AH1_2nd_16:bin_000023 -0.9686001201 0.085015012 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 26 AH1_2nd_10:bin_000010 -0.9585647370 1.000000000 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 27 LI1_2nd_7:bin_000009 -0.9563075978 0.039772629 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 28 LI1_2nd_5:bin_000023 -0.9417497581 0.168204326 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 29 AH1_2nd_12:bin_000014 -0.9339127523 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 30 AH1_2nd_5:bin_000069 -0.9174656405 0.082673726 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 31 LI1_2nd_7:bin_000012 -0.9161289400 0.047763615 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 32 LI1_2nd_7:bin_000053 -0.9084866848 0.028859672 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 33 LI1_2nd_7:bin_000033 -0.9044651107 0.026634644 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 34 AH1_2nd_15:bin_000004 -0.8821246987 0.029330809 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 35 AH1_2nd_13:bin_000025 -0.8680263775 0.129315742 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 36 AH1_2nd_15:bin_000025 -0.8595055764 0.088893219 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 37 AH1_2nd_1:bin_000023 -0.8485566793 0.051298337 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 38 AH1_2nd_1:bin_000002 -0.8298286581 0.055203715 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 39 AH1_2nd_20:bin_000014 -0.7873319956 0.266163546 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 40 LI1_2nd_7:bin_000083 -0.7714673775 0.029067625 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 41 LI1_2nd_7:bin_000016 -0.7641368208 0.174649325 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 42 AH1_2nd_19:bin_000055 -0.7482250502 0.085497939 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 43 AH1_2nd_16:bin_000096 -0.7135495542 0.058885195 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 44 AH1_2nd_7:bin_000011 -0.7111546798 0.085242927 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 45 LI1_2nd_7:bin_000078 -0.7064750075 0.043580530 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 46 AH1_2nd_15:bin_000043 -0.6930651633 0.136980899 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 47 LI1_2nd_4:bin_000052 -0.6854029500 0.060051814 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 48 AH1_2nd_7:bin_000055 -0.6850687136 0.093901218 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 49 LI1_2nd_7:bin_000014 -0.6837208048 0.071808537 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales UBA1820 50 LI1_2nd_4:bin_000024 -0.6714280076 0.134833378 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 51 LI1_2nd_2:bin_000019 -0.6571501446 0.271447473 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 52 LI1_2nd_9:bin_000023 -0.5650076735 0.145237827 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 53 LI1_2nd_8:bin_000033 -0.5604123019 0.074391308 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 54 LI1_2nd_6:bin_000001 -0.5557966817 0.255666657 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 55 AH1_2nd_5:bin_000023 -0.5386669928 0.153233560 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 56 LI1_2nd_4:bin_000041 -0.4991025577 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 57 LI1_2nd_9:bin_000004 -0.4951898723 0.240711578 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 58 AH1_2nd_6:bin_000024 -0.4873530110 1.000000000 d__Bacteria Spirochaetota c__Brevinematia Brevinematales Brevinemataceae 59 AH1_2nd_6:bin_000046 -0.4829259194 0.390146506 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 60 AH1_2nd_7:bin_000070 -0.4798046567 0.111090695 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 61 AH1_2nd_12:bin_000015 -0.4686515200 0.304069497 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 62 LI1_2nd_4:bin_000003 -0.4551253434 0.250500125 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 63 AH1_2nd_9:bin_000002 -0.4142956179 0.355256761 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 64 AH1_2nd_16:bin_000020 -0.4072297079 0.297339585 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 65 AH1_2nd_16:bin_000019 -0.4040600464 0.412451844 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 66 AH1_2nd_15:bin_000001 -0.3959369539 0.378170117 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 67 AH1_2nd_7:bin_000041 -0.3720974135 0.233995336 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 68 AH1_2nd_17:bin_000020 -0.3428926657 0.374303135 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 69 LI1_2nd_7:bin_000042 -0.3142829889 0.438513826 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 70 AH1_2nd_18:bin_000033 -0.3066546643 0.300775791 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 71 AH1_2nd_7:bin_000005 -0.3006930108 1.000000000 d__Bacteria Bacillota_C c__Negativicutes Acidaminococcales Acidaminococcaceae 72 LI1_2nd_7:bin_000005 -0.2826849504 0.444682537 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 73 LI1_2nd_8:bin_000038 -0.2790072396 0.381747791 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 74 AH1_2nd_16:bin_000064 -0.2750516645 0.348255452 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 75 AH1_2nd_2:bin_000001 -0.2671760587 0.392465811 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 76 AH1_2nd_2:bin_000017 -0.2223616407 0.555717283 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 77 LI1_2nd_1:bin_000014 -0.2198453312 0.424958273 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 78 LI1_2nd_10:bin_000018 -0.2155836875 0.582444800 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 79 LI1_2nd_8:bin_000064 -0.2086630872 0.627760308 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 80 AH1_2nd_16:bin_000018 -0.1829930923 0.682269260 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 81 LI1_2nd_8:bin_000079 -0.1651060341 0.667068837 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 82 AH1_2nd_1:bin_000003 -0.1645008520 0.628676599 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 83 AH1_2nd_14:bin_000032 -0.1565957729 0.643080579 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 84 AH1_2nd_14:bin_000003 -0.1550162157 0.589569846 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 85 AH1_2nd_18:bin_000024 -0.1302382471 0.676600401 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 86 AH1_2nd_6:bin_000062 -0.1280137213 0.670802793 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 87 AH1_2nd_10:bin_000049 -0.1268983662 0.735417633 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 88 AH1_2nd_6:bin_000060 -0.1136227986 0.672787513 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 89 AH1_2nd_11:bin_000004 -0.0844829680 0.792385740 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 90 LI1_2nd_3:bin_000007 -0.0607462596 0.855862610 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 91 AH1_2nd_13:bin_000011 -0.0512873835 0.901434898 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 92 AH1_2nd_20:bin_000042 -0.0451252887 0.896928901 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 93 AH1_2nd_14:bin_000014 -0.0428104853 0.883994440 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 94 LI1_2nd_8:bin_000016 -0.0289267155 0.921023221 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 95 AH1_2nd_8:bin_000006 -0.0236498925 0.958712200 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 96 LI1_2nd_4:bin_000036 -0.0006469469 0.998617628 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 97 AH1_2nd_20:bin_000008 -0.0005517028 0.998506814 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 98 AH1_2nd_15:bin_000009 0.0469550383 0.905872496 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 99 LI1_2nd_8:bin_000048 0.0655156195 0.830117302 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 100 AH1_2nd_7:bin_000027 0.0702534166 0.834430212 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae genus species 1 Enterococcus Enterococcus sp002174455 2 Parabacteroides 3 4 Parabacteroides Parabacteroides gordonii 5 Proteus Proteus cibarius 6 NSJ-61 7 CAJLXD01 8 Escherichia Escherichia coli 9 Coprobacillus 10 Enterococcus_B Enterococcus_B pernyi 11 Parabacteroides Parabacteroides goldsteinii 12 Helicobacter_J 13 Bacteroides 14 Bacteroides 15 Fusobacterium_A Fusobacterium_A ulcerans 16 Breznakia 17 Bacteroides 18 19 20 Butyricimonas 21 Eisenbergiella 22 Bacteroides Bacteroides thetaiotaomicron 23 24 Bacteroides 25 26 CALURL01 27 Anaerotruncus 28 29 Velocimicrobium 30 Bacteroides 31 Alistipes 32 Bacteroides Bacteroides nordii 33 Fournierella 34 UMGS1251 35 36 Phocaeicola 37 38 Fournierella 39 Citrobacter Citrobacter portucalensis 40 Pseudoflavonifractor 41 Clostridium_AQ 42 Parabacteroides 43 Ruthenibacterium 44 Lacrimispora 45 Copromonas 46 Bacteroides 47 Enterocloster 48 Ureaplasma 49 Merdimorpha 50 51 Lacrimispora 52 JALFVM01 53 54 Salmonella Salmonella enterica 55 Blautia 56 Clostridium_Q 57 Scatousia 58 Brevinema 59 Bacteroides 60 Pseudoflavonifractor 61 Thomasclavelia 62 Dielma 63 Phocaeicola 64 Bilophila 65 Alistipes 66 Agrobacterium Agrobacterium tumefaciens_H 67 68 Clostridium_Q 69 Parabacteroides_B 70 Beduini 71 Phascolarctobacterium Phascolarctobacterium faecium 72 Ventrimonas 73 Clostridium_Q 74 Scatomorpha 75 76 Copromonas 77 78 Bacteroides 79 Parabacteroides 80 81 Citrobacter_A Citrobacter_A amalonaticus 82 Scatousia 83 84 Hungatella_A 85 Odoribacter 86 HGM05232 87 Parabacteroides 88 Intestinimonas 89 Hungatella_A 90 C-19 91 MGBC133411 92 Hungatella 93 Marseille-P3106 94 Rikenella 95 CAG-95 96 97 Alistipes 98 Acetatifactor 99 100 Copromonas [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 59 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_time_pointFMT2 &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_time_pointFMT2 &gt;= 0.05), aes(x = lfc_time_pointFMT2, y = -log10(p_time_pointFMT2)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT1&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_time_pointFMT2), y = 4, label = &quot;FMT2&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in FMT2 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Bacteroidota 4 3 Bacillota_C 1 4 Cyanobacteriota 1 5 Desulfobacterota 1 6 Pseudomonadota 1 Phyla of the significant MAGs in FMT1 ancombc_rand_table_mag%&gt;% filter(p_time_pointFMT2 &lt; 0.05) %&gt;% filter(lfc_time_pointFMT2&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 8 2 Bacteroidota 7 3 Bacillota 2 4 Pseudomonadota 2 5 Campylobacterota 1 6 Chlamydiota 1 7 Fusobacteriota 1 "],["what-are-the-differences-at-fmt1-between-groups.html", "Chapter 16 What are the differences at FMT1 between groups? 16.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 16.2 Is the GM of the intervention group still more similar to warm population after one week from FMT?", " Chapter 16 What are the differences at FMT1 between groups? 16.1 Is the GM of the intervention group more similar to warm population after one week from FMT? 16.1.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6077531 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3357429 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT1&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.9271773 16.1.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) ***p&lt;0.05 when comparing neutral beta diversity between Cold-control and Warm-control 16.1.3 Beta diversity Number of samples used samples_to_keep_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_post1 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT1&quot;) length(samples_to_keep_post1) [1] 26 Richness richness_post1 &lt;- as.matrix(beta_q0n$S) richness_post1 &lt;- as.dist(richness_post1[rownames(richness_post1) %in% samples_to_keep_post1, colnames(richness_post1) %in% samples_to_keep_post1]) betadisper(richness_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.01060 0.0052999 1.1619 999 0.337 Residuals 23 0.10491 0.0045613 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.640000 0.041 Cold_intervention 0.625388 0.426 Warm_control 0.055742 0.420078 adonis2(richness_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(richness_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_r71mkkq4a72qbwuphcmh, .table th.tinytable_css_r71mkkq4a72qbwuphcmh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_623njc12f2mumpsrvdwv, .table th.tinytable_css_623njc12f2mumpsrvdwv { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 1.195567 0.1448246 1.947534 0.001 Residual 23 7.059710 0.8551754 NA NA Total 25 8.255277 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(richness_post1),] pairwise &lt;- pairwise.adonis(richness_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_xqvo6hdux2gpdqi55udd, .table th.tinytable_css_xqvo6hdux2gpdqi55udd { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_cegxu2awrqojhg7uube2, .table th.tinytable_css_cegxu2awrqojhg7uube2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 0.5615418 1.729004 0.1033537 0.018 0.054 Cold_control vs Warm_control 1 0.8438429 2.793772 0.1486541 0.001 0.003 * Cold_intervention vs Warm_control 1 0.3734921 1.268929 0.0779971 0.128 0.384 Neutral neutral_post1 &lt;- as.matrix(beta_q1n$S) neutral_post1 &lt;- as.dist(neutral_post1[rownames(neutral_post1) %in% samples_to_keep_post1, colnames(neutral_post1) %in% samples_to_keep_post1]) betadisper(neutral_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002996 0.0014982 0.1374 999 0.885 Residuals 23 0.250747 0.0109020 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.86600 0.586 Cold_intervention 0.86589 0.815 Warm_control 0.55320 0.76648 adonis2(neutral_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(neutral_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_ssfgxdsplg5mb5zf0yqk, .table th.tinytable_css_ssfgxdsplg5mb5zf0yqk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_4jswfklgyh0b8ts1rmma, .table th.tinytable_css_4jswfklgyh0b8ts1rmma { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.395968 0.1900228 2.697931 0.001 Residual 23 5.950350 0.8099772 NA NA Total 25 7.346318 1.0000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(neutral_post1),] pairwise &lt;- pairwise.adonis(neutral_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_m2b6pqwm95cdsn4yhhay, .table th.tinytable_css_m2b6pqwm95cdsn4yhhay { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_88pb76gp2ihaxod7ivl4, .table th.tinytable_css_88pb76gp2ihaxod7ivl4 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 0.6051778 2.250849 0.13047758 0.011 0.033 . Cold_control vs Warm_control 1 1.0528902 4.143637 0.20570451 0.001 0.003 * Cold_intervention vs Warm_control 1 0.4150076 1.637268 0.09840968 0.045 0.135 Phylogenetic phylo_post1 &lt;- as.matrix(beta_q1p$S) phylo_post1 &lt;- as.dist(phylo_post1[rownames(phylo_post1) %in% samples_to_keep_post1, colnames(phylo_post1) %in% samples_to_keep_post1]) betadisper(phylo_post1, subset_meta_post1$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.00399 0.0019943 0.1213 999 0.929 Residuals 23 0.37812 0.0164399 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.72000 0.924 Cold_intervention 0.65272 0.800 Warm_control 0.91065 0.74852 adonis2(phylo_post1 ~ type, data = subset_meta_post1 %&gt;% arrange(match(Tube_code,labels(phylo_post1))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zdmt1pvoobfqpziowemh, .table th.tinytable_css_zdmt1pvoobfqpziowemh { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_y0ppsree4sdnpllq4z6w, .table th.tinytable_css_y0ppsree4sdnpllq4z6w { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.07451036 0.07059466 0.8735033 0.531 Residual 23 0.98095695 0.92940534 NA NA Total 25 1.05546731 1.00000000 NA NA subset_meta_post1_arrange &lt;- column_to_rownames(subset_meta_post1, &quot;Tube_code&quot;) subset_meta_post1_arrange&lt;-subset_meta_post1_arrange[labels(phylo_post1),] pairwise &lt;- pairwise.adonis(phylo_post1, subset_meta_post1_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_kl729radkztz0zcvctaf, .table th.tinytable_css_kl729radkztz0zcvctaf { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_2u9wjbuzi4lv97ga3qv0, .table th.tinytable_css_2u9wjbuzi4lv97ga3qv0 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 0.01842535 0.4144162 0.02688498 0.755 1.000 Cold_control vs Warm_control 1 0.05987967 1.7387847 0.09802164 0.141 0.423 Cold_intervention vs Warm_control 1 0.03212966 0.6477782 0.04139746 0.701 1.000 NMDS richness_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), labels=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), labels=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_post1 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_post1, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), labels=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 16.1.4 Differentially abundant MAGs 16.1.4.1 Warm vs Intervention Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;warm_control&quot;)%&gt;% count(phylum, name = &quot;warm_control&quot;) %&gt;% arrange(desc(warm_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;treatment&quot;) %&gt;% arrange(desc(treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_96adjajw9g47sj8pt6gl, .table th.tinytable_css_96adjajw9g47sj8pt6gl { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_72haih089nhuveubahz2, .table th.tinytable_css_72haih089nhuveubahz2 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } phylum treatment warm_control p__Bacillota_A 9 12 p__Bacteroidota 8 5 p__Bacillota 3 9 p__Desulfobacterota 2 1 p__Actinomycetota 1 1 p__Campylobacterota 1 0 p__Cyanobacteriota 1 4 p__Verrucomicrobiota 1 0 p__Pseudomonadota 0 5 p__Bacillota_C 0 2 p__Bacillota_B 0 1 p__Chlamydiota 0 1 p__Spirochaetota 0 1 physeq_FMT1 &lt;- subset_samples(physeq_all, type %in% c(&quot;Warm_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT1&quot;) physeq_FMT1 &lt;- prune_taxa(taxa_sums(physeq_FMT1)&gt;0, physeq_FMT1) ancom_rand_output_fmt1 = ancombc2(data = physeq_FMT1, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_fmt1, file=&quot;data/ancom_rand_output_fmt1.RData&quot;) load(&quot;data/ancom_rand_output_fmt1.RData&quot;) ancom_rand_output_fmt1$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% filter(p_typeTreatment &lt; 0.05) taxon lfc_typeTreatment p_typeTreatment 1 AH1_2nd_2:bin_000001 1.5624677 0.018919780 2 AH1_2nd_16:bin_000020 1.2543468 0.021313464 3 AH1_2nd_8:bin_000006 -1.4308506 0.038167012 4 AH1_2nd_1:bin_000023 1.6503345 0.002555181 5 AH1_2nd_16:bin_000058 1.3473611 0.022667050 6 AH1_2nd_2:bin_000017 1.7705419 0.025232075 7 LI1_2nd_8:bin_000019 -2.1022782 0.011143033 8 AH1_2nd_1:bin_000048 0.8195104 0.036621153 9 AH1_2nd_5:bin_000006 1.8686151 0.013960894 10 AH1_2nd_20:bin_000016 -1.4853429 0.017176614 11 LI1_2nd_4:bin_000003 -1.6188761 0.003401341 12 AH1_2nd_20:bin_000073 -1.9847277 0.049679526 taxonomy &lt;- data.frame(physeq_FMT1@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_fmt1$res %&gt;% dplyr::select(taxon, lfc_typeTreatment, p_typeTreatment) %&gt;% #filter(p_typeTreatment &lt; 0.05) %&gt;% dplyr::arrange(p_typeTreatment) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_typeTreatment) ancombc_rand_table_mag taxon lfc_typeTreatment p_typeTreatment domain phylum class order family 1 AH1_2nd_18:bin_000011 -2.468619132 1.000000000 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 2 LI1_2nd_8:bin_000019 -2.102278206 0.011143033 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 3 AH1_2nd_7:bin_000028 -2.066980233 1.000000000 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 4 AH1_2nd_20:bin_000040 -2.016595193 1.000000000 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 5 AH1_2nd_20:bin_000073 -1.984727713 0.049679526 d__Bacteria Bacillota c__Bacilli Lactobacillales Enterococcaceae 6 LI1_2nd_9:bin_000007 -1.739676190 0.050274812 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 7 LI1_2nd_4:bin_000003 -1.618876088 0.003401341 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 8 AH1_2nd_20:bin_000016 -1.485342916 0.017176614 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 9 AH1_2nd_8:bin_000006 -1.430850620 0.038167012 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 LI1_2nd_4:bin_000035 -1.302384706 0.077504423 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 11 LI1_2nd_4:bin_000052 -1.095822609 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 12 AH1_2nd_20:bin_000008 -1.080863538 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 13 AH1_2nd_14:bin_000015 -0.972644946 1.000000000 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 14 AH1_2nd_6:bin_000037 -0.966615209 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales UBA932 15 LI1_2nd_10:bin_000018 -0.961330225 0.088239747 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 16 LI1_2nd_5:bin_000013 -0.945686437 0.108889035 d__Bacteria Bacillota_A c__Clostridia Christensenellales DTU072 17 AH1_2nd_16:bin_000019 -0.787176315 0.072707666 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 18 LI1_2nd_7:bin_000005 -0.768967003 0.105154547 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 19 AH1_2nd_8:bin_000051 -0.763885833 0.073791871 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 20 AH1_2nd_19:bin_000053 -0.744486786 0.124962342 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 21 AH1_2nd_7:bin_000006 -0.709164924 0.103257991 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 22 AH1_2nd_11:bin_000005 -0.699464908 0.195445681 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 23 AH1_2nd_5:bin_000051 -0.680022523 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 24 LI1_2nd_4:bin_000034 -0.620525833 0.265900731 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 25 AH1_2nd_7:bin_000003 -0.585713837 0.229278417 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 26 AH1_2nd_20:bin_000087 -0.584752326 0.264599869 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 27 AH1_2nd_15:bin_000009 -0.584171326 0.202275187 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 28 AH1_2nd_1:bin_000015 -0.575993759 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 29 AH1_2nd_11:bin_000004 -0.534315885 0.183678672 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 30 LI1_2nd_4:bin_000001 -0.520630445 0.222899119 d__Bacteria Bacillota_A c__Clostridia Christensenellales 31 LI1_2nd_1:bin_000006 -0.479435438 0.225308382 d__Bacteria Bacillota_B c__Peptococcia Peptococcales Peptococcaceae 32 AH1_2nd_10:bin_000097 -0.467185752 0.238266594 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 33 LI1_2nd_7:bin_000014 -0.420073522 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Flavobacteriales UBA1820 34 LI1_2nd_4:bin_000024 -0.402299961 1.000000000 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 35 AH1_2nd_1:bin_000002 -0.394108912 0.311462398 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 36 AH1_2nd_6:bin_000060 -0.383122844 0.230582972 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 37 LI1_2nd_9:bin_000022 -0.377475898 0.420460574 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 38 AH1_2nd_20:bin_000024 -0.356763333 1.000000000 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 39 AH1_2nd_9:bin_000002 -0.344950056 0.580449613 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 40 LI1_2nd_7:bin_000001 -0.334715421 0.517219303 d__Bacteria Bacillota_A c__Clostridia Clostridiales Clostridiaceae 41 AH1_2nd_15:bin_000013 -0.330553191 0.479054141 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 42 AH1_2nd_15:bin_000004 -0.326943420 0.488207444 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 43 LI1_2nd_7:bin_000040 -0.322751187 0.377235176 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 44 LI1_2nd_7:bin_000053 -0.283084210 0.449047154 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 45 LI1_2nd_7:bin_000042 -0.274988264 0.433576175 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 46 AH1_2nd_15:bin_000043 -0.260022127 0.532495374 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 47 LI1_2nd_7:bin_000016 -0.209090913 0.711507543 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 48 AH1_2nd_10:bin_000049 -0.186053708 0.640421827 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 49 AH1_2nd_18:bin_000041 -0.184804264 1.000000000 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 50 LI1_2nd_3:bin_000015 -0.161108085 0.703967582 d__Bacteria Bacillota c__Bacilli Staphylococcales Staphylococcaceae 51 LI1_2nd_8:bin_000048 -0.153622459 0.681139385 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 52 LI1_2nd_5:bin_000023 -0.139496159 0.713969567 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 53 AH1_2nd_14:bin_000003 -0.122850629 0.684734837 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 54 AH1_2nd_6:bin_000062 -0.117928695 0.743341522 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 55 AH1_2nd_1:bin_000034 -0.116670875 1.000000000 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Erysipelotrichaceae 56 AH1_2nd_5:bin_000073 -0.115048283 0.811444529 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 57 AH1_2nd_15:bin_000025 -0.090872120 0.875723378 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 58 LI1_2nd_7:bin_000033 -0.078905778 0.833358470 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 59 AH1_2nd_18:bin_000024 -0.062307351 0.879116915 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 60 LI1_2nd_4:bin_000026 -0.031786071 0.917742179 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 61 AH1_2nd_5:bin_000001 -0.029490833 0.935209717 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 62 LI1_2nd_7:bin_000009 -0.028137018 0.940837245 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 63 LI1_2nd_4:bin_000010 -0.015677603 0.977118759 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 64 AH1_2nd_19:bin_000011 -0.010623100 0.982873696 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 65 AH1_2nd_12:bin_000008 -0.001881838 0.996769914 d__Bacteria Bacillota c__Bacilli Lactobacillales Streptococcaceae 66 AH1_2nd_7:bin_000041 0.017937612 0.952594613 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 67 AH1_2nd_1:bin_000039 0.044563259 0.902348925 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 68 AH1_2nd_1:bin_000003 0.049237156 0.911971117 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 69 AH1_2nd_5:bin_000069 0.078447184 0.861802396 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 70 AH1_2nd_16:bin_000096 0.081703659 0.824979035 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 71 AH1_2nd_19:bin_000072 0.102617543 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 72 AH1_2nd_7:bin_000011 0.106725078 0.775764395 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 73 AH1_2nd_19:bin_000043 0.129918069 1.000000000 d__Bacteria Bacillota_A c__Clostridia Christensenellales Pumilibacteraceae 74 LI1_2nd_8:bin_000038 0.161948148 0.630963978 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 75 AH1_2nd_16:bin_000064 0.167555439 0.658371975 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 76 AH1_2nd_13:bin_000037 0.184139491 0.592936949 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 77 AH1_2nd_17:bin_000020 0.197975079 0.607915540 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 78 AH1_2nd_16:bin_000023 0.219753070 0.721513147 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 79 AH1_2nd_20:bin_000006 0.229744759 0.541253110 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 80 LI1_2nd_5:bin_000037 0.253222244 0.477947227 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 81 LI1_2nd_8:bin_000070 0.262946401 0.512901463 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 82 LI1_2nd_7:bin_000083 0.282031662 0.432321056 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 83 LI1_2nd_7:bin_000019 0.288379908 0.502957351 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 84 LI1_2nd_4:bin_000041 0.292831194 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 85 AH1_2nd_20:bin_000042 0.318480936 0.383467843 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 86 LI1_2nd_4:bin_000036 0.330308297 0.438011632 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 87 AH1_2nd_16:bin_000018 0.336035409 0.469818754 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 88 AH1_2nd_5:bin_000004 0.340353456 0.371230374 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Acutalibacteraceae 89 AH1_2nd_10:bin_000050 0.374360982 0.301592236 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 90 AH1_2nd_14:bin_000032 0.375451250 0.324887265 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 91 AH1_2nd_11:bin_000028 0.375572635 0.438976492 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 92 LI1_2nd_7:bin_000078 0.393434454 0.296311532 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 93 AH1_2nd_1:bin_000005 0.401037354 0.413159988 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 94 LI1_2nd_9:bin_000023 0.427463842 0.283952071 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 95 AH1_2nd_19:bin_000055 0.433396794 0.291856464 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 96 AH1_2nd_9:bin_000047 0.448157684 0.234636950 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 97 AH1_2nd_14:bin_000063 0.456394141 0.365221042 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 98 AH1_2nd_7:bin_000055 0.467009305 0.271531000 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 99 AH1_2nd_10:bin_000001 0.496894956 1.000000000 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 100 AH1_2nd_16:bin_000033 0.502343930 0.302206437 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales genus species 1 Coprobacillus 2 3 NHYM01 4 Bilophila Bilophila wadsworthia 5 Enterococcus Enterococcus sp002174455 6 CAJLXD01 7 Dielma 8 9 CAG-95 10 Bacteroides Bacteroides sp900552405 11 Enterocloster 12 Alistipes 13 14 Egerieousia 15 Bacteroides 16 17 Alistipes 18 Ventrimonas 19 Bacteroides 20 CAG-56 21 JALFVM01 22 Fusobacterium_A Fusobacterium_A ulcerans 23 Bacteroides 24 Bacteroides Bacteroides thetaiotaomicron 25 Proteus Proteus cibarius 26 Parabacteroides Parabacteroides gordonii 27 Acetatifactor 28 MGBC136627 29 Hungatella_A 30 31 RGIG6463 32 Parabacteroides 33 Merdimorpha 34 35 Fournierella 36 Intestinimonas 37 Oscillibacter 38 CAZU01 39 Phocaeicola 40 Sarcina 41 Ventrimonas 42 UMGS1251 43 44 Bacteroides Bacteroides nordii 45 Parabacteroides_B 46 Bacteroides 47 Clostridium_AQ 48 Parabacteroides 49 Bacteroides 50 Staphylococcus Staphylococcus shinii 51 52 53 Hungatella_A 54 HGM05232 55 Dielma 56 Parabacteroides Parabacteroides goldsteinii 57 Phocaeicola 58 Fournierella 59 Odoribacter 60 Odoribacter 61 62 Anaerotruncus 63 Parabacteroides 64 Mailhella 65 Lactococcus Lactococcus formosensis 66 67 Odoribacter 68 Scatousia 69 Bacteroides 70 Ruthenibacterium 71 72 Lacrimispora 73 Protoclostridium 74 Clostridium_Q 75 Scatomorpha 76 Odoribacter 77 Clostridium_Q 78 79 Butyricimonas Butyricimonas sp900184685 80 Odoribacter 81 Bacteroides 82 Pseudoflavonifractor 83 Butyricimonas 84 Clostridium_Q 85 Hungatella 86 87 88 89 Bacteroides Bacteroides intestinalis 90 91 Bacteroides 92 Copromonas 93 94 JALFVM01 95 Parabacteroides 96 Bacteroides 97 Blautia_A 98 Ureaplasma 99 Limenecus 100 [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 108 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_typeTreatment &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_typeTreatment, y = -log10(p_typeTreatment), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_typeTreatment &gt;= 0.05), aes(x = lfc_typeTreatment, y = -log10(p_typeTreatment)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_typeTreatment), y = 4, label = &quot;Cold-intervention&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_typeTreatment), y = 4, label = &quot;Warm-control&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in warm control ancombc_rand_table_mag%&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% filter(lfc_typeTreatment&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Bacillota_C 1 3 Bacteroidota 1 4 Desulfobacterota 1 Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(p_typeTreatment &lt; 0.05) %&gt;% filter(lfc_typeTreatment&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota 3 2 Bacillota_A 2 16.1.4.2 Intervention vs cold control Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Cold_control&quot;)%&gt;% count(phylum, name = &quot;Cold_control&quot;) %&gt;% arrange(desc(Cold_control)) structural_zeros %&gt;% filter(present==&quot;Cold_intervention&quot;)%&gt;% count(phylum, name = &quot;Cold_intervention&quot;) %&gt;% arrange(desc(Cold_intervention)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_h3tbkcbmca78ey7k7s9a, .table th.tinytable_css_h3tbkcbmca78ey7k7s9a { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_h246ci3wsudlk50s81pq, .table th.tinytable_css_h246ci3wsudlk50s81pq { border-bottom: solid #d3d8dc 0.1em; } phylum Cold_intervention Cold_control p__Bacteroidota 0 10 p__Bacillota_A 0 4 p__Pseudomonadota 0 4 p__Bacillota 0 3 p__Desulfobacterota 0 3 p__Bacillota_C 0 2 p__Cyanobacteriota 0 2 p__Actinomycetota 0 1 p__Chlamydiota 0 1 physeq_FMT1_cold &lt;- subset_samples(physeq_all, type %in% c(&quot;Cold_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT1&quot;) physeq_FMT1_cold &lt;- prune_taxa(taxa_sums(physeq_FMT1_cold)&gt;0, physeq_FMT1_cold) ancom_rand_output_cold = ancombc2(data = physeq_FMT1_cold, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cold, file=&quot;data/ancom_rand_output_cold.RData&quot;) load(&quot;data/ancom_rand_output_cold.RData&quot;) ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeCold_intervention, p_typeCold_intervention) %&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,8,9,10) %&gt;% tt() .table td.tinytable_css_gmmfs70zsgs90rnmfzu3, .table th.tinytable_css_gmmfs70zsgs90rnmfzu3 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_4guqqztnq3smw6el744k, .table th.tinytable_css_4guqqztnq3smw6el744k { border-bottom: solid #d3d8dc 0.1em; } lfc_typeCold_intervention p_typeCold_intervention family genus species -1.2669085 0.016056297 f__Bacteroidaceae g__Bacteroides s__ -1.0321400 0.038302392 f__Bacteroidaceae g__Bacteroides s__ -0.9895362 0.028180995 f__Tannerellaceae g__Parabacteroides s__ -1.5258430 0.008367883 f__Tannerellaceae g__Parabacteroides s__ -1.5870692 0.009614235 f__Enterobacteriaceae g__Proteus s__Proteus cibarius -0.9815247 0.034489035 f__Oscillospiraceae g__Intestinimonas s__ -1.3260451 0.031388532 f__Lachnospiraceae g__JALFVM01 s__ -1.2001345 0.030460336 f__Lachnospiraceae g__Ventrimonas s__ -1.7676743 0.021740985 f__UBA3700 g__ s__ -0.9341728 0.023128929 f__Mycoplasmoidaceae g__Ureaplasma s__ 1.3651255 0.049425230 f__Enterococcaceae g__Enterococcus s__Enterococcus sp002174455 taxonomy &lt;- data.frame(physeq_FMT1_cold@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_cold$res %&gt;% dplyr::select(taxon, lfc_typeCold_intervention, p_typeCold_intervention) %&gt;% #filter(p_typeTreatment &lt; 0.05) %&gt;% dplyr::arrange(p_typeCold_intervention) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_typeCold_intervention) colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_typeCold_intervention &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_typeCold_intervention, y = -log10(p_typeCold_intervention), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_typeCold_intervention &gt;= 0.05), aes(x = lfc_typeCold_intervention, y = -log10(p_typeCold_intervention)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 2.5)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_typeCold_intervention), y = 2.5, label = &quot;Cold-control&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_typeCold_intervention), y = 2.5, label = &quot;Cold-intervention&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% filter(lfc_typeCold_intervention&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% filter(lfc_typeCold_intervention&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 4 2 Bacteroidota 4 3 Bacillota 1 4 Pseudomonadota 1 16.1.4.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT1&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_control 0.373 0.0247 2 Cold_intervention 0.353 0.0186 3 Warm_control 0.372 0.0367 MCI_tm5_ele &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT1&quot;) shapiro.test(MCI_tm5_ele$value)#normality test Shapiro-Wilk normality test data: MCI_tm5_ele$value W = 0.92343, p-value = 0.05415 res.aov &lt;- aov(value ~ type, data = MCI_tm5_ele)#anova test summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00216 0.0010798 1.371 0.274 Residuals 23 0.01811 0.0007875 Functional differences CC and CI element_gift %&gt;% filter(type %in% c(&quot;Cold_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CI and WC element_gift %&gt;% filter(type %in% c(&quot;Warm_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Warm_control&quot;, &quot;Cold_control&quot;) &amp; time_point == &quot;FMT1&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; 16.2 Is the GM of the intervention group still more similar to warm population after one week from FMT? 16.2.1 Shapiro test alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;richness&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.1683943 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;neutral&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.6310339 alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point ==&quot;FMT2&quot;) %&gt;% filter(metric==&quot;phylogenetic&quot;) %&gt;% summarize(shapiro_p_value = shapiro.test(value)$p.value) %&gt;% pull(shapiro_p_value) [1] 0.3447937 16.2.2 Alpha diversity alpha_div %&gt;% pivot_longer(-sample, names_to = &quot;metric&quot;, values_to = &quot;value&quot;) %&gt;% left_join(., sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% mutate(metric=factor(metric,levels=c(&quot;richness&quot;,&quot;neutral&quot;,&quot;phylogenetic&quot;))) %&gt;% ggplot(aes(y = value, x = type, group=type, color=type, fill=type)) + geom_boxplot(outlier.shape = NA) + geom_jitter(alpha=0.5) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;, &quot;#76b183&quot;)) + scale_fill_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;,&quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-control&quot;,&quot;Warm-control&quot;, &quot;Cold-intervention&quot;), values=c(&quot;#4477AA50&quot;,&quot;#d57d2c50&quot;,&quot;#76b18350&quot;)) + scale_x_discrete(labels = c(&quot;Control&quot; = &quot;Cold-Cold&quot;, &quot;Hot_control&quot; = &quot;Hot-Hot&quot;, &quot;Treatment&quot; = &quot;Cold-Hot&quot;)) + facet_wrap(. ~ metric,scales = &quot;free&quot;) + coord_cartesian(xlim = c(1, NA)) + stat_compare_means(method=&quot;t.test&quot;,size=3, label.x=.7) + theme_classic() + theme( strip.background = element_blank(), panel.grid.minor.x = element_line(size = .1, color = &quot;grey&quot;), axis.title.x = element_blank(), axis.title.y = element_text(size=10), axis.text.x = element_blank(), # Increase plot size plot.title = element_text(size = 10), axis.text = element_text(size = 8), axis.title = element_text(size = 8) ) + ylab(&quot;Alpha diversity&quot;) ***p&lt;0.05 when comparing richness and neutral beta diversity between Cold-control and Cold-intervention 16.2.3 Beta diversity Number of samples used samples_to_keep_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) %&gt;% select(Tube_code) %&gt;% pull() subset_meta_FMT2 &lt;- sample_metadata %&gt;% filter(time_point == &quot;FMT2&quot;) length(samples_to_keep_FMT2) [1] 27 Richness richness_FMT2 &lt;- as.matrix(beta_q0n$S) richness_FMT2 &lt;- as.dist(richness_FMT2[rownames(richness_FMT2) %in% samples_to_keep_FMT2, colnames(richness_FMT2) %in% samples_to_keep_FMT2]) betadisper(richness_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.003043 0.0015214 0.2578 999 0.78 Residuals 24 0.141630 0.0059013 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.51000 0.937 Cold_intervention 0.50455 0.560 Warm_control 0.93628 0.54043 adonis2(richness_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(richness_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_zd9w1tep26vyai06v03m, .table th.tinytable_css_zd9w1tep26vyai06v03m { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_jxurba4chi69b7iwglu8, .table th.tinytable_css_jxurba4chi69b7iwglu8 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.504341 0.1967776 2.939822 0.001 Residual 24 6.140538 0.8032224 NA NA Total 26 7.644879 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(richness_FMT2),] pairwise &lt;- pairwise.adonis(richness_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_if4oo624uutubhiosf8o, .table th.tinytable_css_if4oo624uutubhiosf8o { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_5eu52vfuwtrq9amargvq, .table th.tinytable_css_5eu52vfuwtrq9amargvq { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 0.6463814 2.560441 0.1379515 0.002 0.006 * Cold_control vs Warm_control 1 1.1305044 4.268317 0.2105906 0.001 0.003 * Cold_intervention vs Warm_control 1 0.4796256 1.916520 0.1069694 0.001 0.003 * Neutral neutral_FMT2 &lt;- as.matrix(beta_q1n$S) neutral_FMT2 &lt;- as.dist(neutral_FMT2[rownames(neutral_FMT2) %in% samples_to_keep_FMT2, colnames(neutral_FMT2) %in% samples_to_keep_FMT2]) betadisper(neutral_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.005365 0.0026827 0.309 999 0.723 Residuals 24 0.208332 0.0086805 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.65600 0.758 Cold_intervention 0.64640 0.450 Warm_control 0.75233 0.46107 adonis2(neutral_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(neutral_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_wkh635574xeno73igfrk, .table th.tinytable_css_wkh635574xeno73igfrk { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_cpj65trdjwzg801dn3z9, .table th.tinytable_css_cpj65trdjwzg801dn3z9 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } term df SumOfSqs R2 statistic p.value Model 2 1.923807 0.2603795 4.224537 0.001 Residual 24 5.464666 0.7396205 NA NA Total 26 7.388473 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(neutral_FMT2),] pairwise &lt;- pairwise.adonis(neutral_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_hp8r8cyu8ib8fvqwrxk7, .table th.tinytable_css_hp8r8cyu8ib8fvqwrxk7 { border-bottom: solid #d3d8dc 0.1em; } .table td.tinytable_css_9e8azqvf35ehoslqru7v, .table th.tinytable_css_9e8azqvf35ehoslqru7v { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 1.0227481 4.648335 0.2251191 0.001 0.003 * Cold_control vs Warm_control 1 1.3619424 5.771031 0.2650785 0.001 0.003 * Cold_intervention vs Warm_control 1 0.5010202 2.206532 0.1211945 0.003 0.009 * Phylogenetic phylo_FMT2 &lt;- as.matrix(beta_q1p$S) phylo_FMT2 &lt;- as.dist(phylo_FMT2[rownames(phylo_FMT2) %in% samples_to_keep_FMT2, colnames(phylo_FMT2) %in% samples_to_keep_FMT2]) betadisper(phylo_FMT2, subset_meta_FMT2$type) %&gt;% permutest(., pairwise = TRUE) Permutation test for homogeneity of multivariate dispersions Permutation: free Number of permutations: 999 Response: Distances Df Sum Sq Mean Sq F N.Perm Pr(&gt;F) Groups 2 0.002880 0.0014398 0.3483 999 0.712 Residuals 24 0.099207 0.0041336 Pairwise comparisons: (Observed p-value below diagonal, permuted p-value above diagonal) Cold_control Cold_intervention Warm_control Cold_control 0.60700 0.799 Cold_intervention 0.60817 0.421 Warm_control 0.79696 0.41749 adonis2(phylo_FMT2 ~ type, data = subset_meta_FMT2 %&gt;% arrange(match(Tube_code,labels(phylo_FMT2))), permutations = 999) %&gt;% broom::tidy() %&gt;% tt() .table td.tinytable_css_t6nbdo7d84yi1ru063cc, .table th.tinytable_css_t6nbdo7d84yi1ru063cc { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_81oay264tykiiffk4ofr, .table th.tinytable_css_81oay264tykiiffk4ofr { border-bottom: solid #d3d8dc 0.1em; } term df SumOfSqs R2 statistic p.value Model 2 0.1594363 0.2042241 3.079623 0.001 Residual 24 0.6212564 0.7957759 NA NA Total 26 0.7806927 1.0000000 NA NA subset_meta_FMT2_arrange &lt;- column_to_rownames(subset_meta_FMT2, &quot;Tube_code&quot;) subset_meta_FMT2_arrange&lt;-subset_meta_FMT2_arrange[labels(phylo_FMT2),] pairwise &lt;- pairwise.adonis(phylo_FMT2, subset_meta_FMT2_arrange$type, perm=999) pairwise%&gt;% tt() .table td.tinytable_css_6e3ag5ue2nzn5jwmioxz, .table th.tinytable_css_6e3ag5ue2nzn5jwmioxz { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_24lzlmmjs3n2udqgfxh1, .table th.tinytable_css_24lzlmmjs3n2udqgfxh1 { border-bottom: solid #d3d8dc 0.1em; } pairs Df SumsOfSqs F.Model R2 p.value p.adjusted sig Cold_control vs Cold_intervention 1 0.05927454 2.382025 0.1295845 0.025 0.075 Cold_control vs Warm_control 1 0.11081709 4.043656 0.2017424 0.001 0.003 * Cold_intervention vs Warm_control 1 0.06906280 2.722460 0.1454115 0.002 0.006 * NMDS richness_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code)) %&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Richness beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) neutral_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Control&quot;, &quot;Hot_control&quot;, &quot;Treatment&quot;), labels=c(&quot;Cold-Cold&quot;, &quot;Hot-Hot&quot;, &quot;Cold-Hot&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y = &quot;NMDS2&quot;, x=&quot;NMDS1 \\n Neutral beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) phylo_FMT2 %&gt;% metaMDS(.,trymax = 500, k=2, verbosity=FALSE, trace = FALSE) %&gt;% scores() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(subset_meta_FMT2, by = join_by(sample == Tube_code))%&gt;% group_by(type) %&gt;% mutate(x_cen = mean(NMDS1, na.rm = TRUE)) %&gt;% mutate(y_cen = mean(NMDS2, na.rm = TRUE)) %&gt;% ungroup() %&gt;% ggplot(., aes(x=NMDS1,y=NMDS2, color=type)) + scale_color_manual(name=&quot;Type&quot;, breaks=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), labels=c(&quot;Cold_control&quot;, &quot;Warm_control&quot;, &quot;Cold_intervention&quot;), values=c(&quot;#4477AA&quot;,&quot;#d57d2c&quot;,&quot;#76b183&quot;)) + geom_point(size=2) + geom_segment(aes(x=x_cen, y=y_cen, xend=NMDS1, yend=NMDS2), alpha=0.2) + labs(y= element_blank (), x=&quot;NMDS1 \\n Phylogenetic beta diversity&quot;) + theme_classic() + theme(legend.position=&quot;none&quot;) 16.2.4 Differentially abundant MAGs 16.2.4.1 Warm vs Intervention Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Warm_control&quot;)%&gt;% count(phylum, name = &quot;Warm_control&quot;) %&gt;% arrange(desc(Warm_control)) structural_zeros %&gt;% filter(present==&quot;treatment&quot;)%&gt;% count(phylum, name = &quot;treatment&quot;) %&gt;% arrange(desc(treatment)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_wsjzi7swroc5ys7cnern, .table th.tinytable_css_wsjzi7swroc5ys7cnern { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_59pgqi1176dfn2akgcf9, .table th.tinytable_css_59pgqi1176dfn2akgcf9 { border-bottom: solid #d3d8dc 0.1em; } phylum treatment Warm_control p__Bacillota_A 21 12 p__Bacteroidota 12 8 p__Pseudomonadota 10 3 p__Bacillota 9 12 p__Desulfobacterota 2 1 p__Verrucomicrobiota 2 1 p__Bacillota_C 1 1 p__Bacillota_B 0 2 p__Actinomycetota 0 1 p__Chlamydiota 0 1 p__Cyanobacteriota 0 1 physeq_FMT2 &lt;- subset_samples(physeq_all, type %in% c(&quot;Warm_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT2&quot;) physeq_FMT2 &lt;- prune_taxa(taxa_sums(physeq_FMT2)&gt;0, physeq_FMT2) ancom_rand_output_fmt2 = ancombc2(data = physeq_FMT2, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_fmt2, file=&quot;data/ancom_rand_output_fmt2.RData&quot;) load(&quot;data/ancom_rand_output_fmt2.RData&quot;) ancom_rand_output_fmt2$res %&gt;% dplyr::select(taxon, lfc_typeWarm_control, p_typeWarm_control) %&gt;% filter(p_typeWarm_control &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_y92xzic9vqyup8jvd3h0, .table th.tinytable_css_y92xzic9vqyup8jvd3h0 { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_wcp9b3ljr1oc2xeomgr0, .table th.tinytable_css_wcp9b3ljr1oc2xeomgr0 { border-bottom: solid #d3d8dc 0.1em; } lfc_typeWarm_control p_typeWarm_control order family genus 1.0986631 0.008257166 o__Bacteroidales f__Marinifilaceae g__Odoribacter 2.1266183 0.003547850 o__Bacteroidales f__UBA932 g__Egerieousia 1.2457029 0.037373528 o__Bacteroidales f__Rikenellaceae g__Alistipes -1.2413986 0.003465383 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.2243548 0.049632999 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.2755049 0.014288374 o__Bacteroidales f__Bacteroidaceae g__ -1.0012978 0.033042273 o__Bacteroidales f__Tannerellaceae g__Parabacteroides 1.9365157 0.016784919 o__Bacteroidales f__Tannerellaceae g__Parabacteroides_B 0.9592330 0.019166614 o__Flavobacteriales f__UBA1820 g__Merdimorpha 2.2000227 0.011786414 o__Campylobacterales f__Helicobacteraceae g__NHYM01 0.9623667 0.029431823 o__RF32 f__CAG-239 g__MGBC133411 1.1529198 0.017988759 o__UBA3830 f__UBA3830 g__ -0.8217914 0.018866667 o__Desulfovibrionales f__Desulfovibrionaceae g__ -0.6626805 0.042840756 o__Oscillospirales f__Oscillospiraceae g__Scatomorpha 0.7492824 0.042126501 o__Oscillospirales f__Acutalibacteraceae g__ 2.4540625 0.012874684 o__TANB77 f__CAG-508 g__CAG-269 1.9523378 0.025289328 o__Lachnospirales f__Lachnospiraceae g__Roseburia -1.1939038 0.017347548 o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 1.7303161 0.014764672 o__Lachnospirales f__Lachnospiraceae g__Kineothrix 1.0731496 0.017241262 o__Lachnospirales f__Lachnospiraceae g__CAG-95 1.3651435 0.001729035 o__Lachnospirales f__Lachnospiraceae g__Ventrimonas -1.0901067 0.024938027 o__Lachnospirales f__Lachnospiraceae g__Hungatella_A 0.8655665 0.023655198 o__Lachnospirales f__Lachnospiraceae g__Enterocloster 1.1267733 0.007536627 o__Christensenellales f__UBA3700 g__ 1.3548539 0.009640215 o__Christensenellales f__DTU072 g__ 1.5598200 0.002033827 o__Christensenellales f__ g__ 1.0545278 0.004058541 o__Christensenellales f__MGBC116941 g__MGBC116941 0.8834724 0.041353093 o__Acidaminococcales f__Acidaminococcaceae g__Phascolarctobacterium 1.3414551 0.010928692 o__Erysipelotrichales f__Erysipelotrichaceae g__Clostridium_AQ 1.0888743 0.015565569 o__Erysipelotrichales f__Erysipelotrichaceae g__Dielma taxonomy &lt;- data.frame(physeq_FMT2@tax_table) %&gt;% rownames_to_column(., &quot;taxon&quot;) %&gt;% mutate_at(vars(order, phylum, family, genus, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) ancombc_rand_table_mag &lt;- ancom_rand_output_fmt2$res %&gt;% dplyr::select(taxon, lfc_typeWarm_control, p_typeWarm_control) %&gt;% #filter(p_typeTreatment &lt; 0.05) %&gt;% dplyr::arrange(p_typeWarm_control) %&gt;% merge(., taxonomy, by=&quot;taxon&quot;) %&gt;% mutate_at(vars(phylum, species), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;))%&gt;% dplyr::arrange(lfc_typeWarm_control) ancombc_rand_table_mag taxon lfc_typeWarm_control p_typeWarm_control domain phylum class order family 1 AH1_2nd_7:bin_000003 -2.2803288034 1.000000000 d__Bacteria Pseudomonadota c__Gammaproteobacteria Enterobacterales Enterobacteriaceae 2 LI1_2nd_2:bin_000019 -1.8578359213 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 3 AH1_2nd_10:bin_000010 -1.7308220283 1.000000000 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 4 AH1_2nd_11:bin_000028 -1.2413986403 0.003465383 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 5 AH1_2nd_2:bin_000003 -1.1939037718 0.017347548 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 6 AH1_2nd_14:bin_000003 -1.0901067326 0.024938027 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 7 AH1_2nd_10:bin_000097 -1.0012977982 0.033042273 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 8 LI1_2nd_1:bin_000014 -0.8217914161 0.018866667 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 9 AH1_2nd_7:bin_000004 -0.7979004667 0.143871191 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 10 AH1_2nd_13:bin_000025 -0.7648426111 0.090983447 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 11 AH1_2nd_16:bin_000023 -0.7626045479 0.084696761 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 12 LI1_2nd_7:bin_000019 -0.7191183598 0.109038507 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 13 AH1_2nd_13:bin_000055 -0.7120212987 0.085570321 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 14 AH1_2nd_11:bin_000004 -0.6912002660 0.090435911 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 15 AH1_2nd_16:bin_000064 -0.6626805417 0.042840756 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 16 AH1_2nd_1:bin_000023 -0.6049875777 0.093939608 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 17 AH1_2nd_20:bin_000003 -0.5998648910 1.000000000 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 18 AH1_2nd_20:bin_000024 -0.5852228105 0.127503349 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 19 LI1_2nd_8:bin_000048 -0.5648349227 0.156578893 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 20 AH1_2nd_20:bin_000075 -0.5197692401 0.116257085 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 21 AH1_2nd_20:bin_000037 -0.5188747009 1.000000000 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 22 LI1_2nd_7:bin_000078 -0.5105694945 0.156722181 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 23 LI1_2nd_7:bin_000033 -0.4505165765 0.253611023 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 24 AH1_2nd_7:bin_000055 -0.4050200088 0.271835436 d__Bacteria Bacillota c__Bacilli Mycoplasmatales Mycoplasmoidaceae 25 AH1_2nd_2:bin_000001 -0.3941910754 0.198003700 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 26 AH1_2nd_8:bin_000051 -0.3636571466 0.272422520 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 27 AH1_2nd_16:bin_000096 -0.3421466237 0.245629494 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 28 AH1_2nd_20:bin_000008 -0.3381435123 0.330610429 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 29 AH1_2nd_9:bin_000047 -0.3086784742 0.314274197 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 30 AH1_2nd_10:bin_000050 -0.2773937836 0.404330535 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 31 AH1_2nd_9:bin_000002 -0.2704345441 0.476449776 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 32 AH1_2nd_5:bin_000023 -0.2232154761 0.489217393 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 33 LI1_2nd_7:bin_000009 -0.2175544620 0.465247400 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 34 LI1_2nd_4:bin_000026 -0.2015276951 0.587400965 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 35 AH1_2nd_20:bin_000053 -0.1922809258 0.561866318 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA1242 36 AH1_2nd_12:bin_000019 -0.1767417662 0.598993692 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 37 AH1_2nd_18:bin_000039 -0.1523749347 0.567397199 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 38 AH1_2nd_20:bin_000046 -0.1370810956 1.000000000 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 39 LI1_2nd_3:bin_000003 -0.1292457615 0.687317187 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 40 AH1_2nd_18:bin_000033 -0.1245454923 0.638197168 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 41 AH1_2nd_12:bin_000014 -0.1212304889 1.000000000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 42 AH1_2nd_12:bin_000018 -0.1175366205 0.660321150 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 43 LI1_2nd_7:bin_000083 -0.0825981557 0.771203501 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 44 AH1_2nd_14:bin_000014 -0.0823643449 0.757323499 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 45 AH1_2nd_15:bin_000009 -0.0823379416 0.794475382 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 46 AH1_2nd_1:bin_000039 -0.0666263890 0.814092036 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 47 AH1_2nd_1:bin_000002 -0.0333821451 0.911181224 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Ruminococcaceae 48 LI1_2nd_8:bin_000070 -0.0105005755 0.983178065 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 49 AH1_2nd_10:bin_000049 -0.0079859397 0.982996137 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 50 AH1_2nd_20:bin_000087 0.0004392838 0.999204036 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 51 AH1_2nd_7:bin_000070 0.0079928926 0.976116238 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 52 AH1_2nd_7:bin_000011 0.0110174758 0.974896535 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 53 AH1_2nd_6:bin_000017 0.0164177858 1.000000000 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 54 AH1_2nd_15:bin_000025 0.0253637766 0.950829746 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 55 LI1_2nd_8:bin_000016 0.0253776594 0.924462696 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 56 LI1_2nd_8:bin_000019 0.0270709759 0.953099209 d__Bacteria Bacillota_A c__Clostridia Christensenellales UBA3700 57 AH1_2nd_13:bin_000037 0.0289110453 0.918718587 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 58 LI1_2nd_9:bin_000007 0.0400638901 0.905980535 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 59 AH1_2nd_10:bin_000001 0.0462369770 0.904103065 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 60 AH1_2nd_14:bin_000032 0.0556284513 0.843699837 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales Massilibacillaceae 61 AH1_2nd_16:bin_000058 0.0700132511 0.849072205 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 62 AH1_2nd_15:bin_000001 0.0752189620 0.819081083 d__Bacteria Pseudomonadota c__Alphaproteobacteria Rhizobiales Rhizobiaceae 63 AH1_2nd_19:bin_000055 0.0782790019 0.856069795 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 64 AH1_2nd_19:bin_000050 0.0891114203 0.772430371 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 65 AH1_2nd_16:bin_000020 0.0933336277 0.843941780 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 66 LI1_2nd_7:bin_000042 0.1099917557 0.804804434 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 67 LI1_2nd_5:bin_000023 0.1292818207 0.651382011 d__Bacteria Pseudomonadota c__Alphaproteobacteria UBA3830 68 LI1_2nd_7:bin_000053 0.1339723530 0.745853291 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 69 LI1_2nd_7:bin_000051 0.1353891741 0.677893746 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 70 AH1_2nd_19:bin_000031 0.1396464716 0.713807396 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 71 AH1_2nd_11:bin_000008 0.1420190654 0.729207622 d__Bacteria Verrucomicrobiota c__Verrucomicrobiae Verrucomicrobiales Akkermansiaceae 72 AH1_2nd_7:bin_000027 0.1449592209 0.606000300 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 73 LI1_2nd_8:bin_000033 0.1475925200 0.580971047 d__Bacteria Bacillota_C c__Negativicutes Selenomonadales 74 AH1_2nd_20:bin_000027 0.1527163108 0.720773873 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 75 AH1_2nd_15:bin_000043 0.1546352379 0.692626786 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 76 LI1_2nd_4:bin_000041 0.1808098501 0.545657323 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 77 AH1_2nd_14:bin_000063 0.1838150654 0.554431000 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 78 AH1_2nd_5:bin_000073 0.1838476133 0.716419259 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 79 LI1_2nd_9:bin_000022 0.1960414198 0.459695541 d__Bacteria Bacillota_A c__Clostridia Oscillospirales Oscillospiraceae 80 LI1_2nd_4:bin_000010 0.2047942818 0.658684407 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 81 AH1_2nd_18:bin_000024 0.2150177915 0.522491934 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Marinifilaceae 82 AH1_2nd_12:bin_000012 0.2438899759 0.566456179 d__Bacteria Campylobacterota c__Campylobacteria Campylobacterales Helicobacteraceae 83 AH1_2nd_1:bin_000003 0.2613992691 0.348581849 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 84 AH1_2nd_20:bin_000002 0.2766415861 0.507846131 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales RUG14156 85 AH1_2nd_14:bin_000052 0.2779682141 0.459398785 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 86 AH1_2nd_5:bin_000069 0.2961834495 0.514844096 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 87 AH1_2nd_10:bin_000042 0.3144096547 0.427721859 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 88 LI1_2nd_9:bin_000004 0.3184344306 0.409221234 d__Bacteria Cyanobacteriota c__Vampirovibrionia Gastranaerophilales Gastranaerophilaceae 89 AH1_2nd_18:bin_000011 0.3274960816 0.251425608 d__Bacteria Bacillota c__Bacilli Erysipelotrichales Coprobacillaceae 90 LI1_2nd_9:bin_000023 0.3443726181 0.270576132 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 91 AH1_2nd_11:bin_000005 0.3665271893 0.505844685 d__Bacteria Fusobacteriota c__Fusobacteriia Fusobacteriales Fusobacteriaceae 92 LI1_2nd_8:bin_000006 0.3879724693 0.274608494 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Rikenellaceae 93 LI1_2nd_9:bin_000032 0.3934158680 1.000000000 d__Bacteria Pseudomonadota c__Alphaproteobacteria RF32 CAG-239 94 AH1_2nd_19:bin_000011 0.3937120840 0.314872688 d__Bacteria Desulfobacterota c__Desulfovibrionia Desulfovibrionales Desulfovibrionaceae 95 LI1_2nd_8:bin_000064 0.4156377287 0.431281910 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Tannerellaceae 96 LI1_2nd_7:bin_000040 0.4274804616 0.353692175 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 97 LI1_2nd_10:bin_000018 0.4380289924 0.377319447 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae 98 AH1_2nd_20:bin_000042 0.4506978505 0.246336185 d__Bacteria Bacillota_A c__Clostridia Lachnospirales Lachnospiraceae 99 AH1_2nd_6:bin_000062 0.4525175250 0.151363390 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Muribaculaceae 100 AH1_2nd_10:bin_000069 0.4746941548 0.318348394 d__Bacteria Bacteroidota c__Bacteroidia Bacteroidales Bacteroidaceae genus species 1 Proteus Proteus cibarius 2 Lacrimispora 3 CALURL01 4 Bacteroides 5 JAAYNV01 6 Hungatella_A 7 Parabacteroides 8 9 Eisenbergiella 10 11 12 Butyricimonas 13 Bacteroides Bacteroides fragilis_B 14 Hungatella_A 15 Scatomorpha 16 17 Scatenecus 18 CAZU01 19 20 Mailhella 21 CAZU01 22 Copromonas 23 Fournierella 24 Ureaplasma 25 26 Bacteroides 27 Ruthenibacterium 28 Alistipes 29 Bacteroides 30 Bacteroides Bacteroides intestinalis 31 Phocaeicola 32 Blautia 33 Anaerotruncus 34 Odoribacter 35 36 37 Alistipes 38 WRHT01 39 Alistipes 40 Beduini 41 Velocimicrobium 42 Alistipes 43 Pseudoflavonifractor 44 Marseille-P3106 45 Acetatifactor 46 Odoribacter 47 Fournierella 48 Bacteroides 49 Parabacteroides 50 Parabacteroides Parabacteroides gordonii 51 Pseudoflavonifractor 52 Lacrimispora 53 54 Phocaeicola 55 Rikenella 56 57 Odoribacter 58 CAJLXD01 59 Limenecus 60 61 Enterocloster 62 Agrobacterium Agrobacterium tumefaciens_H 63 Parabacteroides 64 65 Bilophila 66 Parabacteroides_B 67 68 Bacteroides Bacteroides nordii 69 RGIG4733 70 Lachnotalea 71 Akkermansia 72 Copromonas 73 74 Desulfovibrio 75 Bacteroides 76 Clostridium_Q 77 Blautia_A 78 Parabacteroides Parabacteroides goldsteinii 79 Oscillibacter 80 Parabacteroides 81 Odoribacter 82 Helicobacter_J 83 Scatousia 84 RUG14156 85 Bacteroides 86 Bacteroides 87 Alistipes 88 Scatousia 89 Coprobacillus 90 JALFVM01 91 Fusobacterium_A Fusobacterium_A ulcerans 92 Alistipes 93 CAZU01 94 Mailhella 95 Parabacteroides 96 97 Bacteroides 98 Hungatella 99 HGM05232 100 Bacteroides [ reached &#39;max&#39; / getOption(&quot;max.print&quot;) -- omitted 152 rows ] colors_alphabetic &lt;- read_tsv(&quot;https://raw.githubusercontent.com/earthhologenome/EHI_taxonomy_colour/main/ehi_phylum_colors.tsv&quot;) %&gt;% mutate_at(vars(phylum), ~ str_replace(., &quot;[dpcofgs]__&quot;, &quot;&quot;)) %&gt;% right_join(taxonomy, by=join_by(phylum == phylum)) %&gt;% dplyr::select(phylum, colors) %&gt;% mutate(colors = str_c(colors, &quot;80&quot;)) %&gt;% #add 80% alpha unique() %&gt;% dplyr::arrange(phylum) tax_table &lt;- as.data.frame(unique(ancombc_rand_table_mag$phylum)) colnames(tax_table)[1] &lt;- &quot;phylum&quot; tax_color &lt;- merge(tax_table, colors_alphabetic, by=&quot;phylum&quot;)%&gt;% dplyr::arrange(phylum) %&gt;% dplyr::select(colors) %&gt;% pull() ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_typeWarm_control &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_typeWarm_control, y = -log10(p_typeWarm_control), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_typeWarm_control &gt;= 0.05), aes(x = lfc_typeWarm_control, y = -log10(p_typeWarm_control)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 3.5)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_typeWarm_control), y = 4, label = &quot;Cold-intervention&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_typeTreatment), y = 4, label = &quot;Warm-control&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in intervention control ancombc_rand_table_mag%&gt;% filter(p_typeWarm_control &lt; 0.05) %&gt;% filter(lfc_typeWarm_control&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 11 2 Bacteroidota 7 3 Bacillota 2 4 Pseudomonadota 2 5 Bacillota_C 1 6 Campylobacterota 1 Phyla of the significant MAGs in warm group ancombc_rand_table_mag%&gt;% filter(p_typeWarm_control &lt; 0.05) %&gt;% filter(lfc_typeWarm_control&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 3 2 Bacteroidota 2 3 Desulfobacterota 1 16.2.4.2 Intervention vs cold control Structural zeros struc &lt;- structural_zeros %&gt;% filter(present==&quot;Cold_control&quot;)%&gt;% count(phylum, name = &quot;Cold_control&quot;) %&gt;% arrange(desc(Cold_control)) structural_zeros %&gt;% filter(present==&quot;Cold_intervention&quot;)%&gt;% count(phylum, name = &quot;Cold_intervention&quot;) %&gt;% arrange(desc(Cold_intervention)) %&gt;% full_join(., struc, by=&quot;phylum&quot;) %&gt;% mutate(across(everything(), ~ ifelse(is.na(.), 0, .))) %&gt;% tt() .table td.tinytable_css_vphrjrun90joryawi61x, .table th.tinytable_css_vphrjrun90joryawi61x { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_ezsmuunybnm08kopqm1m, .table th.tinytable_css_ezsmuunybnm08kopqm1m { border-bottom: solid #d3d8dc 0.1em; } phylum Cold_intervention Cold_control p__Bacillota_A 0 12 p__Bacteroidota 0 5 p__Bacillota 0 3 p__Pseudomonadota 0 3 p__Cyanobacteriota 0 2 p__Actinomycetota 0 1 p__Bacillota_C 0 1 p__Chlamydiota 0 1 p__Desulfobacterota 0 1 phylo_samples &lt;- sample_metadata %&gt;% filter(type %in% c(&quot;Cold_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT2&quot;)%&gt;% column_to_rownames(&quot;Tube_code&quot;) %&gt;% sample_data() phylo_genome &lt;- genome_counts_filt %&gt;% filter(!genome %in% structural_zeros$genome) %&gt;% select(one_of(c(&quot;genome&quot;,rownames(phylo_samples)))) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(genome, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% otu_table(., taxa_are_rows = TRUE) phylo_taxonomy &lt;- genome_metadata %&gt;% filter(genome %in% rownames(phylo_genome)) %&gt;% column_to_rownames(&quot;genome&quot;) %&gt;% dplyr::select(domain,phylum,class,order,family,genus,species) %&gt;% as.matrix() %&gt;% tax_table() physeq_genome_filtered &lt;- phyloseq(phylo_genome, phylo_taxonomy, phylo_samples) ancom_rand_output_cold_fmt2 = ancombc2(data = physeq_genome_filtered, assay_name = &quot;counts&quot;, tax_level = NULL, fix_formula = &quot;type&quot;, p_adj_method = &quot;holm&quot;, pseudo_sens = TRUE, prv_cut =0, lib_cut = 0, s0_perc = 0.05, group = NULL, struc_zero = FALSE, neg_lb = FALSE, alpha = 0.05, n_cl = 2, verbose = TRUE, global = FALSE, pairwise = FALSE, dunnet = FALSE, trend = FALSE, iter_control = list(tol = 1e-5, max_iter = 20, verbose = FALSE), em_control = list(tol = 1e-5, max_iter = 100), mdfdr_control = list(fwer_ctrl_method = &quot;holm&quot;, B = 100), trend_control = NULL) save(ancom_rand_output_cold_fmt2, file=&quot;data/ancom_rand_output_cold_fmt2.RData&quot;) load(&quot;data/ancom_rand_output_cold_fmt2.RData&quot;) ancom_rand_output_cold_fmt2$res %&gt;% dplyr::select(taxon, lfc_typeCold_intervention, p_typeCold_intervention) %&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% left_join(., genome_metadata, by=join_by(&quot;taxon&quot;==&quot;genome&quot;)) %&gt;% select(2,3,7,8,9) %&gt;% tt() .table td.tinytable_css_l1fbvjfromiqu2bv8d9e, .table th.tinytable_css_l1fbvjfromiqu2bv8d9e { border-top: solid #d3d8dc 0.1em; border-bottom: solid #d3d8dc 0.05em; } .table td.tinytable_css_dkj4zdt1k3xsdq5b7hnr, .table th.tinytable_css_dkj4zdt1k3xsdq5b7hnr { border-bottom: solid #d3d8dc 0.1em; } lfc_typeCold_intervention p_typeCold_intervention order family genus 1.3855850 0.0064491725 o__Desulfovibrionales f__Desulfovibrionaceae g__Bilophila 1.5501029 0.0302768903 o__Gastranaerophilales f__Gastranaerophilaceae g__CALURL01 -1.8559129 0.0181781055 o__Campylobacterales f__Helicobacteraceae g__Helicobacter_J -1.1698109 0.0273494865 o__RF32 f__CAG-239 g__MGBC133411 1.5634296 0.0036684241 o__Bacteroidales f__Bacteroidaceae g__Bacteroides -1.0686551 0.0392169312 o__Lachnospirales f__Lachnospiraceae g__Ventrimonas -1.0674883 0.0273334620 o__Bacteroidales f__Bacteroidaceae g__ -1.3795548 0.0372333455 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -2.7034394 0.0002097519 o__Bacteroidales f__Tannerellaceae g__Parabacteroides -2.5205419 0.0278166872 o__Lachnospirales f__Lachnospiraceae g__Roseburia 2.3748396 0.0280714399 o__Opitutales f__LL51 g__ -1.2676374 0.0347793310 o__Gastranaerophilales f__Gastranaerophilaceae g__Scatousia 1.2447066 0.0427108722 o__Lachnospirales f__Lachnospiraceae g__MGBC136627 1.2378143 0.0272406450 o__Lachnospirales f__Lachnospiraceae g__Hungatella 0.9938938 0.0207674323 o__Desulfovibrionales f__Desulfovibrionaceae g__Mailhella 1.4439873 0.0253613981 o__Lachnospirales f__Lachnospiraceae g__JAAYNV01 1.9838314 0.0186136365 o__Opitutales f__LL51 g__ 1.6083831 0.0344901392 o__Selenomonadales f__ g__ -1.0684248 0.0137847823 o__Oscillospirales f__Acutalibacteraceae g__ 1.3518757 0.0057750643 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 2.7791170 0.0005632720 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.0060963 0.0459743383 o__Peptococcales f__Peptococcaceae g__RGIG6463 -1.7125376 0.0265594640 o__Bacteroidales f__Rikenellaceae g__Alistipes 1.4090490 0.0134214214 o__Bacteroidales f__Bacteroidaceae g__Bacteroides 1.2710590 0.0221619863 o__Lachnospirales f__Lachnospiraceae g__Copromonas 1.4457662 0.0199937621 o__Christensenellales f__UBA3700 g__ 1.1457323 0.0367174683 o__Lachnospirales f__Lachnospiraceae g__ ancombc_rand_table_mag %&gt;% mutate( genome = factor(taxon, levels = ancombc_rand_table_mag$taxon), significance = ifelse(p_typeCold_intervention &lt; 0.05, phylum, NA) # Set non-significant to NA (not mapped in legend) ) %&gt;% ggplot() + # Plot significant points with legend geom_point(aes(x = lfc_typeCold_intervention, y = -log10(p_typeCold_intervention), color = significance), size = 3, alpha = 0.7, na.rm = TRUE) + # Plot non-significant points separately without legend geom_point(data = filter(ancombc_rand_table_mag, p_typeCold_intervention &gt;= 0.05), aes(x = lfc_typeCold_intervention, y = -log10(p_typeCold_intervention)), color = &quot;grey70&quot;, size = 3, alpha = 0.7, show.legend = FALSE) + scale_color_manual( values = tax_color, # Only keeps phylum colors in legend na.translate = FALSE # Removes NA (non-significant) from legend ) + geom_hline(yintercept = -log10(0.05), linetype = &quot;dashed&quot;) + geom_vline(xintercept = 0, linetype = &quot;dashed&quot;) + scale_y_continuous(limits = c(0, 4)) + xlab(&quot;log2FoldChange&quot;) + ylab(&quot;-log10(p-value)&quot;) + guides(color = guide_legend(title = &quot;Phylum&quot;)) + theme_minimal()+ annotate(&quot;text&quot;, x = min(ancombc_rand_table_mag$lfc_typeTreatment), y = 4, label = &quot;Cold-control&quot;, hjust = 0, size = 4, fontface = &quot;bold&quot;) + annotate(&quot;text&quot;, x = max(ancombc_rand_table_mag$lfc_typeTreatment), y = 4, label = &quot;Cold-intervention&quot;, hjust = 1, size = 4, fontface = &quot;bold&quot;) Phyla of the significant MAGs in intervention group ancombc_rand_table_mag%&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% filter(lfc_typeCold_intervention&gt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacillota_A 6 2 Bacteroidota 4 3 Desulfobacterota 2 4 Verrucomicrobiota 2 5 Bacillota_B 1 6 Bacillota_C 1 7 Cyanobacteriota 1 Phyla of the significant MAGs in cold control ancombc_rand_table_mag%&gt;% filter(p_typeCold_intervention &lt; 0.05) %&gt;% filter(lfc_typeCold_intervention&lt;0) %&gt;% count(phylum, name = &quot;sample_count&quot;) %&gt;% arrange(desc(sample_count)) phylum sample_count 1 Bacteroidota 4 2 Bacillota_A 3 3 Campylobacterota 1 4 Cyanobacteriota 1 5 Pseudomonadota 1 16.2.4.3 Functional differences MCI GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point==&quot;FMT2&quot;) %&gt;% group_by(type) %&gt;% summarise(MCI = mean(value), sd = sd(value)) # A tibble: 3 × 3 type MCI sd &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; 1 Cold_control 0.352 0.0223 2 Cold_intervention 0.346 0.0255 3 Warm_control 0.350 0.0293 MCI_FMT2 &lt;- GIFTs_functions_community %&gt;% rowMeans() %&gt;% as_tibble(., rownames = &quot;sample&quot;) %&gt;% left_join(sample_metadata, by = join_by(sample == Tube_code)) %&gt;% filter(time_point == &quot;FMT2&quot;) shapiro.test(MCI_FMT2$value) Shapiro-Wilk normality test data: MCI_FMT2$value W = 0.96248, p-value = 0.4203 res.aov &lt;- aov(value ~ type, data = MCI_FMT2) summary(res.aov) Df Sum Sq Mean Sq F value Pr(&gt;F) type 2 0.00017 0.0000852 0.127 0.881 Residuals 24 0.01604 0.0006682 Functional differences CC and CI significant_elements&lt;-element_gift %&gt;% filter(type %in% c(&quot;Cold_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where( ~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code, type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust = p.adjust(p_value, method = &quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05) %&gt;% remove_rownames() %&gt;% left_join(., uniqueGIFT_db, by=join_by(&quot;trait&quot;==&quot;Code_element&quot;)) element_gift_sig &lt;- element_gift %&gt;% select(Tube_code, all_of(intersect( significant_elements$trait, colnames(element_gift) ))) %&gt;% left_join(., sample_metadata[c(1, 6)], by = join_by(Tube_code == Tube_code)) %&gt;% filter(type!=&quot;Warm_control&quot;) difference_table &lt;- element_gift_sig %&gt;% select(-Tube_code) %&gt;% group_by(type) %&gt;% summarise(across(everything(), mean)) %&gt;% t() %&gt;% row_to_names(row_number = 1) %&gt;% as.data.frame() %&gt;% mutate_if(is.character, as.numeric) %&gt;% rownames_to_column(., &quot;Elements&quot;) %&gt;% left_join(.,uniqueGIFT_db[c(1,3,4)],by = join_by(Elements == Code_element)) %&gt;% arrange(Function) %&gt;% mutate(Difference=Cold_control-Cold_intervention)%&gt;% mutate(group_color = ifelse(Difference &lt;0, &quot;Cold_control&quot;,&quot;Cold_intervention&quot;)) difference_table %&gt;% ggplot(aes(x=forcats::fct_reorder(Function,Difference), y=Difference, fill=group_color)) + geom_col() + scale_fill_manual(values=c(&quot;#4477AA&quot;,&quot;#76b183&quot;)) + geom_hline(yintercept=0) + coord_flip()+ theme(axis.text = element_text(size = 10), axis.title = element_text(size = 12), legend.position = &quot;right&quot;, legend.title = element_blank(), panel.background = element_blank(), panel.grid.major = element_line(size = 0.15, linetype = &#39;solid&#39;, colour = &quot;grey&quot;))+ xlab(&quot;Function&quot;) + ylab(&quot;Mean difference&quot;) CI and WC element_gift %&gt;% filter(type %in% c(&quot;Warm_control&quot;, &quot;Cold_intervention&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; CC and WC element_gift %&gt;% filter(type %in% c(&quot;Warm_control&quot;, &quot;Cold_control&quot;) &amp; time_point == &quot;FMT2&quot;) %&gt;% select(-time_point, -type) %&gt;% filter(rowSums(across(where(is.numeric), ~ . != 0)) &gt; 0) %&gt;% select(Tube_code, where(~ is.numeric(.) &amp;&amp; sum(.) &gt; 0)) %&gt;% left_join(sample_metadata[c(1, 6)], by = &quot;Tube_code&quot;) %&gt;% pivot_longer(-c(Tube_code,type), names_to = &quot;trait&quot;, values_to = &quot;value&quot;) %&gt;% group_by(trait) %&gt;% summarise(p_value = wilcox.test(value ~ type)$p.value) %&gt;% mutate(p_adjust=p.adjust(p_value, method=&quot;BH&quot;)) %&gt;% filter(p_adjust &lt; 0.05)%&gt;% remove_rownames() # A tibble: 0 × 3 # ℹ 3 variables: trait &lt;chr&gt;, p_value &lt;dbl&gt;, p_adjust &lt;dbl&gt; "],["physiological-measurements.html", "Chapter 17 Physiological measurements 17.1 Respirometry", " Chapter 17 Physiological measurements 17.1 Respirometry load(&quot;data/data_25082025.Rdata&quot;) respirometry_resp2 &lt;- read_excel(&quot;data/respirometry_resp2.xlsx&quot;) respirometry_resp2$individual &lt;- as.factor(respirometry_resp2$individual) respirometry_resp2$cage &lt;- as.factor(respirometry_resp2$cage) respirometry_resp2$time_point &lt;- as.factor(respirometry_resp2$time_point) respirometry_resp2$type &lt;- as.factor(respirometry_resp2$type) respirometry_resp2$population &lt;- as.factor(respirometry_resp2$population) respirometry_resp2$QC_normalized &lt;- as.numeric(respirometry_resp2$QC_normalized) respirometry_resp2$r2 &lt;- as.numeric(respirometry_resp2$r2) #Filter NA values respirometry_resp2&lt;-respirometry_resp2 %&gt;% filter(QC_normalized!=&quot;NA&quot;) 17.1.1 Acclimation oxygen consumption respirometry_resp2 %&gt;% filter(time_point==&quot;0&quot;)%&gt;% filter(individual!=&quot;AH1_2nd_8&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_4&quot;) %&gt;% filter(individual!=&quot;LI1_2nd_3&quot;) %&gt;% #lizard doesn&#39;t stop moving during the whole measurement, increasing the value and making it and outlier filter(individual!=&quot;LI1_2nd_10&quot;) %&gt;% ggplot(aes(x = population, y = QC_normalized, color=population, fill=population, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#008080&#39;, &quot;#d57d2c&quot;)) + scale_fill_manual(name=&quot;Population&quot;, breaks=c(&quot;Cold&quot;,&quot;Warm&quot;), labels=c(&quot;Cold&quot;,&quot;Warm&quot;), values=c(&#39;#00808050&#39;, &quot;#d57d2c50&quot;))+ #geom_text(aes(label = individual), hjust = 0, nudge_x = 0.05) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust=1))+ stat_compare_means(size=3,vjust = 3, hjust=1 )+ theme(legend.position=&quot;none&quot;, panel.background = element_blank(), panel.grid.major = element_blank(), panel.grid.minor = element_blank())+ theme_minimal()+ labs(x = &quot;Population&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) 17.1.2 Time-point oxygen consumption respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;) %&gt;% #r2 low ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ theme(legend.position=&quot;right&quot;)+ theme_classic()+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;) respirometry_resp2 %&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% ggplot(aes(x = time_point, y = QC_normalized, color=time_point, fill=time_point, alpha=0.2)) + geom_boxplot()+ geom_jitter() + scale_color_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA366&#39;, &quot;#dec14b&quot;, &quot;#6E5244&quot;)) + scale_fill_manual(name=&quot;Time_point&quot;, breaks=c(&quot;0&quot;,&quot;1&quot;,&quot;2&quot;), labels=c(&quot;Acclimation&quot;,&quot;1 week post FMT&quot;, &quot;2 weeks post FMT&quot;), values=c(&#39;#BFA36650&#39;, &quot;#dec14b50&quot;,&quot;#6E524450&quot;))+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))+ facet_wrap(~ factor(type))+ stat_compare_means(size=3)+ theme(legend.position=&quot;none&quot;)+ labs(x = &quot;Time_point&quot;, y= &quot;Normalized O2 consumption (ml/s/g)&quot;)+ geom_signif(comparisons = list(c(&quot;0&quot;, &quot;1&quot;), c(&quot;0&quot;, &quot;2&quot;), c(&quot;1&quot;, &quot;2&quot;)), map_signif_level = TRUE) 17.1.3 Data modelling 17.1.3.1 CI from acclimation to post FMT #subset all the wrong measurements respirometry_resp2_subsetci&lt;-respirometry_resp2%&gt;% filter(type!=&quot;WC&quot;)%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;)%&gt;% filter(type==&quot;CI&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point, data = respirometry_resp2_subsetci, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subsetci AIC BIC logLik -309.2305 -304.2518 159.6152 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 2.29294e-05 6.76107e-05 Fixed effects: QC_normalized ~ time_point Value Std.Error DF t-value p-value (Intercept) 0.0004114141 2.521493e-05 12 16.316288 0.0000 time_point1 -0.0001157218 3.700860e-05 12 -3.126888 0.0087 time_point2 -0.0001871709 3.294370e-05 12 -5.681539 0.0001 Correlation: (Intr) tm_pn1 time_point1 -0.622 time_point2 -0.695 0.476 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.6331042 -0.4856905 -0.3210267 0.6764998 1.7762233 Number of Observations: 23 Number of Groups: 9 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.5715768 0.6157691 17.1.3.2 CC from acclimation to post FMT #subset all the wrong measurements respirometry_resp2_subsetcc&lt;-respirometry_resp2%&gt;% filter(type!=&quot;WC&quot;)%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;)%&gt;% filter(type==&quot;CC&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point, data = respirometry_resp2_subsetcc, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subsetcc AIC BIC logLik -154.1358 -152.1463 82.0679 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 5.171869e-05 0.0001025694 Fixed effects: QC_normalized ~ time_point Value Std.Error DF t-value p-value (Intercept) 0.0004012041 5.137181e-05 7 7.809810 0.0001 time_point1 -0.0000504835 6.487061e-05 7 -0.778219 0.4619 time_point2 -0.0002544009 6.944695e-05 7 -3.663241 0.0080 Correlation: (Intr) tm_pn1 time_point1 -0.631 time_point2 -0.590 0.467 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.15689254 -0.50323582 -0.07749878 0.40769296 1.89013865 Number of Observations: 14 Number of Groups: 5 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.4769358 0.5829662 17.1.3.3 WC from acclimation to post FMT #subset all the wrong measurements respirometry_resp2_subsetwc&lt;-respirometry_resp2%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;)%&gt;% filter(type==&quot;WC&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point, data = respirometry_resp2_subsetwc, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subsetwc AIC BIC logLik -233.5539 -229.691 121.777 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 0.0001075056 6.948756e-05 Fixed effects: QC_normalized ~ time_point Value Std.Error DF t-value p-value (Intercept) 3.003645e-04 5.225790e-05 10 5.747734 0.0002 time_point1 1.761614e-05 4.206676e-05 10 0.418766 0.6842 time_point2 -6.069897e-05 4.206676e-05 10 -1.442920 0.1796 Correlation: (Intr) tm_pn1 time_point1 -0.491 time_point2 -0.491 0.610 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.3485818 -0.5221958 0.1544826 0.3441676 1.4275786 Number of Observations: 19 Number of Groups: 7 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.07285218 0.7267936 17.1.3.4 CC vs CI Raw data modelling (LMM) #subset all the wrong measurements respirometry_resp2_subset&lt;-respirometry_resp2%&gt;% filter(type!=&quot;WC&quot;)%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point+type, data = respirometry_resp2_subset, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subset AIC BIC logLik -499.7762 -490.7972 255.8881 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 2.828782e-05 8.566976e-05 Fixed effects: QC_normalized ~ time_point + type Value Std.Error DF t-value p-value (Intercept) 0.0004015990 3.245994e-05 21 12.372144 0.0000 time_point1 -0.0000856584 3.541372e-05 21 -2.418792 0.0247 time_point2 -0.0002059412 3.378535e-05 21 -6.095577 0.0000 typeCI 0.0000094826 3.334928e-05 12 0.284343 0.7810 Correlation: (Intr) tm_pn1 tm_pn2 time_point1 -0.530 time_point2 -0.478 0.472 typeCI -0.638 0.055 -0.063 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.6356763 -0.5924021 -0.1745957 0.3513656 2.8648961 Number of Observations: 37 Number of Groups: 14 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.4855379 0.536115 17.1.3.5 CI vs WC Raw data modelling (LMM) #Filter out WC from the dataframe and create a subset respirometry_resp2_subset&lt;-respirometry_resp2%&gt;% filter(weight!=5.19)%&gt;% filter(weight!=5.91)%&gt;% filter(weight!=5.03)%&gt;% filter(r2!=0.808)%&gt;% filter(QC_normalized!=0.000036) %&gt;% #r2 low filter(r2!=0.728) %&gt;% filter(cage!=&quot;Cold_17&quot;) %&gt;% filter(cage!=&quot;Cold_3&quot;) %&gt;% filter(cage!=&quot;Cold_6&quot;) %&gt;% filter(cage!=&quot;Cold_9&quot;) %&gt;% filter(cage!=&quot;Hot_2&quot;) %&gt;% filter(cage!=&quot;Hot_8&quot;) #Create linear model formula model &lt;- lme(fixed = QC_normalized ~ time_point+type, data = respirometry_resp2_subset, random = ~ 1 | individual) #Print the model summary summary(model) Linear mixed-effects model fit by REML Data: respirometry_resp2_subset AIC BIC logLik -765.5592 -752.0364 389.7796 Random effects: Formula: ~1 | individual (Intercept) Residual StdDev: 7.00926e-05 8.491172e-05 Fixed effects: QC_normalized ~ time_point + type Value Std.Error DF t-value p-value (Intercept) 0.0003725904 4.195910e-05 33 8.879849 0.0000 time_point1 -0.0000487464 2.909231e-05 33 -1.675576 0.1033 time_point2 -0.0001601635 2.806418e-05 33 -5.707045 0.0000 typeCI 0.0000122457 4.883159e-05 18 0.250774 0.8048 typeWC -0.0000129492 5.103162e-05 18 -0.253748 0.8026 Correlation: (Intr) tm_pn1 tm_pn2 typeCI time_point1 -0.347 time_point2 -0.314 0.517 typeCI -0.736 0.030 -0.038 typeWC -0.683 -0.036 -0.060 0.606 Standardized Within-Group Residuals: Min Q1 Med Q3 Max -1.5658463 -0.5182418 -0.1041003 0.5945025 2.3909153 Number of Observations: 56 Number of Groups: 21 MuMIn::r.squaredGLMM(model) R2m R2c [1,] 0.2849197 0.5747142 "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
